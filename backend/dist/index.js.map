{"version":3,"sources":["../../node_modules/pg/node_modules/pg-types/node_modules/postgres-array/index.js","../../node_modules/pg/node_modules/pg-types/lib/arrayParser.js","../../node_modules/pg/node_modules/pg-types/node_modules/postgres-date/index.js","../../node_modules/xtend/mutable.js","../../node_modules/pg/node_modules/pg-types/node_modules/postgres-interval/index.js","../../node_modules/pg/node_modules/pg-types/node_modules/postgres-bytea/index.js","../../node_modules/pg/node_modules/pg-types/lib/textParsers.js","../../node_modules/pg-int8/index.js","../../node_modules/pg/node_modules/pg-types/lib/binaryParsers.js","../../node_modules/pg/node_modules/pg-types/lib/builtins.js","../../node_modules/pg/node_modules/pg-types/index.js","../../node_modules/pg/lib/defaults.js","../../node_modules/pg/lib/utils.js","../../node_modules/pg/lib/crypto/utils-legacy.js","../../node_modules/pg/lib/crypto/utils-webcrypto.js","../../node_modules/pg/lib/crypto/utils.js","../../node_modules/pg/lib/crypto/sasl.js","../../node_modules/pg/lib/type-overrides.js","../../node_modules/pg-connection-string/index.js","../../node_modules/pg/lib/connection-parameters.js","../../node_modules/pg/lib/result.js","../../node_modules/pg/lib/query.js","../../node_modules/pg-protocol/src/messages.ts","../../node_modules/pg-protocol/src/buffer-writer.ts","../../node_modules/pg-protocol/src/serializer.ts","../../node_modules/pg-protocol/src/buffer-reader.ts","../../node_modules/pg-protocol/src/parser.ts","../../node_modules/pg-protocol/src/index.ts","../../node_modules/pg-cloudflare/src/empty.ts","../../node_modules/pg/lib/stream.js","../../node_modules/pg/lib/connection.js","../../node_modules/split2/index.js","../../node_modules/pgpass/lib/helper.js","../../node_modules/pgpass/lib/index.js","../../node_modules/pg/lib/client.js","../../node_modules/pg-pool/index.js","../../node_modules/pg/lib/native/query.js","../../node_modules/pg/lib/native/client.js","../../node_modules/pg/lib/native/index.js","../../node_modules/pg/lib/index.js","../../node_modules/delayed-stream/lib/delayed_stream.js","../../node_modules/combined-stream/lib/combined_stream.js","../../node_modules/mime-db/db.json","../../node_modules/mime-db/index.js","../../node_modules/mime-types/index.js","../../node_modules/asynckit/lib/defer.js","../../node_modules/asynckit/lib/async.js","../../node_modules/asynckit/lib/abort.js","../../node_modules/asynckit/lib/iterate.js","../../node_modules/asynckit/lib/state.js","../../node_modules/asynckit/lib/terminator.js","../../node_modules/asynckit/parallel.js","../../node_modules/asynckit/serialOrdered.js","../../node_modules/asynckit/serial.js","../../node_modules/asynckit/index.js","../../node_modules/es-object-atoms/index.js","../../node_modules/es-errors/index.js","../../node_modules/es-errors/eval.js","../../node_modules/es-errors/range.js","../../node_modules/es-errors/ref.js","../../node_modules/es-errors/syntax.js","../../node_modules/es-errors/type.js","../../node_modules/es-errors/uri.js","../../node_modules/math-intrinsics/abs.js","../../node_modules/math-intrinsics/floor.js","../../node_modules/math-intrinsics/max.js","../../node_modules/math-intrinsics/min.js","../../node_modules/math-intrinsics/pow.js","../../node_modules/math-intrinsics/round.js","../../node_modules/math-intrinsics/isNaN.js","../../node_modules/math-intrinsics/sign.js","../../node_modules/gopd/gOPD.js","../../node_modules/gopd/index.js","../../node_modules/es-define-property/index.js","../../node_modules/has-symbols/shams.js","../../node_modules/has-symbols/index.js","../../node_modules/get-proto/Reflect.getPrototypeOf.js","../../node_modules/get-proto/Object.getPrototypeOf.js","../../node_modules/function-bind/implementation.js","../../node_modules/function-bind/index.js","../../node_modules/call-bind-apply-helpers/functionCall.js","../../node_modules/call-bind-apply-helpers/functionApply.js","../../node_modules/call-bind-apply-helpers/reflectApply.js","../../node_modules/call-bind-apply-helpers/actualApply.js","../../node_modules/call-bind-apply-helpers/index.js","../../node_modules/dunder-proto/get.js","../../node_modules/get-proto/index.js","../../node_modules/hasown/index.js","../../node_modules/get-intrinsic/index.js","../../node_modules/has-tostringtag/shams.js","../../node_modules/es-set-tostringtag/index.js","../../node_modules/form-data/lib/populate.js","../../node_modules/form-data/lib/form_data.js","../../node_modules/proxy-from-env/index.js","../../node_modules/ms/index.js","../../node_modules/debug/src/common.js","../../node_modules/debug/src/browser.js","../../node_modules/has-flag/index.js","../../node_modules/supports-color/index.js","../../node_modules/debug/src/node.js","../../node_modules/debug/src/index.js","../../node_modules/follow-redirects/debug.js","../../node_modules/follow-redirects/index.js","../src/index.ts","../src/config/env.ts","../src/eliza/index.ts","../src/bork-protocol/extensions/src/db/index.ts","../src/bork-protocol/extensions/src/db/queries.ts","../../node_modules/uuid/dist/esm/stringify.js","../../node_modules/uuid/dist/esm/rng.js","../../node_modules/uuid/dist/esm/native.js","../../node_modules/uuid/dist/esm/v4.js","../src/bork-protocol/services/injective/database-service.ts","../src/bork-protocol/types/injective/market-history.ts","../src/bork-protocol/services/injective/injective-service.ts","../src/bork-protocol/services/injective/market-analysis-service.ts","../src/bork-protocol/clients/injective-client/index.ts","../src/config/injective.ts","../src/bork-protocol/helpers/tweet-merging-helper.ts","../src/bork-protocol/helpers/tweet-validation-helper.ts","../src/bork-protocol/utils/tweet-analysis/process-tweets.ts","../src/bork-protocol/utils/account-metrics/update-influence-score.ts","../src/bork-protocol/helpers/repair-tweet-analysis-helper.ts","../src/bork-protocol/helpers/spam-helper.ts","../src/bork-protocol/templates/analysis.ts","../src/bork-protocol/types/response/tweet-analysis.ts","../src/bork-protocol/utils/tweet-analysis/process-single-tweet.ts","../src/bork-protocol/utils/topic-weights/topics.ts","../src/bork-protocol/utils/tweet-analysis/process-accounts.ts","../src/bork-protocol/utils/tweet-analysis/process-knowledge.ts","../src/bork-protocol/services/twitter/tweet-queue.service.ts","../src/bork-protocol/services/twitter/twitter-service.ts","../src/bork-protocol/services/twitter/twitter-auth.service.ts","../src/bork-protocol/services/twitter/twitter-cache.service.ts","../src/bork-protocol/services/twitter/twitter-request.service.ts","../src/bork-protocol/services/twitter/twitter-spam.service.ts","../src/bork-protocol/clients/x-client/index.ts","../src/bork-protocol/services/twitter/twitter-account-discovery-service.ts","../src/bork-protocol/services/twitter/twitter-config-service.ts","../src/bork-protocol/clients/x-client/account-discovery.ts","../src/bork-protocol/utils/initialize-db/accounts.ts","../src/bork-protocol/utils/initialize-db/topics.ts","../src/bork-protocol/utils/selection/select-account.ts","../src/bork-protocol/services/kaito/kaito-service.ts","../../node_modules/axios/lib/helpers/bind.js","../../node_modules/axios/lib/utils.js","../../node_modules/axios/lib/core/AxiosError.js","../../node_modules/axios/lib/platform/node/classes/FormData.js","../../node_modules/axios/lib/helpers/toFormData.js","../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../../node_modules/axios/lib/helpers/buildURL.js","../../node_modules/axios/lib/core/InterceptorManager.js","../../node_modules/axios/lib/defaults/transitional.js","../../node_modules/axios/lib/platform/node/index.js","../../node_modules/axios/lib/platform/node/classes/URLSearchParams.js","../../node_modules/axios/lib/platform/common/utils.js","../../node_modules/axios/lib/platform/index.js","../../node_modules/axios/lib/helpers/toURLEncodedForm.js","../../node_modules/axios/lib/helpers/formDataToJSON.js","../../node_modules/axios/lib/defaults/index.js","../../node_modules/axios/lib/helpers/parseHeaders.js","../../node_modules/axios/lib/core/AxiosHeaders.js","../../node_modules/axios/lib/core/transformData.js","../../node_modules/axios/lib/cancel/isCancel.js","../../node_modules/axios/lib/cancel/CanceledError.js","../../node_modules/axios/lib/core/settle.js","../../node_modules/axios/lib/helpers/isAbsoluteURL.js","../../node_modules/axios/lib/helpers/combineURLs.js","../../node_modules/axios/lib/core/buildFullPath.js","../../node_modules/axios/lib/adapters/http.js","../../node_modules/axios/lib/env/data.js","../../node_modules/axios/lib/helpers/parseProtocol.js","../../node_modules/axios/lib/helpers/fromDataURI.js","../../node_modules/axios/lib/helpers/AxiosTransformStream.js","../../node_modules/axios/lib/helpers/formDataToStream.js","../../node_modules/axios/lib/helpers/readBlob.js","../../node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js","../../node_modules/axios/lib/helpers/callbackify.js","../../node_modules/axios/lib/helpers/speedometer.js","../../node_modules/axios/lib/helpers/throttle.js","../../node_modules/axios/lib/helpers/progressEventReducer.js","../../node_modules/axios/lib/helpers/isURLSameOrigin.js","../../node_modules/axios/lib/helpers/cookies.js","../../node_modules/axios/lib/core/mergeConfig.js","../../node_modules/axios/lib/helpers/resolveConfig.js","../../node_modules/axios/lib/adapters/xhr.js","../../node_modules/axios/lib/helpers/composeSignals.js","../../node_modules/axios/lib/helpers/trackStream.js","../../node_modules/axios/lib/adapters/fetch.js","../../node_modules/axios/lib/adapters/adapters.js","../../node_modules/axios/lib/core/dispatchRequest.js","../../node_modules/axios/lib/helpers/validator.js","../../node_modules/axios/lib/core/Axios.js","../../node_modules/axios/lib/cancel/CancelToken.js","../../node_modules/axios/lib/helpers/spread.js","../../node_modules/axios/lib/helpers/isAxiosError.js","../../node_modules/axios/lib/helpers/HttpStatusCode.js","../../node_modules/axios/lib/axios.js","../../node_modules/axios/index.js","../src/bork-protocol/utils/account-metrics/yaps.ts","../src/bork-protocol/templates/topic-relationship.ts","../src/bork-protocol/types/response/topic-relationship.ts","../src/bork-protocol/utils/selection/analyze-topic-relationships.ts","../src/bork-protocol/mappers/tweet-mapper.ts","../src/bork-protocol/utils/selection/select-tweets-from-account.ts","../src/bork-protocol/clients/x-client/accounts.ts","../src/bork-protocol/templates/interaction.ts","../src/bork-protocol/utils/active-tweeting/tweet.ts","../src/bork-protocol/clients/x-client/interactions.ts","../src/bork-protocol/utils/selection/select-topic.ts","../src/bork-protocol/clients/x-client/search.ts","../src/bork-protocol/clients/index.ts","../src/bork-protocol/plugins/adapter-postgres/index.ts","../src/api/api.ts","../src/eliza/message-controller.ts","../src/eliza/error-response.ts","../src/eliza/message-request.ts","../src/eliza/message-response.ts","../src/eliza/message-service.ts","../src/eliza/base-templates.ts","../src/cache/initialize-db-cache.ts","../src/config/api-routes.ts","../src/config/index.ts","../src/eliza/character.ts"],"sourcesContent":["'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nclass ArrayParser {\n  constructor (source, transform) {\n    this.source = source\n    this.transform = transform || identity\n    this.position = 0\n    this.entries = []\n    this.recorded = []\n    this.dimension = 0\n  }\n\n  isEof () {\n    return this.position >= this.source.length\n  }\n\n  nextCharacter () {\n    var character = this.source[this.position++]\n    if (character === '\\\\') {\n      return {\n        value: this.source[this.position++],\n        escaped: true\n      }\n    }\n    return {\n      value: character,\n      escaped: false\n    }\n  }\n\n  record (character) {\n    this.recorded.push(character)\n  }\n\n  newEntry (includeEmpty) {\n    var entry\n    if (this.recorded.length > 0 || includeEmpty) {\n      entry = this.recorded.join('')\n      if (entry === 'NULL' && !includeEmpty) {\n        entry = null\n      }\n      if (entry !== null) entry = this.transform(entry)\n      this.entries.push(entry)\n      this.recorded = []\n    }\n  }\n\n  consumeDimensions () {\n    if (this.source[0] === '[') {\n      while (!this.isEof()) {\n        var char = this.nextCharacter()\n        if (char.value === '=') break\n      }\n    }\n  }\n\n  parse (nested) {\n    var character, parser, quote\n    this.consumeDimensions()\n    while (!this.isEof()) {\n      character = this.nextCharacter()\n      if (character.value === '{' && !quote) {\n        this.dimension++\n        if (this.dimension > 1) {\n          parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n          this.entries.push(parser.parse(true))\n          this.position += parser.position - 2\n        }\n      } else if (character.value === '}' && !quote) {\n        this.dimension--\n        if (!this.dimension) {\n          this.newEntry()\n          if (nested) return this.entries\n        }\n      } else if (character.value === '\"' && !character.escaped) {\n        if (quote) this.newEntry(true)\n        quote = !quote\n      } else if (character.value === ',' && !quote) {\n        this.newEntry()\n      } else {\n        this.record(character.value)\n      }\n    }\n    if (this.dimension !== 0) {\n      throw new Error('array dimension not balanced')\n    }\n    return this.entries\n  }\n}\n\nfunction identity (value) {\n  return value\n}\n","var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n","'use strict'\n\nvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/\nvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/\nvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\nvar INFINITY = /^-?infinity$/\n\nmodule.exports = function parseDate (isoDate) {\n  if (INFINITY.test(isoDate)) {\n    // Capitalize to Infinity before passing to Number\n    return Number(isoDate.replace('i', 'I'))\n  }\n  var matches = DATE_TIME.exec(isoDate)\n\n  if (!matches) {\n    // Force YYYY-MM-DD dates to be parsed as local time\n    return getDate(isoDate) || null\n  }\n\n  var isBC = !!matches[8]\n  var year = parseInt(matches[1], 10)\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  var hour = parseInt(matches[4], 10)\n  var minute = parseInt(matches[5], 10)\n  var second = parseInt(matches[6], 10)\n\n  var ms = matches[7]\n  ms = ms ? 1000 * parseFloat(ms) : 0\n\n  var date\n  var offset = timeZoneOffset(isoDate)\n  if (offset != null) {\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, ms))\n\n    // Account for years from 0 to 99 being interpreted as 1900-1999\n    // by Date.UTC / the multi-argument form of the Date constructor\n    if (is0To99(year)) {\n      date.setUTCFullYear(year)\n    }\n\n    if (offset !== 0) {\n      date.setTime(date.getTime() - offset)\n    }\n  } else {\n    date = new Date(year, month, day, hour, minute, second, ms)\n\n    if (is0To99(year)) {\n      date.setFullYear(year)\n    }\n  }\n\n  return date\n}\n\nfunction getDate (isoDate) {\n  var matches = DATE.exec(isoDate)\n  if (!matches) {\n    return\n  }\n\n  var year = parseInt(matches[1], 10)\n  var isBC = !!matches[4]\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  // YYYY-MM-DD will be parsed as local time\n  var date = new Date(year, month, day)\n\n  if (is0To99(year)) {\n    date.setFullYear(year)\n  }\n\n  return date\n}\n\n// match timezones:\n// Z (UTC)\n// -05\n// +06:30\nfunction timeZoneOffset (isoDate) {\n  if (isoDate.endsWith('+00')) {\n    return 0\n  }\n\n  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n  if (!zone) return\n  var type = zone[1]\n\n  if (type === 'Z') {\n    return 0\n  }\n  var sign = type === '-' ? -1 : 1\n  var offset = parseInt(zone[2], 10) * 3600 +\n    parseInt(zone[3] || 0, 10) * 60 +\n    parseInt(zone[4] || 0, 10)\n\n  return offset * sign * 1000\n}\n\nfunction bcYearToNegativeYear (year) {\n  // Account for numerical difference between representations of BC years\n  // See: https://github.com/bendrucker/postgres-date/issues/5\n  return -(year - 1)\n}\n\nfunction is0To99 (num) {\n  return num >= 0 && num < 100\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict'\n\nvar extend = require('xtend/mutable')\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n\n  // In addition to `properties`, we need to account for fractions of seconds.\n  if (this.milliseconds && filtered.indexOf('seconds') < 0) {\n    filtered.push('seconds')\n  }\n\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      var value = this[property] || 0\n\n      // Account for fractional part of seconds,\n      // remove trailing zeroes.\n      if (property === 'seconds' && this.milliseconds) {\n        value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, '')\n      }\n\n      return value + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar propertiesISOEquivalent = {\n  years: 'Y',\n  months: 'M',\n  days: 'D',\n  hours: 'H',\n  minutes: 'M',\n  seconds: 'S'\n}\nvar dateProperties = ['years', 'months', 'days']\nvar timeProperties = ['hours', 'minutes', 'seconds']\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function () {\n  var datePart = dateProperties\n    .map(buildProperty, this)\n    .join('')\n\n  var timePart = timeProperties\n    .map(buildProperty, this)\n    .join('')\n\n  return 'P' + datePart + 'T' + timePart\n\n  function buildProperty (property) {\n    var value = this[property] || 0\n\n    // Account for fractional part of seconds,\n    // remove trailing zeroes.\n    if (property === 'seconds' && this.milliseconds) {\n      value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, '')\n    }\n\n    return value + propertiesISOEquivalent[property]\n  }\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n  .join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds', 'milliseconds']\n\nfunction parseMilliseconds (fraction) {\n  // add omitted zeroes\n  var microseconds = fraction + '000000'.slice(fraction.length)\n  return parseInt(microseconds, 10) / 1000\n}\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      // milliseconds are actually microseconds (up to 6 digits)\n      // with omitted trailing zeroes.\n      value = property === 'milliseconds'\n        ? parseMilliseconds(value)\n        : parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n","'use strict'\n\nmodule.exports = function parseBytea (input) {\n  if (/^\\\\x/.test(input)) {\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(input.substr(2), 'hex')\n  }\n  var output = ''\n  var i = 0\n  while (i < input.length) {\n    if (input[i] !== '\\\\') {\n      output += input[i]\n      ++i\n    } else {\n      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n        i += 4\n      } else {\n        var backslashes = 1\n        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n          backslashes++\n        }\n        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n          output += '\\\\'\n        }\n        i += Math.floor(backslashes / 2) * 2\n      }\n    }\n  }\n  return new Buffer(output, 'binary')\n}\n","var array = require('postgres-array')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 'TRUE' ||\n    value === 't' ||\n    value === 'true' ||\n    value === 'y' ||\n    value === 'yes' ||\n    value === 'on' ||\n    value === '1';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseBaseTenInt (string) {\n  return parseInt(string, 10)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(parseBaseTenInt))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parsePointArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parsePoint(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseIntervalArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseInterval(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(parseByteA));\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(JSON.parse));\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(651, parseStringArray); // cidr[]\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1017, parsePointArray); // point[]\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1040, parseStringArray); // macaddr[]\n  register(1041, parseStringArray); // inet[]\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(1187, parseIntervalArray);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(3907, parseStringArray); // numrange[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n  register(1270, parseStringArray); // timetz[]\n};\n\nmodule.exports = {\n  init: init\n};\n","'use strict';\n\n// selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n\tvar high = buffer.readInt32BE(0);\n\tvar low = buffer.readUInt32BE(4);\n\tvar sign = '';\n\n\tif (high < 0) {\n\t\thigh = ~high + (low === 0);\n\t\tlow = (~low + 1) >>> 0;\n\t\tsign = '-';\n\t}\n\n\tvar result = '';\n\tvar carry;\n\tvar t;\n\tvar digits;\n\tvar pad;\n\tvar l;\n\tvar i;\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\tt = 0x100000000 * carry + low;\n\t\tdigits = '' + t % BASE;\n\n\t\treturn sign + digits + result;\n\t}\n}\n\nmodule.exports = readInt8;\n","var parseInt64 = require('pg-int8');\n\nvar parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(20, parseInt64);\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n","/**\n * Following query was used to generate this file:\n\n SELECT json_object_agg(UPPER(PT.typname), PT.oid::int4 ORDER BY pt.oid)\n FROM pg_type PT\n WHERE typnamespace = (SELECT pgn.oid FROM pg_namespace pgn WHERE nspname = 'pg_catalog') -- Take only builting Postgres types with stable OID (extension types are not guaranted to be stable)\n AND typtype = 'b' -- Only basic types\n AND typelem = 0 -- Ignore aliases\n AND typisdefined -- Ignore undefined types\n */\n\nmodule.exports = {\n    BOOL: 16,\n    BYTEA: 17,\n    CHAR: 18,\n    INT8: 20,\n    INT2: 21,\n    INT4: 23,\n    REGPROC: 24,\n    TEXT: 25,\n    OID: 26,\n    TID: 27,\n    XID: 28,\n    CID: 29,\n    JSON: 114,\n    XML: 142,\n    PG_NODE_TREE: 194,\n    SMGR: 210,\n    PATH: 602,\n    POLYGON: 604,\n    CIDR: 650,\n    FLOAT4: 700,\n    FLOAT8: 701,\n    ABSTIME: 702,\n    RELTIME: 703,\n    TINTERVAL: 704,\n    CIRCLE: 718,\n    MACADDR8: 774,\n    MONEY: 790,\n    MACADDR: 829,\n    INET: 869,\n    ACLITEM: 1033,\n    BPCHAR: 1042,\n    VARCHAR: 1043,\n    DATE: 1082,\n    TIME: 1083,\n    TIMESTAMP: 1114,\n    TIMESTAMPTZ: 1184,\n    INTERVAL: 1186,\n    TIMETZ: 1266,\n    BIT: 1560,\n    VARBIT: 1562,\n    NUMERIC: 1700,\n    REFCURSOR: 1790,\n    REGPROCEDURE: 2202,\n    REGOPER: 2203,\n    REGOPERATOR: 2204,\n    REGCLASS: 2205,\n    REGTYPE: 2206,\n    UUID: 2950,\n    TXID_SNAPSHOT: 2970,\n    PG_LSN: 3220,\n    PG_NDISTINCT: 3361,\n    PG_DEPENDENCIES: 3402,\n    TSVECTOR: 3614,\n    TSQUERY: 3615,\n    GTSVECTOR: 3642,\n    REGCONFIG: 3734,\n    REGDICTIONARY: 3769,\n    JSONB: 3802,\n    REGNAMESPACE: 4089,\n    REGROLE: 4096\n};\n","var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\nvar builtinTypes = require('./lib/builtins');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\nexports.builtins = builtinTypes;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n","'use strict'\n\nmodule.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  // database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  // name of database to connect\n  database: undefined,\n\n  // database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString: undefined,\n\n  // database port\n  port: 5432,\n\n  // number of rows to return at a time from a prepared statement's\n  // portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  // Connection pool options - see https://github.com/brianc/node-pg-pool\n\n  // number of connections to use in connection pool\n  // 0 will disable connection pooling\n  max: 10,\n\n  // max milliseconds a client can go unused before it is removed\n  // from the pool and destroyed\n  idleTimeoutMillis: 30000,\n\n  client_encoding: '',\n\n  ssl: false,\n\n  application_name: undefined,\n\n  fallback_application_name: undefined,\n\n  options: undefined,\n\n  parseInputDatesAsUTC: false,\n\n  // max milliseconds any query using this connection will execute for before timing out in error.\n  // false=unlimited\n  statement_timeout: false,\n\n  // Abort any statement that waits longer than the specified duration in milliseconds while attempting to acquire a lock.\n  // false=unlimited\n  lock_timeout: false,\n\n  // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds\n  // false=unlimited\n  idle_in_transaction_session_timeout: false,\n\n  // max milliseconds to wait for query to complete (client side)\n  query_timeout: false,\n\n  connect_timeout: 0,\n\n  keepalives: 1,\n\n  keepalives_idle: 0,\n}\n\nvar pgTypes = require('pg-types')\n// save default parsers\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text')\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')\n\n// parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__('parseInt8', function (val) {\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger)\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray)\n})\n","'use strict'\n\nconst defaults = require('./defaults')\n\nfunction escapeElement(elementRepresentation) {\n  var escaped = elementRepresentation.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString(val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (ArrayBuffer.isView(val[i])) {\n      var item = val[i]\n      if (!(item instanceof Buffer)) {\n        var buf = Buffer.from(item.buffer, item.byteOffset, item.byteLength)\n        if (buf.length === item.byteLength) {\n          item = buf\n        } else {\n          item = buf.slice(item.byteOffset, item.byteOffset + item.byteLength)\n        }\n      }\n      result += '\\\\\\\\x' + item.toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  // null and undefined are both null for postgres\n  if (val == null) {\n    return null\n  }\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject(val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad(number, digits) {\n  number = '' + number\n  while (number.length < digits) {\n    number = '0' + number\n  }\n  return number\n}\n\nfunction dateToString(date) {\n  var offset = -date.getTimezoneOffset()\n\n  var year = date.getFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getMonth() + 1, 2) +\n    '-' +\n    pad(date.getDate(), 2) +\n    'T' +\n    pad(date.getHours(), 2) +\n    ':' +\n    pad(date.getMinutes(), 2) +\n    ':' +\n    pad(date.getSeconds(), 2) +\n    '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else {\n    ret += '+'\n  }\n\n  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction dateToStringUTC(date) {\n  var year = date.getUTCFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getUTCMonth() + 1, 2) +\n    '-' +\n    pad(date.getUTCDate(), 2) +\n    'T' +\n    pad(date.getUTCHours(), 2) +\n    ':' +\n    pad(date.getUTCMinutes(), 2) +\n    ':' +\n    pad(date.getUTCSeconds(), 2) +\n    '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  ret += '+00:00'\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction normalizeQueryConfig(config, values, callback) {\n  // can take in strings or config objects\n  config = typeof config === 'string' ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\n// Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\nconst escapeIdentifier = function (str) {\n  return '\"' + str.replace(/\"/g, '\"\"') + '\"'\n}\n\nconst escapeLiteral = function (str) {\n  var hasBackslash = false\n  var escaped = \"'\"\n\n  for (var i = 0; i < str.length; i++) {\n    var c = str[i]\n    if (c === \"'\") {\n      escaped += c + c\n    } else if (c === '\\\\') {\n      escaped += c + c\n      hasBackslash = true\n    } else {\n      escaped += c\n    }\n  }\n\n  escaped += \"'\"\n\n  if (hasBackslash === true) {\n    escaped = ' E' + escaped\n  }\n\n  return escaped\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper(value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  escapeIdentifier,\n  escapeLiteral,\n}\n","'use strict'\n// This file contains crypto utility functions for versions of Node.js < 15.0.0,\n// which does not support the WebCrypto.subtle API.\n\nconst nodeCrypto = require('crypto')\n\nfunction md5(string) {\n  return nodeCrypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nfunction postgresMd5PasswordHash(user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nfunction sha256(text) {\n  return nodeCrypto.createHash('sha256').update(text).digest()\n}\n\nfunction hmacSha256(key, msg) {\n  return nodeCrypto.createHmac('sha256', key).update(msg).digest()\n}\n\nasync function deriveKey(password, salt, iterations) {\n  return nodeCrypto.pbkdf2Sync(password, salt, iterations, 32, 'sha256')\n}\n\nmodule.exports = {\n  postgresMd5PasswordHash,\n  randomBytes: nodeCrypto.randomBytes,\n  deriveKey,\n  sha256,\n  hmacSha256,\n  md5,\n}\n","const nodeCrypto = require('crypto')\n\nmodule.exports = {\n  postgresMd5PasswordHash,\n  randomBytes,\n  deriveKey,\n  sha256,\n  hmacSha256,\n  md5,\n}\n\n/**\n * The Web Crypto API - grabbed from the Node.js library or the global\n * @type Crypto\n */\nconst webCrypto = nodeCrypto.webcrypto || globalThis.crypto\n/**\n * The SubtleCrypto API for low level crypto operations.\n * @type SubtleCrypto\n */\nconst subtleCrypto = webCrypto.subtle\nconst textEncoder = new TextEncoder()\n\n/**\n *\n * @param {*} length\n * @returns\n */\nfunction randomBytes(length) {\n  return webCrypto.getRandomValues(Buffer.alloc(length))\n}\n\nasync function md5(string) {\n  try {\n    return nodeCrypto.createHash('md5').update(string, 'utf-8').digest('hex')\n  } catch (e) {\n    // `createHash()` failed so we are probably not in Node.js, use the WebCrypto API instead.\n    // Note that the MD5 algorithm on WebCrypto is not available in Node.js.\n    // This is why we cannot just use WebCrypto in all environments.\n    const data = typeof string === 'string' ? textEncoder.encode(string) : string\n    const hash = await subtleCrypto.digest('MD5', data)\n    return Array.from(new Uint8Array(hash))\n      .map((b) => b.toString(16).padStart(2, '0'))\n      .join('')\n  }\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nasync function postgresMd5PasswordHash(user, password, salt) {\n  var inner = await md5(password + user)\n  var outer = await md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\n/**\n * Create a SHA-256 digest of the given data\n * @param {Buffer} data\n */\nasync function sha256(text) {\n  return await subtleCrypto.digest('SHA-256', text)\n}\n\n/**\n * Sign the message with the given key\n * @param {ArrayBuffer} keyBuffer\n * @param {string} msg\n */\nasync function hmacSha256(keyBuffer, msg) {\n  const key = await subtleCrypto.importKey('raw', keyBuffer, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign'])\n  return await subtleCrypto.sign('HMAC', key, textEncoder.encode(msg))\n}\n\n/**\n * Derive a key from the password and salt\n * @param {string} password\n * @param {Uint8Array} salt\n * @param {number} iterations\n */\nasync function deriveKey(password, salt, iterations) {\n  const key = await subtleCrypto.importKey('raw', textEncoder.encode(password), 'PBKDF2', false, ['deriveBits'])\n  const params = { name: 'PBKDF2', hash: 'SHA-256', salt: salt, iterations: iterations }\n  return await subtleCrypto.deriveBits(params, key, 32 * 8, ['deriveBits'])\n}\n","'use strict'\n\nconst useLegacyCrypto = parseInt(process.versions && process.versions.node && process.versions.node.split('.')[0]) < 15\nif (useLegacyCrypto) {\n  // We are on an old version of Node.js that requires legacy crypto utilities.\n  module.exports = require('./utils-legacy')\n} else {\n  module.exports = require('./utils-webcrypto')\n}\n","'use strict'\nconst crypto = require('./utils')\n\nfunction startSession(mechanisms) {\n  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {\n    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')\n  }\n\n  const clientNonce = crypto.randomBytes(18).toString('base64')\n\n  return {\n    mechanism: 'SCRAM-SHA-256',\n    clientNonce,\n    response: 'n,,n=*,r=' + clientNonce,\n    message: 'SASLInitialResponse',\n  }\n}\n\nasync function continueSession(session, password, serverData) {\n  if (session.message !== 'SASLInitialResponse') {\n    throw new Error('SASL: Last message was not SASLInitialResponse')\n  }\n  if (typeof password !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string')\n  }\n  if (password === '') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a non-empty string')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string')\n  }\n\n  const sv = parseServerFirstMessage(serverData)\n\n  if (!sv.nonce.startsWith(session.clientNonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce')\n  } else if (sv.nonce.length === session.clientNonce.length) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short')\n  }\n\n  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce\n  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration\n  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce\n  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof\n\n  var saltBytes = Buffer.from(sv.salt, 'base64')\n  var saltedPassword = await crypto.deriveKey(password, saltBytes, sv.iteration)\n  var clientKey = await crypto.hmacSha256(saltedPassword, 'Client Key')\n  var storedKey = await crypto.sha256(clientKey)\n  var clientSignature = await crypto.hmacSha256(storedKey, authMessage)\n  var clientProof = xorBuffers(Buffer.from(clientKey), Buffer.from(clientSignature)).toString('base64')\n  var serverKey = await crypto.hmacSha256(saltedPassword, 'Server Key')\n  var serverSignatureBytes = await crypto.hmacSha256(serverKey, authMessage)\n\n  session.message = 'SASLResponse'\n  session.serverSignature = Buffer.from(serverSignatureBytes).toString('base64')\n  session.response = clientFinalMessageWithoutProof + ',p=' + clientProof\n}\n\nfunction finalizeSession(session, serverData) {\n  if (session.message !== 'SASLResponse') {\n    throw new Error('SASL: Last message was not SASLResponse')\n  }\n  if (typeof serverData !== 'string') {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string')\n  }\n\n  const { serverSignature } = parseServerFinalMessage(serverData)\n\n  if (serverSignature !== session.serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match')\n  }\n}\n\n/**\n * printable       = %x21-2B / %x2D-7E\n *                   ;; Printable ASCII except \",\".\n *                   ;; Note that any \"printable\" is also\n *                   ;; a valid \"value\".\n */\nfunction isPrintableChars(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: text must be a string')\n  }\n  return text\n    .split('')\n    .map((_, i) => text.charCodeAt(i))\n    .every((c) => (c >= 0x21 && c <= 0x2b) || (c >= 0x2d && c <= 0x7e))\n}\n\n/**\n * base64-char     = ALPHA / DIGIT / \"/\" / \"+\"\n *\n * base64-4        = 4base64-char\n *\n * base64-3        = 3base64-char \"=\"\n *\n * base64-2        = 2base64-char \"==\"\n *\n * base64          = *base64-4 [base64-3 / base64-2]\n */\nfunction isBase64(text) {\n  return /^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(text)\n}\n\nfunction parseAttributePairs(text) {\n  if (typeof text !== 'string') {\n    throw new TypeError('SASL: attribute pairs text must be a string')\n  }\n\n  return new Map(\n    text.split(',').map((attrValue) => {\n      if (!/^.=/.test(attrValue)) {\n        throw new Error('SASL: Invalid attribute pair entry')\n      }\n      const name = attrValue[0]\n      const value = attrValue.substring(2)\n      return [name, value]\n    })\n  )\n}\n\nfunction parseServerFirstMessage(data) {\n  const attrPairs = parseAttributePairs(data)\n\n  const nonce = attrPairs.get('r')\n  if (!nonce) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing')\n  } else if (!isPrintableChars(nonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce must only contain printable characters')\n  }\n  const salt = attrPairs.get('s')\n  if (!salt) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing')\n  } else if (!isBase64(salt)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64')\n  }\n  const iterationText = attrPairs.get('i')\n  if (!iterationText) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing')\n  } else if (!/^[1-9][0-9]*$/.test(iterationText)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration count')\n  }\n  const iteration = parseInt(iterationText, 10)\n\n  return {\n    nonce,\n    salt,\n    iteration,\n  }\n}\n\nfunction parseServerFinalMessage(serverData) {\n  const attrPairs = parseAttributePairs(serverData)\n  const serverSignature = attrPairs.get('v')\n  if (!serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing')\n  } else if (!isBase64(serverSignature)) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64')\n  }\n  return {\n    serverSignature,\n  }\n}\n\nfunction xorBuffers(a, b) {\n  if (!Buffer.isBuffer(a)) {\n    throw new TypeError('first argument must be a Buffer')\n  }\n  if (!Buffer.isBuffer(b)) {\n    throw new TypeError('second argument must be a Buffer')\n  }\n  if (a.length !== b.length) {\n    throw new Error('Buffer lengths must match')\n  }\n  if (a.length === 0) {\n    throw new Error('Buffers cannot be empty')\n  }\n  return Buffer.from(a.map((_, i) => a[i] ^ b[i]))\n}\n\nmodule.exports = {\n  startSession,\n  continueSession,\n  finalizeSession,\n}\n","'use strict'\n\nvar types = require('pg-types')\n\nfunction TypeOverrides(userTypes) {\n  this._types = userTypes || types\n  this.text = {}\n  this.binary = {}\n}\n\nTypeOverrides.prototype.getOverrides = function (format) {\n  switch (format) {\n    case 'text':\n      return this.text\n    case 'binary':\n      return this.binary\n    default:\n      return {}\n  }\n}\n\nTypeOverrides.prototype.setTypeParser = function (oid, format, parseFn) {\n  if (typeof format === 'function') {\n    parseFn = format\n    format = 'text'\n  }\n  this.getOverrides(format)[oid] = parseFn\n}\n\nTypeOverrides.prototype.getTypeParser = function (oid, format) {\n  format = format || 'text'\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format)\n}\n\nmodule.exports = TypeOverrides\n","'use strict'\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    const config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // Check for empty host in URL\n\n  const config = {}\n  let result\n  let dummyHost = false\n  if (/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {\n    // Ensure spaces are encoded as %20\n    str = encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1')\n  }\n\n  try {\n    result = new URL(str, 'postgres://base')\n  } catch (e) {\n    // The URL is invalid so try again with a dummy host\n    result = new URL(str.replace('@/', '@___DUMMY___/'), 'postgres://base')\n    dummyHost = true\n  }\n\n  // We'd like to use Object.fromEntries() here but Node.js 10 does not support it\n  for (const entry of result.searchParams.entries()) {\n    config[entry[0]] = entry[1]\n  }\n\n  config.user = config.user || decodeURIComponent(result.username)\n  config.password = config.password || decodeURIComponent(result.password)\n\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.searchParams.get('db')\n    config.client_encoding = result.searchParams.get('encoding')\n    return config\n  }\n  const hostname = dummyHost ? '' : result.hostname\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = decodeURIComponent(hostname)\n  } else if (hostname && /^%2f/i.test(hostname)) {\n    // Only prepend the hostname to the pathname if it is not a URL encoded Unix socket host.\n    result.pathname = hostname + result.pathname\n  }\n  if (!config.port) {\n    // Only set the port if there is no equivalent query param.\n    config.port = result.port\n  }\n\n  const pathname = result.pathname.slice(1) || null\n  config.database = pathname ? decodeURI(pathname) : null\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  // Only try to load fs if we expect to read from the disk\n  const fs = config.sslcert || config.sslkey || config.sslrootcert ? require('fs') : null\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n","'use strict'\n\nvar dns = require('dns')\n\nvar defaults = require('./defaults')\n\nvar parse = require('pg-connection-string').parse // parses a connection string\n\nvar val = function (key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env['PG' + key.toUpperCase()]\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[envVar]\n  }\n\n  return config[key] || envVar || defaults[key]\n}\n\nvar readSSLConfigFromEnvironment = function () {\n  switch (process.env.PGSSLMODE) {\n    case 'disable':\n      return false\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full':\n      return true\n    case 'no-verify':\n      return { rejectUnauthorized: false }\n  }\n  return defaults.ssl\n}\n\n// Convert arg to a string, surround in single quotes, and escape single quotes and backslashes\nvar quoteParamValue = function (value) {\n  return \"'\" + ('' + value).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\") + \"'\"\n}\n\nvar add = function (params, config, paramName) {\n  var value = config[paramName]\n  if (value !== undefined && value !== null) {\n    params.push(paramName + '=' + quoteParamValue(value))\n  }\n}\n\nclass ConnectionParameters {\n  constructor(config) {\n    // if a string is passed, it is a raw connection string so we parse it into a config\n    config = typeof config === 'string' ? parse(config) : config || {}\n\n    // if the config has a connectionString defined, parse IT into the config we use\n    // this will override other default values with what is stored in connectionString\n    if (config.connectionString) {\n      config = Object.assign({}, config, parse(config.connectionString))\n    }\n\n    this.user = val('user', config)\n    this.database = val('database', config)\n\n    if (this.database === undefined) {\n      this.database = this.user\n    }\n\n    this.port = parseInt(val('port', config), 10)\n    this.host = val('host', config)\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: val('password', config),\n    })\n\n    this.binary = val('binary', config)\n    this.options = val('options', config)\n\n    this.ssl = typeof config.ssl === 'undefined' ? readSSLConfigFromEnvironment() : config.ssl\n\n    if (typeof this.ssl === 'string') {\n      if (this.ssl === 'true') {\n        this.ssl = true\n      }\n    }\n    // support passing in ssl=no-verify via connection string\n    if (this.ssl === 'no-verify') {\n      this.ssl = { rejectUnauthorized: false }\n    }\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.client_encoding = val('client_encoding', config)\n    this.replication = val('replication', config)\n    // a domain socket begins with '/'\n    this.isDomainSocket = !(this.host || '').indexOf('/')\n\n    this.application_name = val('application_name', config, 'PGAPPNAME')\n    this.fallback_application_name = val('fallback_application_name', config, false)\n    this.statement_timeout = val('statement_timeout', config, false)\n    this.lock_timeout = val('lock_timeout', config, false)\n    this.idle_in_transaction_session_timeout = val('idle_in_transaction_session_timeout', config, false)\n    this.query_timeout = val('query_timeout', config, false)\n\n    if (config.connectionTimeoutMillis === undefined) {\n      this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0\n    } else {\n      this.connect_timeout = Math.floor(config.connectionTimeoutMillis / 1000)\n    }\n\n    if (config.keepAlive === false) {\n      this.keepalives = 0\n    } else if (config.keepAlive === true) {\n      this.keepalives = 1\n    }\n\n    if (typeof config.keepAliveInitialDelayMillis === 'number') {\n      this.keepalives_idle = Math.floor(config.keepAliveInitialDelayMillis / 1000)\n    }\n  }\n\n  getLibpqConnectionString(cb) {\n    var params = []\n    add(params, this, 'user')\n    add(params, this, 'password')\n    add(params, this, 'port')\n    add(params, this, 'application_name')\n    add(params, this, 'fallback_application_name')\n    add(params, this, 'connect_timeout')\n    add(params, this, 'options')\n\n    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}\n    add(params, ssl, 'sslmode')\n    add(params, ssl, 'sslca')\n    add(params, ssl, 'sslkey')\n    add(params, ssl, 'sslcert')\n    add(params, ssl, 'sslrootcert')\n\n    if (this.database) {\n      params.push('dbname=' + quoteParamValue(this.database))\n    }\n    if (this.replication) {\n      params.push('replication=' + quoteParamValue(this.replication))\n    }\n    if (this.host) {\n      params.push('host=' + quoteParamValue(this.host))\n    }\n    if (this.isDomainSocket) {\n      return cb(null, params.join(' '))\n    }\n    if (this.client_encoding) {\n      params.push('client_encoding=' + quoteParamValue(this.client_encoding))\n    }\n    dns.lookup(this.host, function (err, address) {\n      if (err) return cb(err, null)\n      params.push('hostaddr=' + quoteParamValue(address))\n      return cb(null, params.join(' '))\n    })\n  }\n}\n\nmodule.exports = ConnectionParameters\n","'use strict'\n\nvar types = require('pg-types')\n\nvar matchRegexp = /^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/\n\n// result object returned from query\n// in the 'end' event and also\n// passed as second argument to provided callback\nclass Result {\n  constructor(rowMode, types) {\n    this.command = null\n    this.rowCount = null\n    this.oid = null\n    this.rows = []\n    this.fields = []\n    this._parsers = undefined\n    this._types = types\n    this.RowCtor = null\n    this.rowAsArray = rowMode === 'array'\n    if (this.rowAsArray) {\n      this.parseRow = this._parseRowAsArray\n    }\n    this._prebuiltEmptyResultObject = null\n  }\n\n  // adds a command complete message\n  addCommandComplete(msg) {\n    var match\n    if (msg.text) {\n      // pure javascript\n      match = matchRegexp.exec(msg.text)\n    } else {\n      // native bindings\n      match = matchRegexp.exec(msg.command)\n    }\n    if (match) {\n      this.command = match[1]\n      if (match[3]) {\n        // COMMMAND OID ROWS\n        this.oid = parseInt(match[2], 10)\n        this.rowCount = parseInt(match[3], 10)\n      } else if (match[2]) {\n        // COMMAND ROWS\n        this.rowCount = parseInt(match[2], 10)\n      }\n    }\n  }\n\n  _parseRowAsArray(rowData) {\n    var row = new Array(rowData.length)\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      if (rawValue !== null) {\n        row[i] = this._parsers[i](rawValue)\n      } else {\n        row[i] = null\n      }\n    }\n    return row\n  }\n\n  parseRow(rowData) {\n    var row = { ...this._prebuiltEmptyResultObject }\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      var field = this.fields[i].name\n      if (rawValue !== null) {\n        row[field] = this._parsers[i](rawValue)\n      } else {\n        row[field] = null\n      }\n    }\n    return row\n  }\n\n  addRow(row) {\n    this.rows.push(row)\n  }\n\n  addFields(fieldDescriptions) {\n    // clears field definitions\n    // multiple query statements in 1 action can result in multiple sets\n    // of rowDescriptions...eg: 'select NOW(); select 1::int;'\n    // you need to reset the fields\n    this.fields = fieldDescriptions\n    if (this.fields.length) {\n      this._parsers = new Array(fieldDescriptions.length)\n    }\n\n    var row = {}\n\n    for (var i = 0; i < fieldDescriptions.length; i++) {\n      var desc = fieldDescriptions[i]\n      row[desc.name] = null\n\n      if (this._types) {\n        this._parsers[i] = this._types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      } else {\n        this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      }\n    }\n    this._prebuiltEmptyResultObject = { ...row }\n  }\n}\n\nmodule.exports = Result\n","'use strict'\n\nconst { EventEmitter } = require('events')\n\nconst Result = require('./result')\nconst utils = require('./utils')\n\nclass Query extends EventEmitter {\n  constructor(config, values, callback) {\n    super()\n\n    config = utils.normalizeQueryConfig(config, values, callback)\n\n    this.text = config.text\n    this.values = config.values\n    this.rows = config.rows\n    this.types = config.types\n    this.name = config.name\n    this.queryMode = config.queryMode\n    this.binary = config.binary\n    // use unique portal name each time\n    this.portal = config.portal || ''\n    this.callback = config.callback\n    this._rowMode = config.rowMode\n    if (process.domain && config.callback) {\n      this.callback = process.domain.bind(config.callback)\n    }\n    this._result = new Result(this._rowMode, this.types)\n\n    // potential for multiple results\n    this._results = this._result\n    this._canceledDueToError = false\n  }\n\n  requiresPreparation() {\n    if (this.queryMode === 'extended') {\n      return true\n    }\n\n    // named queries must always be prepared\n    if (this.name) {\n      return true\n    }\n    // always prepare if there are max number of rows expected per\n    // portal execution\n    if (this.rows) {\n      return true\n    }\n    // don't prepare empty text queries\n    if (!this.text) {\n      return false\n    }\n    // prepare if there are values\n    if (!this.values) {\n      return false\n    }\n    return this.values.length > 0\n  }\n\n  _checkForMultirow() {\n    // if we already have a result with a command property\n    // then we've already executed one query in a multi-statement simple query\n    // turn our results into an array of results\n    if (this._result.command) {\n      if (!Array.isArray(this._results)) {\n        this._results = [this._result]\n      }\n      this._result = new Result(this._rowMode, this._result._types)\n      this._results.push(this._result)\n    }\n  }\n\n  // associates row metadata from the supplied\n  // message with this query object\n  // metadata used when parsing row results\n  handleRowDescription(msg) {\n    this._checkForMultirow()\n    this._result.addFields(msg.fields)\n    this._accumulateRows = this.callback || !this.listeners('row').length\n  }\n\n  handleDataRow(msg) {\n    let row\n\n    if (this._canceledDueToError) {\n      return\n    }\n\n    try {\n      row = this._result.parseRow(msg.fields)\n    } catch (err) {\n      this._canceledDueToError = err\n      return\n    }\n\n    this.emit('row', row, this._result)\n    if (this._accumulateRows) {\n      this._result.addRow(row)\n    }\n  }\n\n  handleCommandComplete(msg, connection) {\n    this._checkForMultirow()\n    this._result.addCommandComplete(msg)\n    // need to sync after each command complete of a prepared statement\n    // if we were using a row count which results in multiple calls to _getRows\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  // if a named prepared statement is created with empty query text\n  // the backend will send an emptyQuery message but *not* a command complete message\n  // since we pipeline sync immediately after execute we don't need to do anything here\n  // unless we have rows specified, in which case we did not pipeline the intial sync call\n  handleEmptyQuery(connection) {\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  handleError(err, connection) {\n    // need to sync after error during a prepared statement\n    if (this._canceledDueToError) {\n      err = this._canceledDueToError\n      this._canceledDueToError = false\n    }\n    // if callback supplied do not emit error event as uncaught error\n    // events will bubble up to node process\n    if (this.callback) {\n      return this.callback(err)\n    }\n    this.emit('error', err)\n  }\n\n  handleReadyForQuery(con) {\n    if (this._canceledDueToError) {\n      return this.handleError(this._canceledDueToError, con)\n    }\n    if (this.callback) {\n      try {\n        this.callback(null, this._results)\n      } catch (err) {\n        process.nextTick(() => {\n          throw err\n        })\n      }\n    }\n    this.emit('end', this._results)\n  }\n\n  submit(connection) {\n    if (typeof this.text !== 'string' && typeof this.name !== 'string') {\n      return new Error('A query must have either text or a name. Supplying neither is unsupported.')\n    }\n    const previous = connection.parsedStatements[this.name]\n    if (this.text && previous && this.text !== previous) {\n      return new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n    }\n    if (this.values && !Array.isArray(this.values)) {\n      return new Error('Query values must be an array')\n    }\n    if (this.requiresPreparation()) {\n      this.prepare(connection)\n    } else {\n      connection.query(this.text)\n    }\n    return null\n  }\n\n  hasBeenParsed(connection) {\n    return this.name && connection.parsedStatements[this.name]\n  }\n\n  handlePortalSuspended(connection) {\n    this._getRows(connection, this.rows)\n  }\n\n  _getRows(connection, rows) {\n    connection.execute({\n      portal: this.portal,\n      rows: rows,\n    })\n    // if we're not reading pages of rows send the sync command\n    // to indicate the pipeline is finished\n    if (!rows) {\n      connection.sync()\n    } else {\n      // otherwise flush the call out to read more rows\n      connection.flush()\n    }\n  }\n\n  // http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\n  prepare(connection) {\n    // TODO refactor this poor encapsulation\n    if (!this.hasBeenParsed(connection)) {\n      connection.parse({\n        text: this.text,\n        name: this.name,\n        types: this.types,\n      })\n    }\n\n    // because we're mapping user supplied values to\n    // postgres wire protocol compatible values it could\n    // throw an exception, so try/catch this section\n    try {\n      connection.bind({\n        portal: this.portal,\n        statement: this.name,\n        values: this.values,\n        binary: this.binary,\n        valueMapper: utils.prepareValue,\n      })\n    } catch (err) {\n      this.handleError(err, connection)\n      return\n    }\n\n    connection.describe({\n      type: 'P',\n      name: this.portal || '',\n    })\n\n    this._getRows(connection, this.rows)\n  }\n\n  handleCopyInResponse(connection) {\n    connection.sendCopyFail('No source stream defined')\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleCopyData(msg, connection) {\n    // noop\n  }\n}\n\nmodule.exports = Query\n","export type Mode = 'text' | 'binary'\n\nexport type MessageName =\n  | 'parseComplete'\n  | 'bindComplete'\n  | 'closeComplete'\n  | 'noData'\n  | 'portalSuspended'\n  | 'replicationStart'\n  | 'emptyQuery'\n  | 'copyDone'\n  | 'copyData'\n  | 'rowDescription'\n  | 'parameterDescription'\n  | 'parameterStatus'\n  | 'backendKeyData'\n  | 'notification'\n  | 'readyForQuery'\n  | 'commandComplete'\n  | 'dataRow'\n  | 'copyInResponse'\n  | 'copyOutResponse'\n  | 'authenticationOk'\n  | 'authenticationMD5Password'\n  | 'authenticationCleartextPassword'\n  | 'authenticationSASL'\n  | 'authenticationSASLContinue'\n  | 'authenticationSASLFinal'\n  | 'error'\n  | 'notice'\n\nexport interface BackendMessage {\n  name: MessageName\n  length: number\n}\n\nexport const parseComplete: BackendMessage = {\n  name: 'parseComplete',\n  length: 5,\n}\n\nexport const bindComplete: BackendMessage = {\n  name: 'bindComplete',\n  length: 5,\n}\n\nexport const closeComplete: BackendMessage = {\n  name: 'closeComplete',\n  length: 5,\n}\n\nexport const noData: BackendMessage = {\n  name: 'noData',\n  length: 5,\n}\n\nexport const portalSuspended: BackendMessage = {\n  name: 'portalSuspended',\n  length: 5,\n}\n\nexport const replicationStart: BackendMessage = {\n  name: 'replicationStart',\n  length: 4,\n}\n\nexport const emptyQuery: BackendMessage = {\n  name: 'emptyQuery',\n  length: 4,\n}\n\nexport const copyDone: BackendMessage = {\n  name: 'copyDone',\n  length: 4,\n}\n\ninterface NoticeOrError {\n  message: string | undefined\n  severity: string | undefined\n  code: string | undefined\n  detail: string | undefined\n  hint: string | undefined\n  position: string | undefined\n  internalPosition: string | undefined\n  internalQuery: string | undefined\n  where: string | undefined\n  schema: string | undefined\n  table: string | undefined\n  column: string | undefined\n  dataType: string | undefined\n  constraint: string | undefined\n  file: string | undefined\n  line: string | undefined\n  routine: string | undefined\n}\n\nexport class DatabaseError extends Error implements NoticeOrError {\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n  constructor(\n    message: string,\n    public readonly length: number,\n    public readonly name: MessageName\n  ) {\n    super(message)\n  }\n}\n\nexport class CopyDataMessage {\n  public readonly name = 'copyData'\n  constructor(\n    public readonly length: number,\n    public readonly chunk: Buffer\n  ) {}\n}\n\nexport class CopyResponse {\n  public readonly columnTypes: number[]\n  constructor(\n    public readonly length: number,\n    public readonly name: MessageName,\n    public readonly binary: boolean,\n    columnCount: number\n  ) {\n    this.columnTypes = new Array(columnCount)\n  }\n}\n\nexport class Field {\n  constructor(\n    public readonly name: string,\n    public readonly tableID: number,\n    public readonly columnID: number,\n    public readonly dataTypeID: number,\n    public readonly dataTypeSize: number,\n    public readonly dataTypeModifier: number,\n    public readonly format: Mode\n  ) {}\n}\n\nexport class RowDescriptionMessage {\n  public readonly name: MessageName = 'rowDescription'\n  public readonly fields: Field[]\n  constructor(\n    public readonly length: number,\n    public readonly fieldCount: number\n  ) {\n    this.fields = new Array(this.fieldCount)\n  }\n}\n\nexport class ParameterDescriptionMessage {\n  public readonly name: MessageName = 'parameterDescription'\n  public readonly dataTypeIDs: number[]\n  constructor(\n    public readonly length: number,\n    public readonly parameterCount: number\n  ) {\n    this.dataTypeIDs = new Array(this.parameterCount)\n  }\n}\n\nexport class ParameterStatusMessage {\n  public readonly name: MessageName = 'parameterStatus'\n  constructor(\n    public readonly length: number,\n    public readonly parameterName: string,\n    public readonly parameterValue: string\n  ) {}\n}\n\nexport class AuthenticationMD5Password implements BackendMessage {\n  public readonly name: MessageName = 'authenticationMD5Password'\n  constructor(\n    public readonly length: number,\n    public readonly salt: Buffer\n  ) {}\n}\n\nexport class BackendKeyDataMessage {\n  public readonly name: MessageName = 'backendKeyData'\n  constructor(\n    public readonly length: number,\n    public readonly processID: number,\n    public readonly secretKey: number\n  ) {}\n}\n\nexport class NotificationResponseMessage {\n  public readonly name: MessageName = 'notification'\n  constructor(\n    public readonly length: number,\n    public readonly processId: number,\n    public readonly channel: string,\n    public readonly payload: string\n  ) {}\n}\n\nexport class ReadyForQueryMessage {\n  public readonly name: MessageName = 'readyForQuery'\n  constructor(\n    public readonly length: number,\n    public readonly status: string\n  ) {}\n}\n\nexport class CommandCompleteMessage {\n  public readonly name: MessageName = 'commandComplete'\n  constructor(\n    public readonly length: number,\n    public readonly text: string\n  ) {}\n}\n\nexport class DataRowMessage {\n  public readonly fieldCount: number\n  public readonly name: MessageName = 'dataRow'\n  constructor(\n    public length: number,\n    public fields: any[]\n  ) {\n    this.fieldCount = fields.length\n  }\n}\n\nexport class NoticeMessage implements BackendMessage, NoticeOrError {\n  constructor(\n    public readonly length: number,\n    public readonly message: string | undefined\n  ) {}\n  public readonly name = 'notice'\n  public severity: string | undefined\n  public code: string | undefined\n  public detail: string | undefined\n  public hint: string | undefined\n  public position: string | undefined\n  public internalPosition: string | undefined\n  public internalQuery: string | undefined\n  public where: string | undefined\n  public schema: string | undefined\n  public table: string | undefined\n  public column: string | undefined\n  public dataType: string | undefined\n  public constraint: string | undefined\n  public file: string | undefined\n  public line: string | undefined\n  public routine: string | undefined\n}\n","//binary data writer tuned for encoding binary specific to the postgres binary protocol\n\nexport class Writer {\n  private buffer: Buffer\n  private offset: number = 5\n  private headerPosition: number = 0\n  constructor(private size = 256) {\n    this.buffer = Buffer.allocUnsafe(size)\n  }\n\n  private ensure(size: number): void {\n    var remaining = this.buffer.length - this.offset\n    if (remaining < size) {\n      var oldBuffer = this.buffer\n      // exponential growth factor of around ~ 1.5\n      // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n      var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size\n      this.buffer = Buffer.allocUnsafe(newSize)\n      oldBuffer.copy(this.buffer)\n    }\n  }\n\n  public addInt32(num: number): Writer {\n    this.ensure(4)\n    this.buffer[this.offset++] = (num >>> 24) & 0xff\n    this.buffer[this.offset++] = (num >>> 16) & 0xff\n    this.buffer[this.offset++] = (num >>> 8) & 0xff\n    this.buffer[this.offset++] = (num >>> 0) & 0xff\n    return this\n  }\n\n  public addInt16(num: number): Writer {\n    this.ensure(2)\n    this.buffer[this.offset++] = (num >>> 8) & 0xff\n    this.buffer[this.offset++] = (num >>> 0) & 0xff\n    return this\n  }\n\n  public addCString(string: string): Writer {\n    if (!string) {\n      this.ensure(1)\n    } else {\n      var len = Buffer.byteLength(string)\n      this.ensure(len + 1) // +1 for null terminator\n      this.buffer.write(string, this.offset, 'utf-8')\n      this.offset += len\n    }\n\n    this.buffer[this.offset++] = 0 // null terminator\n    return this\n  }\n\n  public addString(string: string = ''): Writer {\n    var len = Buffer.byteLength(string)\n    this.ensure(len)\n    this.buffer.write(string, this.offset)\n    this.offset += len\n    return this\n  }\n\n  public add(otherBuffer: Buffer): Writer {\n    this.ensure(otherBuffer.length)\n    otherBuffer.copy(this.buffer, this.offset)\n    this.offset += otherBuffer.length\n    return this\n  }\n\n  private join(code?: number): Buffer {\n    if (code) {\n      this.buffer[this.headerPosition] = code\n      //length is everything in this packet minus the code\n      const length = this.offset - (this.headerPosition + 1)\n      this.buffer.writeInt32BE(length, this.headerPosition + 1)\n    }\n    return this.buffer.slice(code ? 0 : 5, this.offset)\n  }\n\n  public flush(code?: number): Buffer {\n    var result = this.join(code)\n    this.offset = 5\n    this.headerPosition = 0\n    this.buffer = Buffer.allocUnsafe(this.size)\n    return result\n  }\n}\n","import { Writer } from './buffer-writer'\n\nconst enum code {\n  startup = 0x70,\n  query = 0x51,\n  parse = 0x50,\n  bind = 0x42,\n  execute = 0x45,\n  flush = 0x48,\n  sync = 0x53,\n  end = 0x58,\n  close = 0x43,\n  describe = 0x44,\n  copyFromChunk = 0x64,\n  copyDone = 0x63,\n  copyFail = 0x66,\n}\n\nconst writer = new Writer()\n\nconst startup = (opts: Record<string, string>): Buffer => {\n  // protocol version\n  writer.addInt16(3).addInt16(0)\n  for (const key of Object.keys(opts)) {\n    writer.addCString(key).addCString(opts[key])\n  }\n\n  writer.addCString('client_encoding').addCString('UTF8')\n\n  var bodyBuffer = writer.addCString('').flush()\n  // this message is sent without a code\n\n  var length = bodyBuffer.length + 4\n\n  return new Writer().addInt32(length).add(bodyBuffer).flush()\n}\n\nconst requestSsl = (): Buffer => {\n  const response = Buffer.allocUnsafe(8)\n  response.writeInt32BE(8, 0)\n  response.writeInt32BE(80877103, 4)\n  return response\n}\n\nconst password = (password: string): Buffer => {\n  return writer.addCString(password).flush(code.startup)\n}\n\nconst sendSASLInitialResponseMessage = function (mechanism: string, initialResponse: string): Buffer {\n  // 0x70 = 'p'\n  writer.addCString(mechanism).addInt32(Buffer.byteLength(initialResponse)).addString(initialResponse)\n\n  return writer.flush(code.startup)\n}\n\nconst sendSCRAMClientFinalMessage = function (additionalData: string): Buffer {\n  return writer.addString(additionalData).flush(code.startup)\n}\n\nconst query = (text: string): Buffer => {\n  return writer.addCString(text).flush(code.query)\n}\n\ntype ParseOpts = {\n  name?: string\n  types?: number[]\n  text: string\n}\n\nconst emptyArray: any[] = []\n\nconst parse = (query: ParseOpts): Buffer => {\n  // expect something like this:\n  // { name: 'queryName',\n  //   text: 'select * from blah',\n  //   types: ['int8', 'bool'] }\n\n  // normalize missing query names to allow for null\n  const name = query.name || ''\n  if (name.length > 63) {\n    /* eslint-disable no-console */\n    console.error('Warning! Postgres only supports 63 characters for query names.')\n    console.error('You supplied %s (%s)', name, name.length)\n    console.error('This can cause conflicts and silent errors executing queries')\n    /* eslint-enable no-console */\n  }\n\n  const types = query.types || emptyArray\n\n  var len = types.length\n\n  var buffer = writer\n    .addCString(name) // name of query\n    .addCString(query.text) // actual query text\n    .addInt16(len)\n\n  for (var i = 0; i < len; i++) {\n    buffer.addInt32(types[i])\n  }\n\n  return writer.flush(code.parse)\n}\n\ntype ValueMapper = (param: any, index: number) => any\n\ntype BindOpts = {\n  portal?: string\n  binary?: boolean\n  statement?: string\n  values?: any[]\n  // optional map from JS value to postgres value per parameter\n  valueMapper?: ValueMapper\n}\n\nconst paramWriter = new Writer()\n\n// make this a const enum so typescript will inline the value\nconst enum ParamType {\n  STRING = 0,\n  BINARY = 1,\n}\n\nconst writeValues = function (values: any[], valueMapper?: ValueMapper): void {\n  for (let i = 0; i < values.length; i++) {\n    const mappedVal = valueMapper ? valueMapper(values[i], i) : values[i]\n    if (mappedVal == null) {\n      // add the param type (string) to the writer\n      writer.addInt16(ParamType.STRING)\n      // write -1 to the param writer to indicate null\n      paramWriter.addInt32(-1)\n    } else if (mappedVal instanceof Buffer) {\n      // add the param type (binary) to the writer\n      writer.addInt16(ParamType.BINARY)\n      // add the buffer to the param writer\n      paramWriter.addInt32(mappedVal.length)\n      paramWriter.add(mappedVal)\n    } else {\n      // add the param type (string) to the writer\n      writer.addInt16(ParamType.STRING)\n      paramWriter.addInt32(Buffer.byteLength(mappedVal))\n      paramWriter.addString(mappedVal)\n    }\n  }\n}\n\nconst bind = (config: BindOpts = {}): Buffer => {\n  // normalize config\n  const portal = config.portal || ''\n  const statement = config.statement || ''\n  const binary = config.binary || false\n  const values = config.values || emptyArray\n  const len = values.length\n\n  writer.addCString(portal).addCString(statement)\n  writer.addInt16(len)\n\n  writeValues(values, config.valueMapper)\n\n  writer.addInt16(len)\n  writer.add(paramWriter.flush())\n\n  // format code\n  writer.addInt16(binary ? ParamType.BINARY : ParamType.STRING)\n  return writer.flush(code.bind)\n}\n\ntype ExecOpts = {\n  portal?: string\n  rows?: number\n}\n\nconst emptyExecute = Buffer.from([code.execute, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00])\n\nconst execute = (config?: ExecOpts): Buffer => {\n  // this is the happy path for most queries\n  if (!config || (!config.portal && !config.rows)) {\n    return emptyExecute\n  }\n\n  const portal = config.portal || ''\n  const rows = config.rows || 0\n\n  const portalLength = Buffer.byteLength(portal)\n  const len = 4 + portalLength + 1 + 4\n  // one extra bit for code\n  const buff = Buffer.allocUnsafe(1 + len)\n  buff[0] = code.execute\n  buff.writeInt32BE(len, 1)\n  buff.write(portal, 5, 'utf-8')\n  buff[portalLength + 5] = 0 // null terminate portal cString\n  buff.writeUInt32BE(rows, buff.length - 4)\n  return buff\n}\n\nconst cancel = (processID: number, secretKey: number): Buffer => {\n  const buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32BE(16, 0)\n  buffer.writeInt16BE(1234, 4)\n  buffer.writeInt16BE(5678, 6)\n  buffer.writeInt32BE(processID, 8)\n  buffer.writeInt32BE(secretKey, 12)\n  return buffer\n}\n\ntype PortalOpts = {\n  type: 'S' | 'P'\n  name?: string\n}\n\nconst cstringMessage = (code: code, string: string): Buffer => {\n  const stringLen = Buffer.byteLength(string)\n  const len = 4 + stringLen + 1\n  // one extra bit for code\n  const buffer = Buffer.allocUnsafe(1 + len)\n  buffer[0] = code\n  buffer.writeInt32BE(len, 1)\n  buffer.write(string, 5, 'utf-8')\n  buffer[len] = 0 // null terminate cString\n  return buffer\n}\n\nconst emptyDescribePortal = writer.addCString('P').flush(code.describe)\nconst emptyDescribeStatement = writer.addCString('S').flush(code.describe)\n\nconst describe = (msg: PortalOpts): Buffer => {\n  return msg.name\n    ? cstringMessage(code.describe, `${msg.type}${msg.name || ''}`)\n    : msg.type === 'P'\n    ? emptyDescribePortal\n    : emptyDescribeStatement\n}\n\nconst close = (msg: PortalOpts): Buffer => {\n  const text = `${msg.type}${msg.name || ''}`\n  return cstringMessage(code.close, text)\n}\n\nconst copyData = (chunk: Buffer): Buffer => {\n  return writer.add(chunk).flush(code.copyFromChunk)\n}\n\nconst copyFail = (message: string): Buffer => {\n  return cstringMessage(code.copyFail, message)\n}\n\nconst codeOnlyBuffer = (code: code): Buffer => Buffer.from([code, 0x00, 0x00, 0x00, 0x04])\n\nconst flushBuffer = codeOnlyBuffer(code.flush)\nconst syncBuffer = codeOnlyBuffer(code.sync)\nconst endBuffer = codeOnlyBuffer(code.end)\nconst copyDoneBuffer = codeOnlyBuffer(code.copyDone)\n\nconst serialize = {\n  startup,\n  password,\n  requestSsl,\n  sendSASLInitialResponseMessage,\n  sendSCRAMClientFinalMessage,\n  query,\n  parse,\n  bind,\n  execute,\n  describe,\n  close,\n  flush: () => flushBuffer,\n  sync: () => syncBuffer,\n  end: () => endBuffer,\n  copyData,\n  copyDone: () => copyDoneBuffer,\n  copyFail,\n  cancel,\n}\n\nexport { serialize }\n","const emptyBuffer = Buffer.allocUnsafe(0)\n\nexport class BufferReader {\n  private buffer: Buffer = emptyBuffer\n\n  // TODO(bmc): support non-utf8 encoding?\n  private encoding: string = 'utf-8'\n\n  constructor(private offset: number = 0) {}\n\n  public setBuffer(offset: number, buffer: Buffer): void {\n    this.offset = offset\n    this.buffer = buffer\n  }\n\n  public int16(): number {\n    const result = this.buffer.readInt16BE(this.offset)\n    this.offset += 2\n    return result\n  }\n\n  public byte(): number {\n    const result = this.buffer[this.offset]\n    this.offset++\n    return result\n  }\n\n  public int32(): number {\n    const result = this.buffer.readInt32BE(this.offset)\n    this.offset += 4\n    return result\n  }\n\n  public uint32(): number {\n    const result = this.buffer.readUInt32BE(this.offset)\n    this.offset += 4\n    return result\n  }\n\n  public string(length: number): string {\n    const result = this.buffer.toString(this.encoding, this.offset, this.offset + length)\n    this.offset += length\n    return result\n  }\n\n  public cstring(): string {\n    const start = this.offset\n    let end = start\n    while (this.buffer[end++] !== 0) {}\n    this.offset = end\n    return this.buffer.toString(this.encoding, start, end - 1)\n  }\n\n  public bytes(length: number): Buffer {\n    const result = this.buffer.slice(this.offset, this.offset + length)\n    this.offset += length\n    return result\n  }\n}\n","import { TransformOptions } from 'stream'\nimport {\n  Mode,\n  bindComplete,\n  parseComplete,\n  closeComplete,\n  noData,\n  portalSuspended,\n  copyDone,\n  replicationStart,\n  emptyQuery,\n  ReadyForQueryMessage,\n  CommandCompleteMessage,\n  CopyDataMessage,\n  CopyResponse,\n  NotificationResponseMessage,\n  RowDescriptionMessage,\n  ParameterDescriptionMessage,\n  Field,\n  DataRowMessage,\n  ParameterStatusMessage,\n  BackendKeyDataMessage,\n  DatabaseError,\n  BackendMessage,\n  MessageName,\n  AuthenticationMD5Password,\n  NoticeMessage,\n} from './messages'\nimport { BufferReader } from './buffer-reader'\n\n// every message is prefixed with a single bye\nconst CODE_LENGTH = 1\n// every message has an int32 length which includes itself but does\n// NOT include the code in the length\nconst LEN_LENGTH = 4\n\nconst HEADER_LENGTH = CODE_LENGTH + LEN_LENGTH\n\nexport type Packet = {\n  code: number\n  packet: Buffer\n}\n\nconst emptyBuffer = Buffer.allocUnsafe(0)\n\ntype StreamOptions = TransformOptions & {\n  mode: Mode\n}\n\nconst enum MessageCodes {\n  DataRow = 0x44, // D\n  ParseComplete = 0x31, // 1\n  BindComplete = 0x32, // 2\n  CloseComplete = 0x33, // 3\n  CommandComplete = 0x43, // C\n  ReadyForQuery = 0x5a, // Z\n  NoData = 0x6e, // n\n  NotificationResponse = 0x41, // A\n  AuthenticationResponse = 0x52, // R\n  ParameterStatus = 0x53, // S\n  BackendKeyData = 0x4b, // K\n  ErrorMessage = 0x45, // E\n  NoticeMessage = 0x4e, // N\n  RowDescriptionMessage = 0x54, // T\n  ParameterDescriptionMessage = 0x74, // t\n  PortalSuspended = 0x73, // s\n  ReplicationStart = 0x57, // W\n  EmptyQuery = 0x49, // I\n  CopyIn = 0x47, // G\n  CopyOut = 0x48, // H\n  CopyDone = 0x63, // c\n  CopyData = 0x64, // d\n}\n\nexport type MessageCallback = (msg: BackendMessage) => void\n\nexport class Parser {\n  private buffer: Buffer = emptyBuffer\n  private bufferLength: number = 0\n  private bufferOffset: number = 0\n  private reader = new BufferReader()\n  private mode: Mode\n\n  constructor(opts?: StreamOptions) {\n    if (opts?.mode === 'binary') {\n      throw new Error('Binary mode not supported yet')\n    }\n    this.mode = opts?.mode || 'text'\n  }\n\n  public parse(buffer: Buffer, callback: MessageCallback) {\n    this.mergeBuffer(buffer)\n    const bufferFullLength = this.bufferOffset + this.bufferLength\n    let offset = this.bufferOffset\n    while (offset + HEADER_LENGTH <= bufferFullLength) {\n      // code is 1 byte long - it identifies the message type\n      const code = this.buffer[offset]\n      // length is 1 Uint32BE - it is the length of the message EXCLUDING the code\n      const length = this.buffer.readUInt32BE(offset + CODE_LENGTH)\n      const fullMessageLength = CODE_LENGTH + length\n      if (fullMessageLength + offset <= bufferFullLength) {\n        const message = this.handlePacket(offset + HEADER_LENGTH, code, length, this.buffer)\n        callback(message)\n        offset += fullMessageLength\n      } else {\n        break\n      }\n    }\n    if (offset === bufferFullLength) {\n      // No more use for the buffer\n      this.buffer = emptyBuffer\n      this.bufferLength = 0\n      this.bufferOffset = 0\n    } else {\n      // Adjust the cursors of remainingBuffer\n      this.bufferLength = bufferFullLength - offset\n      this.bufferOffset = offset\n    }\n  }\n\n  private mergeBuffer(buffer: Buffer): void {\n    if (this.bufferLength > 0) {\n      const newLength = this.bufferLength + buffer.byteLength\n      const newFullLength = newLength + this.bufferOffset\n      if (newFullLength > this.buffer.byteLength) {\n        // We can't concat the new buffer with the remaining one\n        let newBuffer: Buffer\n        if (newLength <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength) {\n          // We can move the relevant part to the beginning of the buffer instead of allocating a new buffer\n          newBuffer = this.buffer\n        } else {\n          // Allocate a new larger buffer\n          let newBufferLength = this.buffer.byteLength * 2\n          while (newLength >= newBufferLength) {\n            newBufferLength *= 2\n          }\n          newBuffer = Buffer.allocUnsafe(newBufferLength)\n        }\n        // Move the remaining buffer to the new one\n        this.buffer.copy(newBuffer, 0, this.bufferOffset, this.bufferOffset + this.bufferLength)\n        this.buffer = newBuffer\n        this.bufferOffset = 0\n      }\n      // Concat the new buffer with the remaining one\n      buffer.copy(this.buffer, this.bufferOffset + this.bufferLength)\n      this.bufferLength = newLength\n    } else {\n      this.buffer = buffer\n      this.bufferOffset = 0\n      this.bufferLength = buffer.byteLength\n    }\n  }\n\n  private handlePacket(offset: number, code: number, length: number, bytes: Buffer): BackendMessage {\n    switch (code) {\n      case MessageCodes.BindComplete:\n        return bindComplete\n      case MessageCodes.ParseComplete:\n        return parseComplete\n      case MessageCodes.CloseComplete:\n        return closeComplete\n      case MessageCodes.NoData:\n        return noData\n      case MessageCodes.PortalSuspended:\n        return portalSuspended\n      case MessageCodes.CopyDone:\n        return copyDone\n      case MessageCodes.ReplicationStart:\n        return replicationStart\n      case MessageCodes.EmptyQuery:\n        return emptyQuery\n      case MessageCodes.DataRow:\n        return this.parseDataRowMessage(offset, length, bytes)\n      case MessageCodes.CommandComplete:\n        return this.parseCommandCompleteMessage(offset, length, bytes)\n      case MessageCodes.ReadyForQuery:\n        return this.parseReadyForQueryMessage(offset, length, bytes)\n      case MessageCodes.NotificationResponse:\n        return this.parseNotificationMessage(offset, length, bytes)\n      case MessageCodes.AuthenticationResponse:\n        return this.parseAuthenticationResponse(offset, length, bytes)\n      case MessageCodes.ParameterStatus:\n        return this.parseParameterStatusMessage(offset, length, bytes)\n      case MessageCodes.BackendKeyData:\n        return this.parseBackendKeyData(offset, length, bytes)\n      case MessageCodes.ErrorMessage:\n        return this.parseErrorMessage(offset, length, bytes, 'error')\n      case MessageCodes.NoticeMessage:\n        return this.parseErrorMessage(offset, length, bytes, 'notice')\n      case MessageCodes.RowDescriptionMessage:\n        return this.parseRowDescriptionMessage(offset, length, bytes)\n      case MessageCodes.ParameterDescriptionMessage:\n        return this.parseParameterDescriptionMessage(offset, length, bytes)\n      case MessageCodes.CopyIn:\n        return this.parseCopyInMessage(offset, length, bytes)\n      case MessageCodes.CopyOut:\n        return this.parseCopyOutMessage(offset, length, bytes)\n      case MessageCodes.CopyData:\n        return this.parseCopyData(offset, length, bytes)\n      default:\n        return new DatabaseError('received invalid response: ' + code.toString(16), length, 'error')\n    }\n  }\n\n  private parseReadyForQueryMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const status = this.reader.string(1)\n    return new ReadyForQueryMessage(length, status)\n  }\n\n  private parseCommandCompleteMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const text = this.reader.cstring()\n    return new CommandCompleteMessage(length, text)\n  }\n\n  private parseCopyData(offset: number, length: number, bytes: Buffer) {\n    const chunk = bytes.slice(offset, offset + (length - 4))\n    return new CopyDataMessage(length, chunk)\n  }\n\n  private parseCopyInMessage(offset: number, length: number, bytes: Buffer) {\n    return this.parseCopyMessage(offset, length, bytes, 'copyInResponse')\n  }\n\n  private parseCopyOutMessage(offset: number, length: number, bytes: Buffer) {\n    return this.parseCopyMessage(offset, length, bytes, 'copyOutResponse')\n  }\n\n  private parseCopyMessage(offset: number, length: number, bytes: Buffer, messageName: MessageName) {\n    this.reader.setBuffer(offset, bytes)\n    const isBinary = this.reader.byte() !== 0\n    const columnCount = this.reader.int16()\n    const message = new CopyResponse(length, messageName, isBinary, columnCount)\n    for (let i = 0; i < columnCount; i++) {\n      message.columnTypes[i] = this.reader.int16()\n    }\n    return message\n  }\n\n  private parseNotificationMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const processId = this.reader.int32()\n    const channel = this.reader.cstring()\n    const payload = this.reader.cstring()\n    return new NotificationResponseMessage(length, processId, channel, payload)\n  }\n\n  private parseRowDescriptionMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const fieldCount = this.reader.int16()\n    const message = new RowDescriptionMessage(length, fieldCount)\n    for (let i = 0; i < fieldCount; i++) {\n      message.fields[i] = this.parseField()\n    }\n    return message\n  }\n\n  private parseField(): Field {\n    const name = this.reader.cstring()\n    const tableID = this.reader.uint32()\n    const columnID = this.reader.int16()\n    const dataTypeID = this.reader.uint32()\n    const dataTypeSize = this.reader.int16()\n    const dataTypeModifier = this.reader.int32()\n    const mode = this.reader.int16() === 0 ? 'text' : 'binary'\n    return new Field(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, mode)\n  }\n\n  private parseParameterDescriptionMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const parameterCount = this.reader.int16()\n    const message = new ParameterDescriptionMessage(length, parameterCount)\n    for (let i = 0; i < parameterCount; i++) {\n      message.dataTypeIDs[i] = this.reader.int32()\n    }\n    return message\n  }\n\n  private parseDataRowMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const fieldCount = this.reader.int16()\n    const fields: any[] = new Array(fieldCount)\n    for (let i = 0; i < fieldCount; i++) {\n      const len = this.reader.int32()\n      // a -1 for length means the value of the field is null\n      fields[i] = len === -1 ? null : this.reader.string(len)\n    }\n    return new DataRowMessage(length, fields)\n  }\n\n  private parseParameterStatusMessage(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const name = this.reader.cstring()\n    const value = this.reader.cstring()\n    return new ParameterStatusMessage(length, name, value)\n  }\n\n  private parseBackendKeyData(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const processID = this.reader.int32()\n    const secretKey = this.reader.int32()\n    return new BackendKeyDataMessage(length, processID, secretKey)\n  }\n\n  public parseAuthenticationResponse(offset: number, length: number, bytes: Buffer) {\n    this.reader.setBuffer(offset, bytes)\n    const code = this.reader.int32()\n    // TODO(bmc): maybe better types here\n    const message: BackendMessage & any = {\n      name: 'authenticationOk',\n      length,\n    }\n\n    switch (code) {\n      case 0: // AuthenticationOk\n        break\n      case 3: // AuthenticationCleartextPassword\n        if (message.length === 8) {\n          message.name = 'authenticationCleartextPassword'\n        }\n        break\n      case 5: // AuthenticationMD5Password\n        if (message.length === 12) {\n          message.name = 'authenticationMD5Password'\n          const salt = this.reader.bytes(4)\n          return new AuthenticationMD5Password(length, salt)\n        }\n        break\n      case 10: // AuthenticationSASL\n        message.name = 'authenticationSASL'\n        message.mechanisms = []\n        let mechanism: string\n        do {\n          mechanism = this.reader.cstring()\n\n          if (mechanism) {\n            message.mechanisms.push(mechanism)\n          }\n        } while (mechanism)\n        break\n      case 11: // AuthenticationSASLContinue\n        message.name = 'authenticationSASLContinue'\n        message.data = this.reader.string(length - 8)\n        break\n      case 12: // AuthenticationSASLFinal\n        message.name = 'authenticationSASLFinal'\n        message.data = this.reader.string(length - 8)\n        break\n      default:\n        throw new Error('Unknown authenticationOk message type ' + code)\n    }\n    return message\n  }\n\n  private parseErrorMessage(offset: number, length: number, bytes: Buffer, name: MessageName) {\n    this.reader.setBuffer(offset, bytes)\n    const fields: Record<string, string> = {}\n    let fieldType = this.reader.string(1)\n    while (fieldType !== '\\0') {\n      fields[fieldType] = this.reader.cstring()\n      fieldType = this.reader.string(1)\n    }\n\n    const messageValue = fields.M\n\n    const message =\n      name === 'notice' ? new NoticeMessage(length, messageValue) : new DatabaseError(messageValue, length, name)\n\n    message.severity = fields.S\n    message.code = fields.C\n    message.detail = fields.D\n    message.hint = fields.H\n    message.position = fields.P\n    message.internalPosition = fields.p\n    message.internalQuery = fields.q\n    message.where = fields.W\n    message.schema = fields.s\n    message.table = fields.t\n    message.column = fields.c\n    message.dataType = fields.d\n    message.constraint = fields.n\n    message.file = fields.F\n    message.line = fields.L\n    message.routine = fields.R\n    return message\n  }\n}\n","import { DatabaseError } from './messages'\nimport { serialize } from './serializer'\nimport { Parser, MessageCallback } from './parser'\n\nexport function parse(stream: NodeJS.ReadableStream, callback: MessageCallback): Promise<void> {\n  const parser = new Parser()\n  stream.on('data', (buffer: Buffer) => parser.parse(buffer, callback))\n  return new Promise((resolve) => stream.on('end', () => resolve()))\n}\n\nexport { serialize, DatabaseError }\n","// This is an empty module that is served up when outside of a workerd environment\n// See the `exports` field in package.json\nexport default {}\n","const { getStream, getSecureStream } = getStreamFuncs()\n\nmodule.exports = {\n  /**\n   * Get a socket stream compatible with the current runtime environment.\n   * @returns {Duplex}\n   */\n  getStream,\n  /**\n   * Get a TLS secured socket, compatible with the current environment,\n   * using the socket and other settings given in `options`.\n   * @returns {Duplex}\n   */\n  getSecureStream,\n}\n\n/**\n * The stream functions that work in Node.js\n */\nfunction getNodejsStreamFuncs() {\n  function getStream(ssl) {\n    const net = require('net')\n    return new net.Socket()\n  }\n\n  function getSecureStream(options) {\n    var tls = require('tls')\n    return tls.connect(options)\n  }\n  return {\n    getStream,\n    getSecureStream,\n  }\n}\n\n/**\n * The stream functions that work in Cloudflare Workers\n */\nfunction getCloudflareStreamFuncs() {\n  function getStream(ssl) {\n    const { CloudflareSocket } = require('pg-cloudflare')\n    return new CloudflareSocket(ssl)\n  }\n\n  function getSecureStream(options) {\n    options.socket.startTls(options)\n    return options.socket\n  }\n  return {\n    getStream,\n    getSecureStream,\n  }\n}\n\n/**\n * Are we running in a Cloudflare Worker?\n *\n * @returns true if the code is currently running inside a Cloudflare Worker.\n */\nfunction isCloudflareRuntime() {\n  // Since 2022-03-21 the `global_navigator` compatibility flag is on for Cloudflare Workers\n  // which means that `navigator.userAgent` will be defined.\n  if (typeof navigator === 'object' && navigator !== null && typeof navigator.userAgent === 'string') {\n    return navigator.userAgent === 'Cloudflare-Workers'\n  }\n  // In case `navigator` or `navigator.userAgent` is not defined then try a more sneaky approach\n  if (typeof Response === 'function') {\n    const resp = new Response(null, { cf: { thing: true } })\n    if (typeof resp.cf === 'object' && resp.cf !== null && resp.cf.thing) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction getStreamFuncs() {\n  if (isCloudflareRuntime()) {\n    return getCloudflareStreamFuncs()\n  }\n  return getNodejsStreamFuncs()\n}\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\n\nconst { parse, serialize } = require('pg-protocol')\nconst { getStream, getSecureStream } = require('./stream')\n\nconst flushBuffer = serialize.flush()\nconst syncBuffer = serialize.sync()\nconst endBuffer = serialize.end()\n\n// TODO(bmc) support binary mode at some point\nclass Connection extends EventEmitter {\n  constructor(config) {\n    super()\n    config = config || {}\n\n    this.stream = config.stream || getStream(config.ssl)\n    if (typeof this.stream === 'function') {\n      this.stream = this.stream(config)\n    }\n\n    this._keepAlive = config.keepAlive\n    this._keepAliveInitialDelayMillis = config.keepAliveInitialDelayMillis\n    this.lastBuffer = false\n    this.parsedStatements = {}\n    this.ssl = config.ssl || false\n    this._ending = false\n    this._emitMessage = false\n    var self = this\n    this.on('newListener', function (eventName) {\n      if (eventName === 'message') {\n        self._emitMessage = true\n      }\n    })\n  }\n\n  connect(port, host) {\n    var self = this\n\n    this._connecting = true\n    this.stream.setNoDelay(true)\n    this.stream.connect(port, host)\n\n    this.stream.once('connect', function () {\n      if (self._keepAlive) {\n        self.stream.setKeepAlive(true, self._keepAliveInitialDelayMillis)\n      }\n      self.emit('connect')\n    })\n\n    const reportStreamError = function (error) {\n      // errors about disconnections should be ignored during disconnect\n      if (self._ending && (error.code === 'ECONNRESET' || error.code === 'EPIPE')) {\n        return\n      }\n      self.emit('error', error)\n    }\n    this.stream.on('error', reportStreamError)\n\n    this.stream.on('close', function () {\n      self.emit('end')\n    })\n\n    if (!this.ssl) {\n      return this.attachListeners(this.stream)\n    }\n\n    this.stream.once('data', function (buffer) {\n      var responseCode = buffer.toString('utf8')\n      switch (responseCode) {\n        case 'S': // Server supports SSL connections, continue with a secure connection\n          break\n        case 'N': // Server does not support SSL connections\n          self.stream.end()\n          return self.emit('error', new Error('The server does not support SSL connections'))\n        default:\n          // Any other response byte, including 'E' (ErrorResponse) indicating a server error\n          self.stream.end()\n          return self.emit('error', new Error('There was an error establishing an SSL connection'))\n      }\n      const options = {\n        socket: self.stream,\n      }\n\n      if (self.ssl !== true) {\n        Object.assign(options, self.ssl)\n\n        if ('key' in self.ssl) {\n          options.key = self.ssl.key\n        }\n      }\n\n      var net = require('net')\n      if (net.isIP && net.isIP(host) === 0) {\n        options.servername = host\n      }\n      try {\n        self.stream = getSecureStream(options)\n      } catch (err) {\n        return self.emit('error', err)\n      }\n      self.attachListeners(self.stream)\n      self.stream.on('error', reportStreamError)\n\n      self.emit('sslconnect')\n    })\n  }\n\n  attachListeners(stream) {\n    parse(stream, (msg) => {\n      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name\n      if (this._emitMessage) {\n        this.emit('message', msg)\n      }\n      this.emit(eventName, msg)\n    })\n  }\n\n  requestSsl() {\n    this.stream.write(serialize.requestSsl())\n  }\n\n  startup(config) {\n    this.stream.write(serialize.startup(config))\n  }\n\n  cancel(processID, secretKey) {\n    this._send(serialize.cancel(processID, secretKey))\n  }\n\n  password(password) {\n    this._send(serialize.password(password))\n  }\n\n  sendSASLInitialResponseMessage(mechanism, initialResponse) {\n    this._send(serialize.sendSASLInitialResponseMessage(mechanism, initialResponse))\n  }\n\n  sendSCRAMClientFinalMessage(additionalData) {\n    this._send(serialize.sendSCRAMClientFinalMessage(additionalData))\n  }\n\n  _send(buffer) {\n    if (!this.stream.writable) {\n      return false\n    }\n    return this.stream.write(buffer)\n  }\n\n  query(text) {\n    this._send(serialize.query(text))\n  }\n\n  // send parse message\n  parse(query) {\n    this._send(serialize.parse(query))\n  }\n\n  // send bind message\n  bind(config) {\n    this._send(serialize.bind(config))\n  }\n\n  // send execute message\n  execute(config) {\n    this._send(serialize.execute(config))\n  }\n\n  flush() {\n    if (this.stream.writable) {\n      this.stream.write(flushBuffer)\n    }\n  }\n\n  sync() {\n    this._ending = true\n    this._send(syncBuffer)\n  }\n\n  ref() {\n    this.stream.ref()\n  }\n\n  unref() {\n    this.stream.unref()\n  }\n\n  end() {\n    // 0x58 = 'X'\n    this._ending = true\n    if (!this._connecting || !this.stream.writable) {\n      this.stream.end()\n      return\n    }\n    return this.stream.write(endBuffer, () => {\n      this.stream.end()\n    })\n  }\n\n  close(msg) {\n    this._send(serialize.close(msg))\n  }\n\n  describe(msg) {\n    this._send(serialize.describe(msg))\n  }\n\n  sendCopyFromChunk(chunk) {\n    this._send(serialize.copyData(chunk))\n  }\n\n  endCopyFrom() {\n    this._send(serialize.copyDone())\n  }\n\n  sendCopyFail(msg) {\n    this._send(serialize.copyFail(msg))\n  }\n}\n\nmodule.exports = Connection\n","/*\nCopyright (c) 2014-2021, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n'use strict'\n\nconst { Transform } = require('stream')\nconst { StringDecoder } = require('string_decoder')\nconst kLast = Symbol('last')\nconst kDecoder = Symbol('decoder')\n\nfunction transform (chunk, enc, cb) {\n  let list\n  if (this.overflow) { // Line buffer is full. Skip to start of next line.\n    const buf = this[kDecoder].write(chunk)\n    list = buf.split(this.matcher)\n\n    if (list.length === 1) return cb() // Line ending not found. Discard entire chunk.\n\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n    list.shift()\n    this.overflow = false\n  } else {\n    this[kLast] += this[kDecoder].write(chunk)\n    list = this[kLast].split(this.matcher)\n  }\n\n  this[kLast] = list.pop()\n\n  for (let i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength\n  if (this.overflow && !this.skipOverflow) {\n    cb(new Error('maximum buffer reached'))\n    return\n  }\n\n  cb()\n}\n\nfunction flush (cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end()\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  cb()\n}\n\nfunction push (self, val) {\n  if (val !== undefined) {\n    self.push(val)\n  }\n}\n\nfunction noop (incoming) {\n  return incoming\n}\n\nfunction split (matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/\n  mapper = mapper || noop\n  options = options || {}\n\n  // Test arguments explicitly.\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp) && !matcher[Symbol.split]) {\n        options = matcher\n        matcher = /\\r?\\n/\n      }\n      break\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper\n        mapper = noop\n      }\n  }\n\n  options = Object.assign({}, options)\n  options.autoDestroy = true\n  options.transform = transform\n  options.flush = flush\n  options.readableObjectMode = true\n\n  const stream = new Transform(options)\n\n  stream[kLast] = ''\n  stream[kDecoder] = new StringDecoder('utf8')\n  stream.matcher = matcher\n  stream.mapper = mapper\n  stream.maxLength = options.maxLength\n  stream.skipOverflow = options.skipOverflow || false\n  stream.overflow = false\n  stream._destroy = function (err, cb) {\n    // Weird Node v12 bug that we need to work around\n    this._writableState.errorEmitted = false\n    cb(err)\n  }\n\n  return stream\n}\n\nmodule.exports = split\n","'use strict';\n\nvar path = require('path')\n  , Stream = require('stream').Stream\n  , split = require('split2')\n  , util = require('util')\n  , defaultPort = 5432\n  , isWin = (process.platform === 'win32')\n  , warnStream = process.stderr\n;\n\n\nvar S_IRWXG = 56     //    00070(8)\n  , S_IRWXO = 7      //    00007(8)\n  , S_IFMT  = 61440  // 00170000(8)\n  , S_IFREG = 32768  //  0100000(8)\n;\nfunction isRegFile(mode) {\n    return ((mode & S_IFMT) == S_IFREG);\n}\n\nvar fieldNames = [ 'host', 'port', 'database', 'user', 'password' ];\nvar nrOfFields = fieldNames.length;\nvar passKey = fieldNames[ nrOfFields -1 ];\n\n\nfunction warn() {\n    var isWritable = (\n        warnStream instanceof Stream &&\n          true === warnStream.writable\n    );\n\n    if (isWritable) {\n        var args = Array.prototype.slice.call(arguments).concat(\"\\n\");\n        warnStream.write( util.format.apply(util, args) );\n    }\n}\n\n\nObject.defineProperty(module.exports, 'isWin', {\n    get : function() {\n        return isWin;\n    } ,\n    set : function(val) {\n        isWin = val;\n    }\n});\n\n\nmodule.exports.warnTo = function(stream) {\n    var old = warnStream;\n    warnStream = stream;\n    return old;\n};\n\nmodule.exports.getFileName = function(rawEnv){\n    var env = rawEnv || process.env;\n    var file = env.PGPASSFILE || (\n        isWin ?\n          path.join( env.APPDATA || './' , 'postgresql', 'pgpass.conf' ) :\n          path.join( env.HOME || './', '.pgpass' )\n    );\n    return file;\n};\n\nmodule.exports.usePgPass = function(stats, fname) {\n    if (Object.prototype.hasOwnProperty.call(process.env, 'PGPASSWORD')) {\n        return false;\n    }\n\n    if (isWin) {\n        return true;\n    }\n\n    fname = fname || '<unkn>';\n\n    if (! isRegFile(stats.mode)) {\n        warn('WARNING: password file \"%s\" is not a plain file', fname);\n        return false;\n    }\n\n    if (stats.mode & (S_IRWXG | S_IRWXO)) {\n        /* If password file is insecure, alert the user and ignore it. */\n        warn('WARNING: password file \"%s\" has group or world access; permissions should be u=rw (0600) or less', fname);\n        return false;\n    }\n\n    return true;\n};\n\n\nvar matcher = module.exports.match = function(connInfo, entry) {\n    return fieldNames.slice(0, -1).reduce(function(prev, field, idx){\n        if (idx == 1) {\n            // the port\n            if ( Number( connInfo[field] || defaultPort ) === Number( entry[field] ) ) {\n                return prev && true;\n            }\n        }\n        return prev && (\n            entry[field] === '*' ||\n              entry[field] === connInfo[field]\n        );\n    }, true);\n};\n\n\nmodule.exports.getPassword = function(connInfo, stream, cb) {\n    var pass;\n    var lineStream = stream.pipe(split());\n\n    function onLine(line) {\n        var entry = parseLine(line);\n        if (entry && isValidEntry(entry) && matcher(connInfo, entry)) {\n            pass = entry[passKey];\n            lineStream.end(); // -> calls onEnd(), but pass is set now\n        }\n    }\n\n    var onEnd = function() {\n        stream.destroy();\n        cb(pass);\n    };\n\n    var onErr = function(err) {\n        stream.destroy();\n        warn('WARNING: error on reading file: %s', err);\n        cb(undefined);\n    };\n\n    stream.on('error', onErr);\n    lineStream\n        .on('data', onLine)\n        .on('end', onEnd)\n        .on('error', onErr)\n    ;\n\n};\n\n\nvar parseLine = module.exports.parseLine = function(line) {\n    if (line.length < 11 || line.match(/^\\s+#/)) {\n        return null;\n    }\n\n    var curChar = '';\n    var prevChar = '';\n    var fieldIdx = 0;\n    var startIdx = 0;\n    var endIdx = 0;\n    var obj = {};\n    var isLastField = false;\n    var addToObj = function(idx, i0, i1) {\n        var field = line.substring(i0, i1);\n\n        if (! Object.hasOwnProperty.call(process.env, 'PGPASS_NO_DEESCAPE')) {\n            field = field.replace(/\\\\([:\\\\])/g, '$1');\n        }\n\n        obj[ fieldNames[idx] ] = field;\n    };\n\n    for (var i = 0 ; i < line.length-1 ; i += 1) {\n        curChar = line.charAt(i+1);\n        prevChar = line.charAt(i);\n\n        isLastField = (fieldIdx == nrOfFields-1);\n\n        if (isLastField) {\n            addToObj(fieldIdx, startIdx);\n            break;\n        }\n\n        if (i >= 0 && curChar == ':' && prevChar !== '\\\\') {\n            addToObj(fieldIdx, startIdx, i+1);\n\n            startIdx = i+2;\n            fieldIdx += 1;\n        }\n    }\n\n    obj = ( Object.keys(obj).length === nrOfFields ) ? obj : null;\n\n    return obj;\n};\n\n\nvar isValidEntry = module.exports.isValidEntry = function(entry){\n    var rules = {\n        // host\n        0 : function(x){\n            return x.length > 0;\n        } ,\n        // port\n        1 : function(x){\n            if (x === '*') {\n                return true;\n            }\n            x = Number(x);\n            return (\n                isFinite(x) &&\n                  x > 0 &&\n                  x < 9007199254740992 &&\n                  Math.floor(x) === x\n            );\n        } ,\n        // database\n        2 : function(x){\n            return x.length > 0;\n        } ,\n        // username\n        3 : function(x){\n            return x.length > 0;\n        } ,\n        // password\n        4 : function(x){\n            return x.length > 0;\n        }\n    };\n\n    for (var idx = 0 ; idx < fieldNames.length ; idx += 1) {\n        var rule = rules[idx];\n        var value = entry[ fieldNames[idx] ] || '';\n\n        var res = rule(value);\n        if (!res) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n","'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar utils = require('./utils')\nvar sasl = require('./crypto/sasl')\nvar TypeOverrides = require('./type-overrides')\n\nvar ConnectionParameters = require('./connection-parameters')\nvar Query = require('./query')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nconst crypto = require('./crypto/utils')\n\nclass Client extends EventEmitter {\n  constructor(config) {\n    super()\n\n    this.connectionParameters = new ConnectionParameters(config)\n    this.user = this.connectionParameters.user\n    this.database = this.connectionParameters.database\n    this.port = this.connectionParameters.port\n    this.host = this.connectionParameters.host\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: this.connectionParameters.password,\n    })\n\n    this.replication = this.connectionParameters.replication\n\n    var c = config || {}\n\n    this._Promise = c.Promise || global.Promise\n    this._types = new TypeOverrides(c.types)\n    this._ending = false\n    this._ended = false\n    this._connecting = false\n    this._connected = false\n    this._connectionError = false\n    this._queryable = true\n\n    this.connection =\n      c.connection ||\n      new Connection({\n        stream: c.stream,\n        ssl: this.connectionParameters.ssl,\n        keepAlive: c.keepAlive || false,\n        keepAliveInitialDelayMillis: c.keepAliveInitialDelayMillis || 0,\n        encoding: this.connectionParameters.client_encoding || 'utf8',\n      })\n    this.queryQueue = []\n    this.binary = c.binary || defaults.binary\n    this.processID = null\n    this.secretKey = null\n    this.ssl = this.connectionParameters.ssl || false\n    // As with Password, make SSL->Key (the private key) non-enumerable.\n    // It won't show up in stack traces\n    // or if the client is console.logged\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this._connectionTimeoutMillis = c.connectionTimeoutMillis || 0\n  }\n\n  _errorAllQueries(err) {\n    const enqueueError = (query) => {\n      process.nextTick(() => {\n        query.handleError(err, this.connection)\n      })\n    }\n\n    if (this.activeQuery) {\n      enqueueError(this.activeQuery)\n      this.activeQuery = null\n    }\n\n    this.queryQueue.forEach(enqueueError)\n    this.queryQueue.length = 0\n  }\n\n  _connect(callback) {\n    var self = this\n    var con = this.connection\n    this._connectionCallback = callback\n\n    if (this._connecting || this._connected) {\n      const err = new Error('Client has already been connected. You cannot reuse a client.')\n      process.nextTick(() => {\n        callback(err)\n      })\n      return\n    }\n    this._connecting = true\n\n    if (this._connectionTimeoutMillis > 0) {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        con._ending = true\n        con.stream.destroy(new Error('timeout expired'))\n      }, this._connectionTimeoutMillis)\n    }\n\n    if (this.host && this.host.indexOf('/') === 0) {\n      con.connect(this.host + '/.s.PGSQL.' + this.port)\n    } else {\n      con.connect(this.port, this.host)\n    }\n\n    // once connection is established send startup message\n    con.on('connect', function () {\n      if (self.ssl) {\n        con.requestSsl()\n      } else {\n        con.startup(self.getStartupConf())\n      }\n    })\n\n    con.on('sslconnect', function () {\n      con.startup(self.getStartupConf())\n    })\n\n    this._attachListeners(con)\n\n    con.once('end', () => {\n      const error = this._ending ? new Error('Connection terminated') : new Error('Connection terminated unexpectedly')\n\n      clearTimeout(this.connectionTimeoutHandle)\n      this._errorAllQueries(error)\n      this._ended = true\n\n      if (!this._ending) {\n        // if the connection is ended without us calling .end()\n        // on this client then we have an unexpected disconnection\n        // treat this as an error unless we've already emitted an error\n        // during connection.\n        if (this._connecting && !this._connectionError) {\n          if (this._connectionCallback) {\n            this._connectionCallback(error)\n          } else {\n            this._handleErrorEvent(error)\n          }\n        } else if (!this._connectionError) {\n          this._handleErrorEvent(error)\n        }\n      }\n\n      process.nextTick(() => {\n        this.emit('end')\n      })\n    })\n  }\n\n  connect(callback) {\n    if (callback) {\n      this._connect(callback)\n      return\n    }\n\n    return new this._Promise((resolve, reject) => {\n      this._connect((error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  _attachListeners(con) {\n    // password request handling\n    con.on('authenticationCleartextPassword', this._handleAuthCleartextPassword.bind(this))\n    // password request handling\n    con.on('authenticationMD5Password', this._handleAuthMD5Password.bind(this))\n    // password request handling (SASL)\n    con.on('authenticationSASL', this._handleAuthSASL.bind(this))\n    con.on('authenticationSASLContinue', this._handleAuthSASLContinue.bind(this))\n    con.on('authenticationSASLFinal', this._handleAuthSASLFinal.bind(this))\n    con.on('backendKeyData', this._handleBackendKeyData.bind(this))\n    con.on('error', this._handleErrorEvent.bind(this))\n    con.on('errorMessage', this._handleErrorMessage.bind(this))\n    con.on('readyForQuery', this._handleReadyForQuery.bind(this))\n    con.on('notice', this._handleNotice.bind(this))\n    con.on('rowDescription', this._handleRowDescription.bind(this))\n    con.on('dataRow', this._handleDataRow.bind(this))\n    con.on('portalSuspended', this._handlePortalSuspended.bind(this))\n    con.on('emptyQuery', this._handleEmptyQuery.bind(this))\n    con.on('commandComplete', this._handleCommandComplete.bind(this))\n    con.on('parseComplete', this._handleParseComplete.bind(this))\n    con.on('copyInResponse', this._handleCopyInResponse.bind(this))\n    con.on('copyData', this._handleCopyData.bind(this))\n    con.on('notification', this._handleNotification.bind(this))\n  }\n\n  // TODO(bmc): deprecate pgpass \"built in\" integration since this.password can be a function\n  // it can be supplied by the user if required - this is a breaking change!\n  _checkPgPass(cb) {\n    const con = this.connection\n    if (typeof this.password === 'function') {\n      this._Promise\n        .resolve()\n        .then(() => this.password())\n        .then((pass) => {\n          if (pass !== undefined) {\n            if (typeof pass !== 'string') {\n              con.emit('error', new TypeError('Password must be a string'))\n              return\n            }\n            this.connectionParameters.password = this.password = pass\n          } else {\n            this.connectionParameters.password = this.password = null\n          }\n          cb()\n        })\n        .catch((err) => {\n          con.emit('error', err)\n        })\n    } else if (this.password !== null) {\n      cb()\n    } else {\n      try {\n        const pgPass = require('pgpass')\n        pgPass(this.connectionParameters, (pass) => {\n          if (undefined !== pass) {\n            this.connectionParameters.password = this.password = pass\n          }\n          cb()\n        })\n      } catch (e) {\n        this.emit('error', e)\n      }\n    }\n  }\n\n  _handleAuthCleartextPassword(msg) {\n    this._checkPgPass(() => {\n      this.connection.password(this.password)\n    })\n  }\n\n  _handleAuthMD5Password(msg) {\n    this._checkPgPass(async () => {\n      try {\n        const hashedPassword = await crypto.postgresMd5PasswordHash(this.user, this.password, msg.salt)\n        this.connection.password(hashedPassword)\n      } catch (e) {\n        this.emit('error', e)\n      }\n    })\n  }\n\n  _handleAuthSASL(msg) {\n    this._checkPgPass(() => {\n      try {\n        this.saslSession = sasl.startSession(msg.mechanisms)\n        this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)\n      } catch (err) {\n        this.connection.emit('error', err)\n      }\n    })\n  }\n\n  async _handleAuthSASLContinue(msg) {\n    try {\n      await sasl.continueSession(this.saslSession, this.password, msg.data)\n      this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)\n    } catch (err) {\n      this.connection.emit('error', err)\n    }\n  }\n\n  _handleAuthSASLFinal(msg) {\n    try {\n      sasl.finalizeSession(this.saslSession, msg.data)\n      this.saslSession = null\n    } catch (err) {\n      this.connection.emit('error', err)\n    }\n  }\n\n  _handleBackendKeyData(msg) {\n    this.processID = msg.processID\n    this.secretKey = msg.secretKey\n  }\n\n  _handleReadyForQuery(msg) {\n    if (this._connecting) {\n      this._connecting = false\n      this._connected = true\n      clearTimeout(this.connectionTimeoutHandle)\n\n      // process possible callback argument to Client#connect\n      if (this._connectionCallback) {\n        this._connectionCallback(null, this)\n        // remove callback for proper error handling\n        // after the connect event\n        this._connectionCallback = null\n      }\n      this.emit('connect')\n    }\n    const { activeQuery } = this\n    this.activeQuery = null\n    this.readyForQuery = true\n    if (activeQuery) {\n      activeQuery.handleReadyForQuery(this.connection)\n    }\n    this._pulseQueryQueue()\n  }\n\n  // if we receieve an error event or error message\n  // during the connection process we handle it here\n  _handleErrorWhileConnecting(err) {\n    if (this._connectionError) {\n      // TODO(bmc): this is swallowing errors - we shouldn't do this\n      return\n    }\n    this._connectionError = true\n    clearTimeout(this.connectionTimeoutHandle)\n    if (this._connectionCallback) {\n      return this._connectionCallback(err)\n    }\n    this.emit('error', err)\n  }\n\n  // if we're connected and we receive an error event from the connection\n  // this means the socket is dead - do a hard abort of all queries and emit\n  // the socket error on the client as well\n  _handleErrorEvent(err) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(err)\n    }\n    this._queryable = false\n    this._errorAllQueries(err)\n    this.emit('error', err)\n  }\n\n  // handle error messages from the postgres backend\n  _handleErrorMessage(msg) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(msg)\n    }\n    const activeQuery = this.activeQuery\n\n    if (!activeQuery) {\n      this._handleErrorEvent(msg)\n      return\n    }\n\n    this.activeQuery = null\n    activeQuery.handleError(msg, this.connection)\n  }\n\n  _handleRowDescription(msg) {\n    // delegate rowDescription to active query\n    this.activeQuery.handleRowDescription(msg)\n  }\n\n  _handleDataRow(msg) {\n    // delegate dataRow to active query\n    this.activeQuery.handleDataRow(msg)\n  }\n\n  _handlePortalSuspended(msg) {\n    // delegate portalSuspended to active query\n    this.activeQuery.handlePortalSuspended(this.connection)\n  }\n\n  _handleEmptyQuery(msg) {\n    // delegate emptyQuery to active query\n    this.activeQuery.handleEmptyQuery(this.connection)\n  }\n\n  _handleCommandComplete(msg) {\n    if (this.activeQuery == null) {\n      const error = new Error('Received unexpected commandComplete message from backend.')\n      this._handleErrorEvent(error)\n      return\n    }\n    // delegate commandComplete to active query\n    this.activeQuery.handleCommandComplete(msg, this.connection)\n  }\n\n  _handleParseComplete() {\n    if (this.activeQuery == null) {\n      const error = new Error('Received unexpected parseComplete message from backend.')\n      this._handleErrorEvent(error)\n      return\n    }\n    // if a prepared statement has a name and properly parses\n    // we track that its already been executed so we don't parse\n    // it again on the same client\n    if (this.activeQuery.name) {\n      this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text\n    }\n  }\n\n  _handleCopyInResponse(msg) {\n    this.activeQuery.handleCopyInResponse(this.connection)\n  }\n\n  _handleCopyData(msg) {\n    this.activeQuery.handleCopyData(msg, this.connection)\n  }\n\n  _handleNotification(msg) {\n    this.emit('notification', msg)\n  }\n\n  _handleNotice(msg) {\n    this.emit('notice', msg)\n  }\n\n  getStartupConf() {\n    var params = this.connectionParameters\n\n    var data = {\n      user: params.user,\n      database: params.database,\n    }\n\n    var appName = params.application_name || params.fallback_application_name\n    if (appName) {\n      data.application_name = appName\n    }\n    if (params.replication) {\n      data.replication = '' + params.replication\n    }\n    if (params.statement_timeout) {\n      data.statement_timeout = String(parseInt(params.statement_timeout, 10))\n    }\n    if (params.lock_timeout) {\n      data.lock_timeout = String(parseInt(params.lock_timeout, 10))\n    }\n    if (params.idle_in_transaction_session_timeout) {\n      data.idle_in_transaction_session_timeout = String(parseInt(params.idle_in_transaction_session_timeout, 10))\n    }\n    if (params.options) {\n      data.options = params.options\n    }\n\n    return data\n  }\n\n  cancel(client, query) {\n    if (client.activeQuery === query) {\n      var con = this.connection\n\n      if (this.host && this.host.indexOf('/') === 0) {\n        con.connect(this.host + '/.s.PGSQL.' + this.port)\n      } else {\n        con.connect(this.port, this.host)\n      }\n\n      // once connection is established send cancel message\n      con.on('connect', function () {\n        con.cancel(client.processID, client.secretKey)\n      })\n    } else if (client.queryQueue.indexOf(query) !== -1) {\n      client.queryQueue.splice(client.queryQueue.indexOf(query), 1)\n    }\n  }\n\n  setTypeParser(oid, format, parseFn) {\n    return this._types.setTypeParser(oid, format, parseFn)\n  }\n\n  getTypeParser(oid, format) {\n    return this._types.getTypeParser(oid, format)\n  }\n\n  // escapeIdentifier and escapeLiteral moved to utility functions & exported\n  // on PG\n  // re-exported here for backwards compatibility\n  escapeIdentifier(str) {\n    return utils.escapeIdentifier(str)\n  }\n\n  escapeLiteral(str) {\n    return utils.escapeLiteral(str)\n  }\n\n  _pulseQueryQueue() {\n    if (this.readyForQuery === true) {\n      this.activeQuery = this.queryQueue.shift()\n      if (this.activeQuery) {\n        this.readyForQuery = false\n        this.hasExecuted = true\n\n        const queryError = this.activeQuery.submit(this.connection)\n        if (queryError) {\n          process.nextTick(() => {\n            this.activeQuery.handleError(queryError, this.connection)\n            this.readyForQuery = true\n            this._pulseQueryQueue()\n          })\n        }\n      } else if (this.hasExecuted) {\n        this.activeQuery = null\n        this.emit('drain')\n      }\n    }\n  }\n\n  query(config, values, callback) {\n    // can take in strings, config object or query object\n    var query\n    var result\n    var readTimeout\n    var readTimeoutTimer\n    var queryCallback\n\n    if (config === null || config === undefined) {\n      throw new TypeError('Client was passed a null or undefined query')\n    } else if (typeof config.submit === 'function') {\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n      result = query = config\n      if (typeof values === 'function') {\n        query.callback = query.callback || values\n      }\n    } else {\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n      query = new Query(config, values, callback)\n      if (!query.callback) {\n        result = new this._Promise((resolve, reject) => {\n          query.callback = (err, res) => (err ? reject(err) : resolve(res))\n        }).catch((err) => {\n          // replace the stack trace that leads to `TCP.onStreamRead` with one that leads back to the\n          // application that created the query\n          Error.captureStackTrace(err)\n          throw err\n        })\n      }\n    }\n\n    if (readTimeout) {\n      queryCallback = query.callback\n\n      readTimeoutTimer = setTimeout(() => {\n        var error = new Error('Query read timeout')\n\n        process.nextTick(() => {\n          query.handleError(error, this.connection)\n        })\n\n        queryCallback(error)\n\n        // we already returned an error,\n        // just do nothing if query completes\n        query.callback = () => {}\n\n        // Remove from queue\n        var index = this.queryQueue.indexOf(query)\n        if (index > -1) {\n          this.queryQueue.splice(index, 1)\n        }\n\n        this._pulseQueryQueue()\n      }, readTimeout)\n\n      query.callback = (err, res) => {\n        clearTimeout(readTimeoutTimer)\n        queryCallback(err, res)\n      }\n    }\n\n    if (this.binary && !query.binary) {\n      query.binary = true\n    }\n\n    if (query._result && !query._result._types) {\n      query._result._types = this._types\n    }\n\n    if (!this._queryable) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client has encountered a connection error and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    if (this._ending) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client was closed and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    this.queryQueue.push(query)\n    this._pulseQueryQueue()\n    return result\n  }\n\n  ref() {\n    this.connection.ref()\n  }\n\n  unref() {\n    this.connection.unref()\n  }\n\n  end(cb) {\n    this._ending = true\n\n    // if we have never connected, then end is a noop, callback immediately\n    if (!this.connection._connecting || this._ended) {\n      if (cb) {\n        cb()\n      } else {\n        return this._Promise.resolve()\n      }\n    }\n\n    if (this.activeQuery || !this._queryable) {\n      // if we have an active query we need to force a disconnect\n      // on the socket - otherwise a hung query could block end forever\n      this.connection.stream.destroy()\n    } else {\n      this.connection.end()\n    }\n\n    if (cb) {\n      this.connection.once('end', cb)\n    } else {\n      return new this._Promise((resolve) => {\n        this.connection.once('end', resolve)\n      })\n    }\n  }\n}\n\n// expose a Query constructor\nClient.Query = Query\n\nmodule.exports = Client\n","'use strict'\nconst EventEmitter = require('events').EventEmitter\n\nconst NOOP = function () {}\n\nconst removeWhere = (list, predicate) => {\n  const i = list.findIndex(predicate)\n\n  return i === -1 ? undefined : list.splice(i, 1)[0]\n}\n\nclass IdleItem {\n  constructor(client, idleListener, timeoutId) {\n    this.client = client\n    this.idleListener = idleListener\n    this.timeoutId = timeoutId\n  }\n}\n\nclass PendingItem {\n  constructor(callback) {\n    this.callback = callback\n  }\n}\n\nfunction throwOnDoubleRelease() {\n  throw new Error('Release called on client which has already been released to the pool.')\n}\n\nfunction promisify(Promise, callback) {\n  if (callback) {\n    return { callback: callback, result: undefined }\n  }\n  let rej\n  let res\n  const cb = function (err, client) {\n    err ? rej(err) : res(client)\n  }\n  const result = new Promise(function (resolve, reject) {\n    res = resolve\n    rej = reject\n  }).catch((err) => {\n    // replace the stack trace that leads to `TCP.onStreamRead` with one that leads back to the\n    // application that created the query\n    Error.captureStackTrace(err)\n    throw err\n  })\n  return { callback: cb, result: result }\n}\n\nfunction makeIdleListener(pool, client) {\n  return function idleListener(err) {\n    err.client = client\n\n    client.removeListener('error', idleListener)\n    client.on('error', () => {\n      pool.log('additional client error after disconnection due to error', err)\n    })\n    pool._remove(client)\n    // TODO - document that once the pool emits an error\n    // the client has already been closed & purged and is unusable\n    pool.emit('error', err, client)\n  }\n}\n\nclass Pool extends EventEmitter {\n  constructor(options, Client) {\n    super()\n    this.options = Object.assign({}, options)\n\n    if (options != null && 'password' in options) {\n      // \"hiding\" the password so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options, 'password', {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: options.password,\n      })\n    }\n    if (options != null && options.ssl && options.ssl.key) {\n      // \"hiding\" the ssl->key so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.options.max = this.options.max || this.options.poolSize || 10\n    this.options.maxUses = this.options.maxUses || Infinity\n    this.options.allowExitOnIdle = this.options.allowExitOnIdle || false\n    this.options.maxLifetimeSeconds = this.options.maxLifetimeSeconds || 0\n    this.log = this.options.log || function () {}\n    this.Client = this.options.Client || Client || require('pg').Client\n    this.Promise = this.options.Promise || global.Promise\n\n    if (typeof this.options.idleTimeoutMillis === 'undefined') {\n      this.options.idleTimeoutMillis = 10000\n    }\n\n    this._clients = []\n    this._idle = []\n    this._expired = new WeakSet()\n    this._pendingQueue = []\n    this._endCallback = undefined\n    this.ending = false\n    this.ended = false\n  }\n\n  _isFull() {\n    return this._clients.length >= this.options.max\n  }\n\n  _pulseQueue() {\n    this.log('pulse queue')\n    if (this.ended) {\n      this.log('pulse queue ended')\n      return\n    }\n    if (this.ending) {\n      this.log('pulse queue on ending')\n      if (this._idle.length) {\n        this._idle.slice().map((item) => {\n          this._remove(item.client)\n        })\n      }\n      if (!this._clients.length) {\n        this.ended = true\n        this._endCallback()\n      }\n      return\n    }\n\n    // if we don't have any waiting, do nothing\n    if (!this._pendingQueue.length) {\n      this.log('no queued requests')\n      return\n    }\n    // if we don't have any idle clients and we have no more room do nothing\n    if (!this._idle.length && this._isFull()) {\n      return\n    }\n    const pendingItem = this._pendingQueue.shift()\n    if (this._idle.length) {\n      const idleItem = this._idle.pop()\n      clearTimeout(idleItem.timeoutId)\n      const client = idleItem.client\n      client.ref && client.ref()\n      const idleListener = idleItem.idleListener\n\n      return this._acquireClient(client, pendingItem, idleListener, false)\n    }\n    if (!this._isFull()) {\n      return this.newClient(pendingItem)\n    }\n    throw new Error('unexpected condition')\n  }\n\n  _remove(client) {\n    const removed = removeWhere(this._idle, (item) => item.client === client)\n\n    if (removed !== undefined) {\n      clearTimeout(removed.timeoutId)\n    }\n\n    this._clients = this._clients.filter((c) => c !== client)\n    client.end()\n    this.emit('remove', client)\n  }\n\n  connect(cb) {\n    if (this.ending) {\n      const err = new Error('Cannot use a pool after calling end on the pool')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n\n    const response = promisify(this.Promise, cb)\n    const result = response.result\n\n    // if we don't have to connect a new client, don't do so\n    if (this._isFull() || this._idle.length) {\n      // if we have idle clients schedule a pulse immediately\n      if (this._idle.length) {\n        process.nextTick(() => this._pulseQueue())\n      }\n\n      if (!this.options.connectionTimeoutMillis) {\n        this._pendingQueue.push(new PendingItem(response.callback))\n        return result\n      }\n\n      const queueCallback = (err, res, done) => {\n        clearTimeout(tid)\n        response.callback(err, res, done)\n      }\n\n      const pendingItem = new PendingItem(queueCallback)\n\n      // set connection timeout on checking out an existing client\n      const tid = setTimeout(() => {\n        // remove the callback from pending waiters because\n        // we're going to call it with a timeout error\n        removeWhere(this._pendingQueue, (i) => i.callback === queueCallback)\n        pendingItem.timedOut = true\n        response.callback(new Error('timeout exceeded when trying to connect'))\n      }, this.options.connectionTimeoutMillis)\n\n      if (tid.unref) {\n        tid.unref()\n      }\n\n      this._pendingQueue.push(pendingItem)\n      return result\n    }\n\n    this.newClient(new PendingItem(response.callback))\n\n    return result\n  }\n\n  newClient(pendingItem) {\n    const client = new this.Client(this.options)\n    this._clients.push(client)\n    const idleListener = makeIdleListener(this, client)\n\n    this.log('checking client timeout')\n\n    // connection timeout logic\n    let tid\n    let timeoutHit = false\n    if (this.options.connectionTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('ending client due to timeout')\n        timeoutHit = true\n        // force kill the node driver, and let libpq do its teardown\n        client.connection ? client.connection.stream.destroy() : client.end()\n      }, this.options.connectionTimeoutMillis)\n    }\n\n    this.log('connecting new client')\n    client.connect((err) => {\n      if (tid) {\n        clearTimeout(tid)\n      }\n      client.on('error', idleListener)\n      if (err) {\n        this.log('client failed to connect', err)\n        // remove the dead client from our list of clients\n        this._clients = this._clients.filter((c) => c !== client)\n        if (timeoutHit) {\n          err = new Error('Connection terminated due to connection timeout', { cause: err })\n        }\n\n        // this client won’t be released, so move on immediately\n        this._pulseQueue()\n\n        if (!pendingItem.timedOut) {\n          pendingItem.callback(err, undefined, NOOP)\n        }\n      } else {\n        this.log('new client connected')\n\n        if (this.options.maxLifetimeSeconds !== 0) {\n          const maxLifetimeTimeout = setTimeout(() => {\n            this.log('ending client due to expired lifetime')\n            this._expired.add(client)\n            const idleIndex = this._idle.findIndex((idleItem) => idleItem.client === client)\n            if (idleIndex !== -1) {\n              this._acquireClient(\n                client,\n                new PendingItem((err, client, clientRelease) => clientRelease()),\n                idleListener,\n                false\n              )\n            }\n          }, this.options.maxLifetimeSeconds * 1000)\n\n          maxLifetimeTimeout.unref()\n          client.once('end', () => clearTimeout(maxLifetimeTimeout))\n        }\n\n        return this._acquireClient(client, pendingItem, idleListener, true)\n      }\n    })\n  }\n\n  // acquire a client for a pending work item\n  _acquireClient(client, pendingItem, idleListener, isNew) {\n    if (isNew) {\n      this.emit('connect', client)\n    }\n\n    this.emit('acquire', client)\n\n    client.release = this._releaseOnce(client, idleListener)\n\n    client.removeListener('error', idleListener)\n\n    if (!pendingItem.timedOut) {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, (err) => {\n          if (err) {\n            client.release(err)\n            return pendingItem.callback(err, undefined, NOOP)\n          }\n\n          pendingItem.callback(undefined, client, client.release)\n        })\n      } else {\n        pendingItem.callback(undefined, client, client.release)\n      }\n    } else {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, client.release)\n      } else {\n        client.release()\n      }\n    }\n  }\n\n  // returns a function that wraps _release and throws if called more than once\n  _releaseOnce(client, idleListener) {\n    let released = false\n\n    return (err) => {\n      if (released) {\n        throwOnDoubleRelease()\n      }\n\n      released = true\n      this._release(client, idleListener, err)\n    }\n  }\n\n  // release a client back to the poll, include an error\n  // to remove it from the pool\n  _release(client, idleListener, err) {\n    client.on('error', idleListener)\n\n    client._poolUseCount = (client._poolUseCount || 0) + 1\n\n    this.emit('release', err, client)\n\n    // TODO(bmc): expose a proper, public interface _queryable and _ending\n    if (err || this.ending || !client._queryable || client._ending || client._poolUseCount >= this.options.maxUses) {\n      if (client._poolUseCount >= this.options.maxUses) {\n        this.log('remove expended client')\n      }\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    const isExpired = this._expired.has(client)\n    if (isExpired) {\n      this.log('remove expired client')\n      this._expired.delete(client)\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    // idle timeout\n    let tid\n    if (this.options.idleTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('remove idle client')\n        this._remove(client)\n      }, this.options.idleTimeoutMillis)\n\n      if (this.options.allowExitOnIdle) {\n        // allow Node to exit if this is all that's left\n        tid.unref()\n      }\n    }\n\n    if (this.options.allowExitOnIdle) {\n      client.unref()\n    }\n\n    this._idle.push(new IdleItem(client, idleListener, tid))\n    this._pulseQueue()\n  }\n\n  query(text, values, cb) {\n    // guard clause against passing a function as the first parameter\n    if (typeof text === 'function') {\n      const response = promisify(this.Promise, text)\n      setImmediate(function () {\n        return response.callback(new Error('Passing a function as the first parameter to pool.query is not supported'))\n      })\n      return response.result\n    }\n\n    // allow plain text query without values\n    if (typeof values === 'function') {\n      cb = values\n      values = undefined\n    }\n    const response = promisify(this.Promise, cb)\n    cb = response.callback\n\n    this.connect((err, client) => {\n      if (err) {\n        return cb(err)\n      }\n\n      let clientReleased = false\n      const onError = (err) => {\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        cb(err)\n      }\n\n      client.once('error', onError)\n      this.log('dispatching query')\n      try {\n        client.query(text, values, (err, res) => {\n          this.log('query dispatched')\n          client.removeListener('error', onError)\n          if (clientReleased) {\n            return\n          }\n          clientReleased = true\n          client.release(err)\n          if (err) {\n            return cb(err)\n          }\n          return cb(undefined, res)\n        })\n      } catch (err) {\n        client.release(err)\n        return cb(err)\n      }\n    })\n    return response.result\n  }\n\n  end(cb) {\n    this.log('ending')\n    if (this.ending) {\n      const err = new Error('Called end on pool more than once')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n    this.ending = true\n    const promised = promisify(this.Promise, cb)\n    this._endCallback = promised.callback\n    this._pulseQueue()\n    return promised.result\n  }\n\n  get waitingCount() {\n    return this._pendingQueue.length\n  }\n\n  get idleCount() {\n    return this._idle.length\n  }\n\n  get expiredCount() {\n    return this._clients.reduce((acc, client) => acc + (this._expired.has(client) ? 1 : 0), 0)\n  }\n\n  get totalCount() {\n    return this._clients.length\n  }\n}\nmodule.exports = Pool\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('../utils')\n\nvar NativeQuery = (module.exports = function (config, values, callback) {\n  EventEmitter.call(this)\n  config = utils.normalizeQueryConfig(config, values, callback)\n  this.text = config.text\n  this.values = config.values\n  this.name = config.name\n  this.queryMode = config.queryMode\n  this.callback = config.callback\n  this.state = 'new'\n  this._arrayMode = config.rowMode === 'array'\n\n  // if the 'row' event is listened for\n  // then emit them as they come in\n  // without setting singleRowMode to true\n  // this has almost no meaning because libpq\n  // reads all rows into memory befor returning any\n  this._emitRowEvents = false\n  this.on(\n    'newListener',\n    function (event) {\n      if (event === 'row') this._emitRowEvents = true\n    }.bind(this)\n  )\n})\n\nutil.inherits(NativeQuery, EventEmitter)\n\nvar errorFieldMap = {\n  /* eslint-disable quote-props */\n  sqlState: 'code',\n  statementPosition: 'position',\n  messagePrimary: 'message',\n  context: 'where',\n  schemaName: 'schema',\n  tableName: 'table',\n  columnName: 'column',\n  dataTypeName: 'dataType',\n  constraintName: 'constraint',\n  sourceFile: 'file',\n  sourceLine: 'line',\n  sourceFunction: 'routine',\n}\n\nNativeQuery.prototype.handleError = function (err) {\n  // copy pq error fields into the error object\n  var fields = this.native.pq.resultErrorFields()\n  if (fields) {\n    for (var key in fields) {\n      var normalizedFieldName = errorFieldMap[key] || key\n      err[normalizedFieldName] = fields[key]\n    }\n  }\n  if (this.callback) {\n    this.callback(err)\n  } else {\n    this.emit('error', err)\n  }\n  this.state = 'error'\n}\n\nNativeQuery.prototype.then = function (onSuccess, onFailure) {\n  return this._getPromise().then(onSuccess, onFailure)\n}\n\nNativeQuery.prototype.catch = function (callback) {\n  return this._getPromise().catch(callback)\n}\n\nNativeQuery.prototype._getPromise = function () {\n  if (this._promise) return this._promise\n  this._promise = new Promise(\n    function (resolve, reject) {\n      this._once('end', resolve)\n      this._once('error', reject)\n    }.bind(this)\n  )\n  return this._promise\n}\n\nNativeQuery.prototype.submit = function (client) {\n  this.state = 'running'\n  var self = this\n  this.native = client.native\n  client.native.arrayMode = this._arrayMode\n\n  var after = function (err, rows, results) {\n    client.native.arrayMode = false\n    setImmediate(function () {\n      self.emit('_done')\n    })\n\n    // handle possible query error\n    if (err) {\n      return self.handleError(err)\n    }\n\n    // emit row events for each row in the result\n    if (self._emitRowEvents) {\n      if (results.length > 1) {\n        rows.forEach((rowOfRows, i) => {\n          rowOfRows.forEach((row) => {\n            self.emit('row', row, results[i])\n          })\n        })\n      } else {\n        rows.forEach(function (row) {\n          self.emit('row', row, results)\n        })\n      }\n    }\n\n    // handle successful result\n    self.state = 'end'\n    self.emit('end', results)\n    if (self.callback) {\n      self.callback(null, results)\n    }\n  }\n\n  if (process.domain) {\n    after = process.domain.bind(after)\n  }\n\n  // named query\n  if (this.name) {\n    if (this.name.length > 63) {\n      /* eslint-disable no-console */\n      console.error('Warning! Postgres only supports 63 characters for query names.')\n      console.error('You supplied %s (%s)', this.name, this.name.length)\n      console.error('This can cause conflicts and silent errors executing queries')\n      /* eslint-enable no-console */\n    }\n    var values = (this.values || []).map(utils.prepareValue)\n\n    // check if the client has already executed this named query\n    // if so...just execute it again - skip the planning phase\n    if (client.namedQueries[this.name]) {\n      if (this.text && client.namedQueries[this.name] !== this.text) {\n        const err = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n        return after(err)\n      }\n      return client.native.execute(this.name, values, after)\n    }\n    // plan the named query the first time, then execute it\n    return client.native.prepare(this.name, this.text, values.length, function (err) {\n      if (err) return after(err)\n      client.namedQueries[self.name] = self.text\n      return self.native.execute(self.name, values, after)\n    })\n  } else if (this.values) {\n    if (!Array.isArray(this.values)) {\n      const err = new Error('Query values must be an array')\n      return after(err)\n    }\n    var vals = this.values.map(utils.prepareValue)\n    client.native.query(this.text, vals, after)\n  } else if (this.queryMode === 'extended') {\n    client.native.query(this.text, [], after)\n  } else {\n    client.native.query(this.text, after)\n  }\n}\n","'use strict'\n\n// eslint-disable-next-line\nvar Native\ntry {\n  // Wrap this `require()` in a try-catch to avoid upstream bundlers from complaining that this might not be available since it is an optional import\n  Native = require('pg-native')\n} catch (e) {\n  throw e\n}\nvar TypeOverrides = require('../type-overrides')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar ConnectionParameters = require('../connection-parameters')\n\nvar NativeQuery = require('./query')\n\nvar Client = (module.exports = function (config) {\n  EventEmitter.call(this)\n  config = config || {}\n\n  this._Promise = config.Promise || global.Promise\n  this._types = new TypeOverrides(config.types)\n\n  this.native = new Native({\n    types: this._types,\n  })\n\n  this._queryQueue = []\n  this._ending = false\n  this._connecting = false\n  this._connected = false\n  this._queryable = true\n\n  // keep these on the object for legacy reasons\n  // for the time being. TODO: deprecate all this jazz\n  var cp = (this.connectionParameters = new ConnectionParameters(config))\n  if (config.nativeConnectionString) cp.nativeConnectionString = config.nativeConnectionString\n  this.user = cp.user\n\n  // \"hiding\" the password so it doesn't show up in stack traces\n  // or if the client is console.logged\n  Object.defineProperty(this, 'password', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: cp.password,\n  })\n  this.database = cp.database\n  this.host = cp.host\n  this.port = cp.port\n\n  // a hash to hold named queries\n  this.namedQueries = {}\n})\n\nClient.Query = NativeQuery\n\nutil.inherits(Client, EventEmitter)\n\nClient.prototype._errorAllQueries = function (err) {\n  const enqueueError = (query) => {\n    process.nextTick(() => {\n      query.native = this.native\n      query.handleError(err)\n    })\n  }\n\n  if (this._hasActiveQuery()) {\n    enqueueError(this._activeQuery)\n    this._activeQuery = null\n  }\n\n  this._queryQueue.forEach(enqueueError)\n  this._queryQueue.length = 0\n}\n\n// connect to the backend\n// pass an optional callback to be called once connected\n// or with an error if there was a connection error\nClient.prototype._connect = function (cb) {\n  var self = this\n\n  if (this._connecting) {\n    process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))\n    return\n  }\n\n  this._connecting = true\n\n  this.connectionParameters.getLibpqConnectionString(function (err, conString) {\n    if (self.connectionParameters.nativeConnectionString) conString = self.connectionParameters.nativeConnectionString\n    if (err) return cb(err)\n    self.native.connect(conString, function (err) {\n      if (err) {\n        self.native.end()\n        return cb(err)\n      }\n\n      // set internal states to connected\n      self._connected = true\n\n      // handle connection errors from the native layer\n      self.native.on('error', function (err) {\n        self._queryable = false\n        self._errorAllQueries(err)\n        self.emit('error', err)\n      })\n\n      self.native.on('notification', function (msg) {\n        self.emit('notification', {\n          channel: msg.relname,\n          payload: msg.extra,\n        })\n      })\n\n      // signal we are connected now\n      self.emit('connect')\n      self._pulseQueryQueue(true)\n\n      cb()\n    })\n  })\n}\n\nClient.prototype.connect = function (callback) {\n  if (callback) {\n    this._connect(callback)\n    return\n  }\n\n  return new this._Promise((resolve, reject) => {\n    this._connect((error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\n// send a query to the server\n// this method is highly overloaded to take\n// 1) string query, optional array of parameters, optional function callback\n// 2) object query with {\n//    string query\n//    optional array values,\n//    optional function callback instead of as a separate parameter\n//    optional string name to name & cache the query plan\n//    optional string rowMode = 'array' for an array of results\n//  }\nClient.prototype.query = function (config, values, callback) {\n  var query\n  var result\n  var readTimeout\n  var readTimeoutTimer\n  var queryCallback\n\n  if (config === null || config === undefined) {\n    throw new TypeError('Client was passed a null or undefined query')\n  } else if (typeof config.submit === 'function') {\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n    result = query = config\n    // accept query(new Query(...), (err, res) => { }) style\n    if (typeof values === 'function') {\n      config.callback = values\n    }\n  } else {\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n    query = new NativeQuery(config, values, callback)\n    if (!query.callback) {\n      let resolveOut, rejectOut\n      result = new this._Promise((resolve, reject) => {\n        resolveOut = resolve\n        rejectOut = reject\n      }).catch((err) => {\n        Error.captureStackTrace(err)\n        throw err\n      })\n      query.callback = (err, res) => (err ? rejectOut(err) : resolveOut(res))\n    }\n  }\n\n  if (readTimeout) {\n    queryCallback = query.callback\n\n    readTimeoutTimer = setTimeout(() => {\n      var error = new Error('Query read timeout')\n\n      process.nextTick(() => {\n        query.handleError(error, this.connection)\n      })\n\n      queryCallback(error)\n\n      // we already returned an error,\n      // just do nothing if query completes\n      query.callback = () => {}\n\n      // Remove from queue\n      var index = this._queryQueue.indexOf(query)\n      if (index > -1) {\n        this._queryQueue.splice(index, 1)\n      }\n\n      this._pulseQueryQueue()\n    }, readTimeout)\n\n    query.callback = (err, res) => {\n      clearTimeout(readTimeoutTimer)\n      queryCallback(err, res)\n    }\n  }\n\n  if (!this._queryable) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client has encountered a connection error and is not queryable'))\n    })\n    return result\n  }\n\n  if (this._ending) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client was closed and is not queryable'))\n    })\n    return result\n  }\n\n  this._queryQueue.push(query)\n  this._pulseQueryQueue()\n  return result\n}\n\n// disconnect from the backend server\nClient.prototype.end = function (cb) {\n  var self = this\n\n  this._ending = true\n\n  if (!this._connected) {\n    this.once('connect', this.end.bind(this, cb))\n  }\n  var result\n  if (!cb) {\n    result = new this._Promise(function (resolve, reject) {\n      cb = (err) => (err ? reject(err) : resolve())\n    })\n  }\n  this.native.end(function () {\n    self._errorAllQueries(new Error('Connection terminated'))\n\n    process.nextTick(() => {\n      self.emit('end')\n      if (cb) cb()\n    })\n  })\n  return result\n}\n\nClient.prototype._hasActiveQuery = function () {\n  return this._activeQuery && this._activeQuery.state !== 'error' && this._activeQuery.state !== 'end'\n}\n\nClient.prototype._pulseQueryQueue = function (initialConnection) {\n  if (!this._connected) {\n    return\n  }\n  if (this._hasActiveQuery()) {\n    return\n  }\n  var query = this._queryQueue.shift()\n  if (!query) {\n    if (!initialConnection) {\n      this.emit('drain')\n    }\n    return\n  }\n  this._activeQuery = query\n  query.submit(this)\n  var self = this\n  query.once('_done', function () {\n    self._pulseQueryQueue()\n  })\n}\n\n// attempt to cancel an in-progress query\nClient.prototype.cancel = function (query) {\n  if (this._activeQuery === query) {\n    this.native.cancel(function () {})\n  } else if (this._queryQueue.indexOf(query) !== -1) {\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1)\n  }\n}\n\nClient.prototype.ref = function () {}\nClient.prototype.unref = function () {}\n\nClient.prototype.setTypeParser = function (oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn)\n}\n\nClient.prototype.getTypeParser = function (oid, format) {\n  return this._types.getTypeParser(oid, format)\n}\n","'use strict'\nmodule.exports = require('./client')\n","'use strict'\n\nvar Client = require('./client')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nvar Pool = require('pg-pool')\nconst { DatabaseError } = require('pg-protocol')\nconst { escapeIdentifier, escapeLiteral } = require('./utils')\n\nconst poolFactory = (Client) => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client)\n    }\n  }\n}\n\nvar PG = function (clientConstructor) {\n  this.defaults = defaults\n  this.Client = clientConstructor\n  this.Query = this.Client.Query\n  this.Pool = poolFactory(this.Client)\n  this._pools = []\n  this.Connection = Connection\n  this.types = require('pg-types')\n  this.DatabaseError = DatabaseError\n  this.escapeIdentifier = escapeIdentifier\n  this.escapeLiteral = escapeLiteral\n}\n\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'))\n} else {\n  module.exports = new PG(Client)\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null\n      try {\n        native = new PG(require('./native'))\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native,\n      })\n\n      return native\n    },\n  })\n}\n","var Stream = require('stream').Stream;\nvar util = require('util');\n\nmodule.exports = DelayedStream;\nfunction DelayedStream() {\n  this.source = null;\n  this.dataSize = 0;\n  this.maxDataSize = 1024 * 1024;\n  this.pauseStream = true;\n\n  this._maxDataSizeExceeded = false;\n  this._released = false;\n  this._bufferedEvents = [];\n}\nutil.inherits(DelayedStream, Stream);\n\nDelayedStream.create = function(source, options) {\n  var delayedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    delayedStream[option] = options[option];\n  }\n\n  delayedStream.source = source;\n\n  var realEmit = source.emit;\n  source.emit = function() {\n    delayedStream._handleEmit(arguments);\n    return realEmit.apply(source, arguments);\n  };\n\n  source.on('error', function() {});\n  if (delayedStream.pauseStream) {\n    source.pause();\n  }\n\n  return delayedStream;\n};\n\nObject.defineProperty(DelayedStream.prototype, 'readable', {\n  configurable: true,\n  enumerable: true,\n  get: function() {\n    return this.source.readable;\n  }\n});\n\nDelayedStream.prototype.setEncoding = function() {\n  return this.source.setEncoding.apply(this.source, arguments);\n};\n\nDelayedStream.prototype.resume = function() {\n  if (!this._released) {\n    this.release();\n  }\n\n  this.source.resume();\n};\n\nDelayedStream.prototype.pause = function() {\n  this.source.pause();\n};\n\nDelayedStream.prototype.release = function() {\n  this._released = true;\n\n  this._bufferedEvents.forEach(function(args) {\n    this.emit.apply(this, args);\n  }.bind(this));\n  this._bufferedEvents = [];\n};\n\nDelayedStream.prototype.pipe = function() {\n  var r = Stream.prototype.pipe.apply(this, arguments);\n  this.resume();\n  return r;\n};\n\nDelayedStream.prototype._handleEmit = function(args) {\n  if (this._released) {\n    this.emit.apply(this, args);\n    return;\n  }\n\n  if (args[0] === 'data') {\n    this.dataSize += args[1].length;\n    this._checkIfMaxDataSizeExceeded();\n  }\n\n  this._bufferedEvents.push(args);\n};\n\nDelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {\n  if (this._maxDataSizeExceeded) {\n    return;\n  }\n\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  this._maxDataSizeExceeded = true;\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'\n  this.emit('error', new Error(message));\n};\n","var util = require('util');\nvar Stream = require('stream').Stream;\nvar DelayedStream = require('delayed-stream');\n\nmodule.exports = CombinedStream;\nfunction CombinedStream() {\n  this.writable = false;\n  this.readable = true;\n  this.dataSize = 0;\n  this.maxDataSize = 2 * 1024 * 1024;\n  this.pauseStreams = true;\n\n  this._released = false;\n  this._streams = [];\n  this._currentStream = null;\n  this._insideLoop = false;\n  this._pendingNext = false;\n}\nutil.inherits(CombinedStream, Stream);\n\nCombinedStream.create = function(options) {\n  var combinedStream = new this();\n\n  options = options || {};\n  for (var option in options) {\n    combinedStream[option] = options[option];\n  }\n\n  return combinedStream;\n};\n\nCombinedStream.isStreamLike = function(stream) {\n  return (typeof stream !== 'function')\n    && (typeof stream !== 'string')\n    && (typeof stream !== 'boolean')\n    && (typeof stream !== 'number')\n    && (!Buffer.isBuffer(stream));\n};\n\nCombinedStream.prototype.append = function(stream) {\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n\n  if (isStreamLike) {\n    if (!(stream instanceof DelayedStream)) {\n      var newStream = DelayedStream.create(stream, {\n        maxDataSize: Infinity,\n        pauseStream: this.pauseStreams,\n      });\n      stream.on('data', this._checkDataSize.bind(this));\n      stream = newStream;\n    }\n\n    this._handleErrors(stream);\n\n    if (this.pauseStreams) {\n      stream.pause();\n    }\n  }\n\n  this._streams.push(stream);\n  return this;\n};\n\nCombinedStream.prototype.pipe = function(dest, options) {\n  Stream.prototype.pipe.call(this, dest, options);\n  this.resume();\n  return dest;\n};\n\nCombinedStream.prototype._getNext = function() {\n  this._currentStream = null;\n\n  if (this._insideLoop) {\n    this._pendingNext = true;\n    return; // defer call\n  }\n\n  this._insideLoop = true;\n  try {\n    do {\n      this._pendingNext = false;\n      this._realGetNext();\n    } while (this._pendingNext);\n  } finally {\n    this._insideLoop = false;\n  }\n};\n\nCombinedStream.prototype._realGetNext = function() {\n  var stream = this._streams.shift();\n\n\n  if (typeof stream == 'undefined') {\n    this.end();\n    return;\n  }\n\n  if (typeof stream !== 'function') {\n    this._pipeNext(stream);\n    return;\n  }\n\n  var getStream = stream;\n  getStream(function(stream) {\n    var isStreamLike = CombinedStream.isStreamLike(stream);\n    if (isStreamLike) {\n      stream.on('data', this._checkDataSize.bind(this));\n      this._handleErrors(stream);\n    }\n\n    this._pipeNext(stream);\n  }.bind(this));\n};\n\nCombinedStream.prototype._pipeNext = function(stream) {\n  this._currentStream = stream;\n\n  var isStreamLike = CombinedStream.isStreamLike(stream);\n  if (isStreamLike) {\n    stream.on('end', this._getNext.bind(this));\n    stream.pipe(this, {end: false});\n    return;\n  }\n\n  var value = stream;\n  this.write(value);\n  this._getNext();\n};\n\nCombinedStream.prototype._handleErrors = function(stream) {\n  var self = this;\n  stream.on('error', function(err) {\n    self._emitError(err);\n  });\n};\n\nCombinedStream.prototype.write = function(data) {\n  this.emit('data', data);\n};\n\nCombinedStream.prototype.pause = function() {\n  if (!this.pauseStreams) {\n    return;\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();\n  this.emit('pause');\n};\n\nCombinedStream.prototype.resume = function() {\n  if (!this._released) {\n    this._released = true;\n    this.writable = true;\n    this._getNext();\n  }\n\n  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();\n  this.emit('resume');\n};\n\nCombinedStream.prototype.end = function() {\n  this._reset();\n  this.emit('end');\n};\n\nCombinedStream.prototype.destroy = function() {\n  this._reset();\n  this.emit('close');\n};\n\nCombinedStream.prototype._reset = function() {\n  this.writable = false;\n  this._streams = [];\n  this._currentStream = null;\n};\n\nCombinedStream.prototype._checkDataSize = function() {\n  this._updateDataSize();\n  if (this.dataSize <= this.maxDataSize) {\n    return;\n  }\n\n  var message =\n    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';\n  this._emitError(new Error(message));\n};\n\nCombinedStream.prototype._updateDataSize = function() {\n  this.dataSize = 0;\n\n  var self = this;\n  this._streams.forEach(function(stream) {\n    if (!stream.dataSize) {\n      return;\n    }\n\n    self.dataSize += stream.dataSize;\n  });\n\n  if (this._currentStream && this._currentStream.dataSize) {\n    this.dataSize += this._currentStream.dataSize;\n  }\n};\n\nCombinedStream.prototype._emitError = function(err) {\n  this._reset();\n  this.emit('error', err);\n};\n","{\n  \"application/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/3gpdash-qoe-report+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/3gpp-ims+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/3gpphal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/3gpphalforms+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/a2l\": {\n    \"source\": \"iana\"\n  },\n  \"application/ace+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/activemessage\": {\n    \"source\": \"iana\"\n  },\n  \"application/activity+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-costmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-directory+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcost+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointcostparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointprop+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-endpointpropparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-error+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-networkmapfilter+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-updatestreamcontrol+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/alto-updatestreamparams+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/aml\": {\n    \"source\": \"iana\"\n  },\n  \"application/andrew-inset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez\"]\n  },\n  \"application/applefile\": {\n    \"source\": \"iana\"\n  },\n  \"application/applixware\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aw\"]\n  },\n  \"application/at+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/atf\": {\n    \"source\": \"iana\"\n  },\n  \"application/atfx\": {\n    \"source\": \"iana\"\n  },\n  \"application/atom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atom\"]\n  },\n  \"application/atomcat+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomcat\"]\n  },\n  \"application/atomdeleted+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomdeleted\"]\n  },\n  \"application/atomicmail\": {\n    \"source\": \"iana\"\n  },\n  \"application/atomsvc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"atomsvc\"]\n  },\n  \"application/atsc-dwd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dwd\"]\n  },\n  \"application/atsc-dynamic-event-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/atsc-held+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"held\"]\n  },\n  \"application/atsc-rdt+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/atsc-rsat+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rsat\"]\n  },\n  \"application/atxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/auth-policy+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/bacnet-xdd+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/batch-smtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/beep+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/calendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/calendar+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xcs\"]\n  },\n  \"application/call-completion\": {\n    \"source\": \"iana\"\n  },\n  \"application/cals-1840\": {\n    \"source\": \"iana\"\n  },\n  \"application/captive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/cccex\": {\n    \"source\": \"iana\"\n  },\n  \"application/ccmp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ccxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ccxml\"]\n  },\n  \"application/cdfx+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cdfx\"]\n  },\n  \"application/cdmi-capability\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmia\"]\n  },\n  \"application/cdmi-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmic\"]\n  },\n  \"application/cdmi-domain\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmid\"]\n  },\n  \"application/cdmi-object\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmio\"]\n  },\n  \"application/cdmi-queue\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdmiq\"]\n  },\n  \"application/cdni\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea\": {\n    \"source\": \"iana\"\n  },\n  \"application/cea-2018+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cellml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cfw\": {\n    \"source\": \"iana\"\n  },\n  \"application/city+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/clr\": {\n    \"source\": \"iana\"\n  },\n  \"application/clue+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/clue_info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cms\": {\n    \"source\": \"iana\"\n  },\n  \"application/cnrp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/coap-group+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/coap-payload\": {\n    \"source\": \"iana\"\n  },\n  \"application/commonground\": {\n    \"source\": \"iana\"\n  },\n  \"application/conference-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cose\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-key\": {\n    \"source\": \"iana\"\n  },\n  \"application/cose-key-set\": {\n    \"source\": \"iana\"\n  },\n  \"application/cpl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cpl\"]\n  },\n  \"application/csrattrs\": {\n    \"source\": \"iana\"\n  },\n  \"application/csta+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cstadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/csvm+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/cu-seeme\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cu\"]\n  },\n  \"application/cwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/cybercash\": {\n    \"source\": \"iana\"\n  },\n  \"application/dart\": {\n    \"compressible\": true\n  },\n  \"application/dash+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpd\"]\n  },\n  \"application/dash-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpp\"]\n  },\n  \"application/dashdelta\": {\n    \"source\": \"iana\"\n  },\n  \"application/davmount+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"davmount\"]\n  },\n  \"application/dca-rft\": {\n    \"source\": \"iana\"\n  },\n  \"application/dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/dec-dx\": {\n    \"source\": \"iana\"\n  },\n  \"application/dialog-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dicom\": {\n    \"source\": \"iana\"\n  },\n  \"application/dicom+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dicom+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dii\": {\n    \"source\": \"iana\"\n  },\n  \"application/dit\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns\": {\n    \"source\": \"iana\"\n  },\n  \"application/dns+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dns-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/docbook+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"dbk\"]\n  },\n  \"application/dots+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/dskpp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/dssc+der\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dssc\"]\n  },\n  \"application/dssc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdssc\"]\n  },\n  \"application/dvcs\": {\n    \"source\": \"iana\"\n  },\n  \"application/ecmascript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"es\",\"ecma\"]\n  },\n  \"application/edi-consent\": {\n    \"source\": \"iana\"\n  },\n  \"application/edi-x12\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/edifact\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/efi\": {\n    \"source\": \"iana\"\n  },\n  \"application/elm+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/elm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.cap+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.comment+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.deviceinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.ecall.msd\": {\n    \"source\": \"iana\"\n  },\n  \"application/emergencycalldata.providerinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.serviceinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.subscriberinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emergencycalldata.veds+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/emma+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"emma\"]\n  },\n  \"application/emotionml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"emotionml\"]\n  },\n  \"application/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"application/epp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/epub+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"epub\"]\n  },\n  \"application/eshop\": {\n    \"source\": \"iana\"\n  },\n  \"application/exi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exi\"]\n  },\n  \"application/expect-ct-report+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/express\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exp\"]\n  },\n  \"application/fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/fastsoap\": {\n    \"source\": \"iana\"\n  },\n  \"application/fdt+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"fdt\"]\n  },\n  \"application/fhir+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/fhir+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/fido.trusted-apps+json\": {\n    \"compressible\": true\n  },\n  \"application/fits\": {\n    \"source\": \"iana\"\n  },\n  \"application/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"application/font-tdpfr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pfr\"]\n  },\n  \"application/font-woff\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/framework-attributes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/geo+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"geojson\"]\n  },\n  \"application/geo+json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/geopackage+sqlite3\": {\n    \"source\": \"iana\"\n  },\n  \"application/geoxacml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/gltf-buffer\": {\n    \"source\": \"iana\"\n  },\n  \"application/gml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"gml\"]\n  },\n  \"application/gpx+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"gpx\"]\n  },\n  \"application/gxf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gxf\"]\n  },\n  \"application/gzip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gz\"]\n  },\n  \"application/h224\": {\n    \"source\": \"iana\"\n  },\n  \"application/held+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/hjson\": {\n    \"extensions\": [\"hjson\"]\n  },\n  \"application/http\": {\n    \"source\": \"iana\"\n  },\n  \"application/hyperstudio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stk\"]\n  },\n  \"application/ibe-key-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ibe-pkg-reply+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ibe-pp-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/iges\": {\n    \"source\": \"iana\"\n  },\n  \"application/im-iscomposing+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/index\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.cmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.obj\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.response\": {\n    \"source\": \"iana\"\n  },\n  \"application/index.vnd\": {\n    \"source\": \"iana\"\n  },\n  \"application/inkml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ink\",\"inkml\"]\n  },\n  \"application/iotp\": {\n    \"source\": \"iana\"\n  },\n  \"application/ipfix\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipfix\"]\n  },\n  \"application/ipp\": {\n    \"source\": \"iana\"\n  },\n  \"application/isup\": {\n    \"source\": \"iana\"\n  },\n  \"application/its+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"its\"]\n  },\n  \"application/java-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jar\",\"war\",\"ear\"]\n  },\n  \"application/java-serialized-object\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"ser\"]\n  },\n  \"application/java-vm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"class\"]\n  },\n  \"application/javascript\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"js\",\"mjs\"]\n  },\n  \"application/jf2feed+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jose\": {\n    \"source\": \"iana\"\n  },\n  \"application/jose+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jrd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jscalendar+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"json\",\"map\"]\n  },\n  \"application/json-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/json-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/json5\": {\n    \"extensions\": [\"json5\"]\n  },\n  \"application/jsonml+json\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonml\"]\n  },\n  \"application/jwk+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwk-set+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/kpml-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/kpml-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/ld+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"jsonld\"]\n  },\n  \"application/lgr+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lgr\"]\n  },\n  \"application/link-format\": {\n    \"source\": \"iana\"\n  },\n  \"application/load-control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/lost+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lostxml\"]\n  },\n  \"application/lostsync+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/lpf+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/lxf\": {\n    \"source\": \"iana\"\n  },\n  \"application/mac-binhex40\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hqx\"]\n  },\n  \"application/mac-compactpro\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpt\"]\n  },\n  \"application/macwriteii\": {\n    \"source\": \"iana\"\n  },\n  \"application/mads+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mads\"]\n  },\n  \"application/manifest+json\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"webmanifest\"]\n  },\n  \"application/marc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mrc\"]\n  },\n  \"application/marcxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mrcx\"]\n  },\n  \"application/mathematica\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ma\",\"nb\",\"mb\"]\n  },\n  \"application/mathml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mathml\"]\n  },\n  \"application/mathml-content+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mathml-presentation+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-associated-procedure-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-deregister+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-envelope+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-msk+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-msk-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-protection-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-reception-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-register+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-register-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-schedule+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbms-user-service-description+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mbox\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbox\"]\n  },\n  \"application/media-policy-dataset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpf\"]\n  },\n  \"application/media_control+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mediaservercontrol+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mscml\"]\n  },\n  \"application/merge-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/metalink+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"metalink\"]\n  },\n  \"application/metalink4+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"meta4\"]\n  },\n  \"application/mets+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mets\"]\n  },\n  \"application/mf4\": {\n    \"source\": \"iana\"\n  },\n  \"application/mikey\": {\n    \"source\": \"iana\"\n  },\n  \"application/mipc\": {\n    \"source\": \"iana\"\n  },\n  \"application/missing-blocks+cbor-seq\": {\n    \"source\": \"iana\"\n  },\n  \"application/mmt-aei+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"maei\"]\n  },\n  \"application/mmt-usd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"musd\"]\n  },\n  \"application/mods+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mods\"]\n  },\n  \"application/moss-keys\": {\n    \"source\": \"iana\"\n  },\n  \"application/moss-signature\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/mosskey-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/mp21\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m21\",\"mp21\"]\n  },\n  \"application/mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mp4s\",\"m4p\"]\n  },\n  \"application/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod\": {\n    \"source\": \"iana\"\n  },\n  \"application/mpeg4-iod-xmt\": {\n    \"source\": \"iana\"\n  },\n  \"application/mrb-consumer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/mrb-publish+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/msc-ivr+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/msc-mixer+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/msword\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"doc\",\"dot\"]\n  },\n  \"application/mud+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/multipart-core\": {\n    \"source\": \"iana\"\n  },\n  \"application/mxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxf\"]\n  },\n  \"application/n-quads\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nq\"]\n  },\n  \"application/n-triples\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nt\"]\n  },\n  \"application/nasdata\": {\n    \"source\": \"iana\"\n  },\n  \"application/news-checkgroups\": {\n    \"source\": \"iana\",\n    \"charset\": \"US-ASCII\"\n  },\n  \"application/news-groupinfo\": {\n    \"source\": \"iana\",\n    \"charset\": \"US-ASCII\"\n  },\n  \"application/news-transmission\": {\n    \"source\": \"iana\"\n  },\n  \"application/nlsml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/node\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cjs\"]\n  },\n  \"application/nss\": {\n    \"source\": \"iana\"\n  },\n  \"application/oauth-authz-req+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/oblivious-dns-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/ocsp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/octet-stream\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"bin\",\"dms\",\"lrf\",\"mar\",\"so\",\"dist\",\"distz\",\"pkg\",\"bpk\",\"dump\",\"elc\",\"deploy\",\"exe\",\"dll\",\"deb\",\"dmg\",\"iso\",\"img\",\"msi\",\"msp\",\"msm\",\"buffer\"]\n  },\n  \"application/oda\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oda\"]\n  },\n  \"application/odm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/odx\": {\n    \"source\": \"iana\"\n  },\n  \"application/oebps-package+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"opf\"]\n  },\n  \"application/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogx\"]\n  },\n  \"application/omdoc+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"omdoc\"]\n  },\n  \"application/onenote\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"onetoc\",\"onetoc2\",\"onetmp\",\"onepkg\"]\n  },\n  \"application/opc-nodeset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/oscore\": {\n    \"source\": \"iana\"\n  },\n  \"application/oxps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oxps\"]\n  },\n  \"application/p21\": {\n    \"source\": \"iana\"\n  },\n  \"application/p21+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/p2p-overlay+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"relo\"]\n  },\n  \"application/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/passport\": {\n    \"source\": \"iana\"\n  },\n  \"application/patch-ops-error+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xer\"]\n  },\n  \"application/pdf\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pdf\"]\n  },\n  \"application/pdx\": {\n    \"source\": \"iana\"\n  },\n  \"application/pem-certificate-chain\": {\n    \"source\": \"iana\"\n  },\n  \"application/pgp-encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pgp\"]\n  },\n  \"application/pgp-keys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"asc\"]\n  },\n  \"application/pgp-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"asc\",\"sig\"]\n  },\n  \"application/pics-rules\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prf\"]\n  },\n  \"application/pidf+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/pidf-diff+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/pkcs10\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p10\"]\n  },\n  \"application/pkcs12\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkcs7-mime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7m\",\"p7c\"]\n  },\n  \"application/pkcs7-signature\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p7s\"]\n  },\n  \"application/pkcs8\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"p8\"]\n  },\n  \"application/pkcs8-encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/pkix-attr-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ac\"]\n  },\n  \"application/pkix-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cer\"]\n  },\n  \"application/pkix-crl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"crl\"]\n  },\n  \"application/pkix-pkipath\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pkipath\"]\n  },\n  \"application/pkixcmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pki\"]\n  },\n  \"application/pls+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"pls\"]\n  },\n  \"application/poc-settings+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/postscript\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ai\",\"eps\",\"ps\"]\n  },\n  \"application/ppsp-tracker+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/problem+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/problem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/provenance+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"provx\"]\n  },\n  \"application/prs.alvestrand.titrax-sheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.cww\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cww\"]\n  },\n  \"application/prs.cyn\": {\n    \"source\": \"iana\",\n    \"charset\": \"7-BIT\"\n  },\n  \"application/prs.hpub+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/prs.nprend\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.plucker\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.rdf-xml-crypt\": {\n    \"source\": \"iana\"\n  },\n  \"application/prs.xsf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/pskc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"pskcxml\"]\n  },\n  \"application/pvd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/qsig\": {\n    \"source\": \"iana\"\n  },\n  \"application/raml+yaml\": {\n    \"compressible\": true,\n    \"extensions\": [\"raml\"]\n  },\n  \"application/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/rdap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rdf\",\"owl\"]\n  },\n  \"application/reginfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rif\"]\n  },\n  \"application/relax-ng-compact-syntax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rnc\"]\n  },\n  \"application/remote-printing\": {\n    \"source\": \"iana\"\n  },\n  \"application/reputon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/resource-lists+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rl\"]\n  },\n  \"application/resource-lists-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rld\"]\n  },\n  \"application/rfc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/riscos\": {\n    \"source\": \"iana\"\n  },\n  \"application/rlmi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/rls-services+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rs\"]\n  },\n  \"application/route-apd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rapd\"]\n  },\n  \"application/route-s-tsid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sls\"]\n  },\n  \"application/route-usd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rusd\"]\n  },\n  \"application/rpki-ghostbusters\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gbr\"]\n  },\n  \"application/rpki-manifest\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mft\"]\n  },\n  \"application/rpki-publication\": {\n    \"source\": \"iana\"\n  },\n  \"application/rpki-roa\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"roa\"]\n  },\n  \"application/rpki-updown\": {\n    \"source\": \"iana\"\n  },\n  \"application/rsd+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rsd\"]\n  },\n  \"application/rss+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"rss\"]\n  },\n  \"application/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"application/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"application/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"application/samlassertion+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/samlmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sarif+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sarif-external-properties+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sbe\": {\n    \"source\": \"iana\"\n  },\n  \"application/sbml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sbml\"]\n  },\n  \"application/scaip+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scim+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/scvp-cv-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scq\"]\n  },\n  \"application/scvp-cv-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scs\"]\n  },\n  \"application/scvp-vp-request\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spq\"]\n  },\n  \"application/scvp-vp-response\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spp\"]\n  },\n  \"application/sdp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sdp\"]\n  },\n  \"application/secevent+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/senml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"senmlx\"]\n  },\n  \"application/senml-etch+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/senml-etch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/senml-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/sensml+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/sensml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sensml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sensmlx\"]\n  },\n  \"application/sensml-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/sep+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sep-exi\": {\n    \"source\": \"iana\"\n  },\n  \"application/session-info\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-payment-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setpay\"]\n  },\n  \"application/set-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/set-registration-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"setreg\"]\n  },\n  \"application/sgml\": {\n    \"source\": \"iana\"\n  },\n  \"application/sgml-open-catalog\": {\n    \"source\": \"iana\"\n  },\n  \"application/shf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"shf\"]\n  },\n  \"application/sieve\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"siv\",\"sieve\"]\n  },\n  \"application/simple-filter+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/simple-message-summary\": {\n    \"source\": \"iana\"\n  },\n  \"application/simplesymbolcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/sipc\": {\n    \"source\": \"iana\"\n  },\n  \"application/slate\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil\": {\n    \"source\": \"iana\"\n  },\n  \"application/smil+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"smi\",\"smil\"]\n  },\n  \"application/smpte336m\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+fastinfoset\": {\n    \"source\": \"iana\"\n  },\n  \"application/soap+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sparql-query\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rq\"]\n  },\n  \"application/sparql-results+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"srx\"]\n  },\n  \"application/spdx+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/spirits-event+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/sql\": {\n    \"source\": \"iana\"\n  },\n  \"application/srgs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gram\"]\n  },\n  \"application/srgs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"grxml\"]\n  },\n  \"application/sru+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sru\"]\n  },\n  \"application/ssdl+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ssdl\"]\n  },\n  \"application/ssml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ssml\"]\n  },\n  \"application/stix+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/swid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"swidtag\"]\n  },\n  \"application/tamp-apex-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-apex-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-community-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-error\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-sequence-adjust-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-status-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/tamp-update-confirm\": {\n    \"source\": \"iana\"\n  },\n  \"application/tar\": {\n    \"compressible\": true\n  },\n  \"application/taxii+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/td+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tei+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tei\",\"teicorpus\"]\n  },\n  \"application/tetra_isi\": {\n    \"source\": \"iana\"\n  },\n  \"application/thraud+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tfi\"]\n  },\n  \"application/timestamp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamp-reply\": {\n    \"source\": \"iana\"\n  },\n  \"application/timestamped-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tsd\"]\n  },\n  \"application/tlsrpt+gzip\": {\n    \"source\": \"iana\"\n  },\n  \"application/tlsrpt+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/tnauthlist\": {\n    \"source\": \"iana\"\n  },\n  \"application/token-introspection+jwt\": {\n    \"source\": \"iana\"\n  },\n  \"application/toml\": {\n    \"compressible\": true,\n    \"extensions\": [\"toml\"]\n  },\n  \"application/trickle-ice-sdpfrag\": {\n    \"source\": \"iana\"\n  },\n  \"application/trig\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"trig\"]\n  },\n  \"application/ttml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ttml\"]\n  },\n  \"application/tve-trigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/tzif\": {\n    \"source\": \"iana\"\n  },\n  \"application/tzif-leap\": {\n    \"source\": \"iana\"\n  },\n  \"application/ubjson\": {\n    \"compressible\": false,\n    \"extensions\": [\"ubj\"]\n  },\n  \"application/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"application/urc-grpsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/urc-ressheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rsheet\"]\n  },\n  \"application/urc-targetdesc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"td\"]\n  },\n  \"application/urc-uisocketdesc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vcard+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vcard+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vemmi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vividence.scriptfile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.1000minds.decision-model+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"1km\"]\n  },\n  \"application/vnd.3gpp-prose+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-prose-pc3ch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp-v2x-local-service-information\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.5gnas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.access-transfer-events+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.bsf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.gmop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.gtpc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.interworking-data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.lpp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mc-signalling-ear\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-payload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-signalling\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.mcdata-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcdata-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-floor-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-signed+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-ue-init-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcptt-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-affiliation-command+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-affiliation-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-location-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-mbms-usage-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-service-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-transmission-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-ue-config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mcvideo-user-profile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.mid-call+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.ngap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pfcp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.pic-bw-large\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-small\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"psb\"]\n  },\n  \"application/vnd.3gpp.pic-bw-var\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pvb\"]\n  },\n  \"application/vnd.3gpp.s1ap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp.sms+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.srvcc-ext+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.srvcc-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.state-and-event-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp.ussd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp2.bcmcsinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.3gpp2.sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3gpp2.tcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tcap\"]\n  },\n  \"application/vnd.3lightssoftware.imagescal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.3m.post-it-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pwn\"]\n  },\n  \"application/vnd.accpac.simply.aso\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aso\"]\n  },\n  \"application/vnd.accpac.simply.imp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"imp\"]\n  },\n  \"application/vnd.acucobol\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acu\"]\n  },\n  \"application/vnd.acucorp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atc\",\"acutc\"]\n  },\n  \"application/vnd.adobe.air-application-installer-package+zip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"air\"]\n  },\n  \"application/vnd.adobe.flash.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.formscentral.fcdt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcdt\"]\n  },\n  \"application/vnd.adobe.fxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fxp\",\"fxpl\"]\n  },\n  \"application/vnd.adobe.partial-upload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.adobe.xdp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdp\"]\n  },\n  \"application/vnd.adobe.xfdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdf\"]\n  },\n  \"application/vnd.aether.imp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.afplinedata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.afplinedata-pagedef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.cmoca-cmresource\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-charset\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-codedfont\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.foca-codepage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-cmtable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-formdef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-mediummap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-objectcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-overlay\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.afpc.modca-pagesegment\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.age\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"age\"]\n  },\n  \"application/vnd.ah-barcode\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ahead.space\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ahead\"]\n  },\n  \"application/vnd.airzip.filesecure.azf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azf\"]\n  },\n  \"application/vnd.airzip.filesecure.azs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azs\"]\n  },\n  \"application/vnd.amadeus+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.amazon.ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"azw\"]\n  },\n  \"application/vnd.amazon.mobi8-ebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.americandynamics.acc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"acc\"]\n  },\n  \"application/vnd.amiga.ami\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ami\"]\n  },\n  \"application/vnd.amundsen.maze+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.android.ota\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.android.package-archive\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"apk\"]\n  },\n  \"application/vnd.anki\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.anser-web-certificate-issue-initiation\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cii\"]\n  },\n  \"application/vnd.anser-web-funds-transfer-initiation\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fti\"]\n  },\n  \"application/vnd.antix.game-component\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"atx\"]\n  },\n  \"application/vnd.apache.arrow.file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.arrow.stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.compact\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.apache.thrift.json\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.api+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.aplextor.warrp+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apothekende.reservation+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.apple.installer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mpkg\"]\n  },\n  \"application/vnd.apple.keynote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"key\"]\n  },\n  \"application/vnd.apple.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m3u8\"]\n  },\n  \"application/vnd.apple.numbers\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"numbers\"]\n  },\n  \"application/vnd.apple.pages\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pages\"]\n  },\n  \"application/vnd.apple.pkpass\": {\n    \"compressible\": false,\n    \"extensions\": [\"pkpass\"]\n  },\n  \"application/vnd.arastra.swi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.aristanetworks.swi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"swi\"]\n  },\n  \"application/vnd.artisan+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.artsquare\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.astraea-software.iota\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iota\"]\n  },\n  \"application/vnd.audiograph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"aep\"]\n  },\n  \"application/vnd.autopackage\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.avalon+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.avistar+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.balsamiq.bmml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bmml\"]\n  },\n  \"application/vnd.balsamiq.bmpr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.banana-accounting\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.error\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.msg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bbf.usp.msg+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.bekitzur-stech+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.bint.med-content\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.biopax.rdf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.blink-idb-value-wrapper\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.blueice.multipass\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpm\"]\n  },\n  \"application/vnd.bluetooth.ep.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bluetooth.le.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bmi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bmi\"]\n  },\n  \"application/vnd.bpf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.bpf3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.businessobjects\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rep\"]\n  },\n  \"application/vnd.byu.uapi+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cab-jscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-cpdl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.canon-lips\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.capasystems-pg+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cendio.thinlinc.clientconf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.century-systems.tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chemdraw+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"cdxml\"]\n  },\n  \"application/vnd.chess-pgn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.chipnuts.karaoke-mmd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmd\"]\n  },\n  \"application/vnd.ciedi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cinderella\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdy\"]\n  },\n  \"application/vnd.cirpack.isdn-ext\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.citationstyles.style+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csl\"]\n  },\n  \"application/vnd.claymore\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cla\"]\n  },\n  \"application/vnd.cloanto.rp9\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rp9\"]\n  },\n  \"application/vnd.clonk.c4group\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c4g\",\"c4d\",\"c4f\",\"c4p\",\"c4u\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amc\"]\n  },\n  \"application/vnd.cluetrust.cartomobile-config-pkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"c11amz\"]\n  },\n  \"application/vnd.coffeescript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.document-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.presentation\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.presentation-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.spreadsheet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collabio.xodocuments.spreadsheet-template\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.collection+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.doc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.collection.next+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.comicbook+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.comicbook-rar\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commerce-battelle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.commonspace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"csp\"]\n  },\n  \"application/vnd.contact.cmsg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdbcmsg\"]\n  },\n  \"application/vnd.coreos.ignition+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cosmocaller\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmc\"]\n  },\n  \"application/vnd.crick.clicker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkx\"]\n  },\n  \"application/vnd.crick.clicker.keyboard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkk\"]\n  },\n  \"application/vnd.crick.clicker.palette\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkp\"]\n  },\n  \"application/vnd.crick.clicker.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkt\"]\n  },\n  \"application/vnd.crick.clicker.wordbank\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"clkw\"]\n  },\n  \"application/vnd.criticaltools.wbs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wbs\"]\n  },\n  \"application/vnd.cryptii.pipe+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.crypto-shade-file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cryptomator.encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cryptomator.vault\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ctc-posml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pml\"]\n  },\n  \"application/vnd.ctct.ws+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cups-pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-postscript\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-ppd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppd\"]\n  },\n  \"application/vnd.cups-raster\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cups-raw\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.curl.car\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"car\"]\n  },\n  \"application/vnd.curl.pcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcurl\"]\n  },\n  \"application/vnd.cyan.dean.root+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cybank\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.cyclonedx+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.cyclonedx+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.d2l.coursepackage1p0+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.d3m-dataset\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.d3m-problem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dart\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dart\"]\n  },\n  \"application/vnd.data-vision.rdz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rdz\"]\n  },\n  \"application/vnd.datapackage+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dataresource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dbf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dbf\"]\n  },\n  \"application/vnd.debian.binary-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dece.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvf\",\"uvvf\",\"uvd\",\"uvvd\"]\n  },\n  \"application/vnd.dece.ttml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uvt\",\"uvvt\"]\n  },\n  \"application/vnd.dece.unspecified\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvx\",\"uvvx\"]\n  },\n  \"application/vnd.dece.zip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvz\",\"uvvz\"]\n  },\n  \"application/vnd.denovo.fcselayout-link\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fe_launch\"]\n  },\n  \"application/vnd.desmume.movie\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dir-bi.plate-dl-nosuffix\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dm.delegation+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dna\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dna\"]\n  },\n  \"application/vnd.document+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dolby.mlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mlp\"]\n  },\n  \"application/vnd.dolby.mobile.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dolby.mobile.2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.doremir.scorecloud-binary-document\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dpgraph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dpg\"]\n  },\n  \"application/vnd.dreamfactory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dfac\"]\n  },\n  \"application/vnd.drive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ds-keypoint\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"kpxx\"]\n  },\n  \"application/vnd.dtg.local\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.flash\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dtg.local.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ait\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ait\"]\n  },\n  \"application/vnd.dvb.dvbisl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.dvbj\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.esgcontainer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcdftnotifaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgaccess2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcesgpdd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.ipdcroaming\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-base\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.iptv.alfec-enhancement\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.notif-aggregate-root+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-container+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-generic+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-msglist+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-registration-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-ia-registration-response+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.notif-init+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.dvb.pfr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dvb.service\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svc\"]\n  },\n  \"application/vnd.dxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.dynageo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"geo\"]\n  },\n  \"application/vnd.dzr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.easykaraoke.cdgdownload\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecdis-update\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecip.rlp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eclipse.ditto+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ecowin.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mag\"]\n  },\n  \"application/vnd.ecowin.filerequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.fileupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.series\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesrequest\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ecowin.seriesupdate\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.efi.img\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.efi.iso\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.emclient.accessrequest+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.enliven\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nml\"]\n  },\n  \"application/vnd.enphase.envoy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eprints.data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.epson.esf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esf\"]\n  },\n  \"application/vnd.epson.msf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msf\"]\n  },\n  \"application/vnd.epson.quickanime\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qam\"]\n  },\n  \"application/vnd.epson.salt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"slt\"]\n  },\n  \"application/vnd.epson.ssf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ssf\"]\n  },\n  \"application/vnd.ericsson.quickcall\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.espass-espass+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.eszigno3+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"es3\",\"et3\"]\n  },\n  \"application/vnd.etsi.aoc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.asic-e+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.etsi.asic-s+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.etsi.cug+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvcommand+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvdiscovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-bc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-cod+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsad-npvr+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvservice+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvsync+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.iptvueprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.mcid+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.mheg5\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.overload-control-policy-dataset+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.pstn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.sci+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.simservs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.timestamp-token\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.etsi.tsl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.etsi.tsl.der\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.eu.kasparian.car+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.eudora.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.profile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.settings\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.evolv.ecig.theme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.exstream-empower+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.exstream-package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ezpix-album\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez2\"]\n  },\n  \"application/vnd.ezpix-package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ez3\"]\n  },\n  \"application/vnd.f-secure.mobile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.familysearch.gedcom+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.fastcopy-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fdf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fdf\"]\n  },\n  \"application/vnd.fdsn.mseed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseed\"]\n  },\n  \"application/vnd.fdsn.seed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"seed\",\"dataless\"]\n  },\n  \"application/vnd.ffsns\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ficlab.flb+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.filmit.zfc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fints\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.firemonkeys.cloudcell\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.flographit\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gph\"]\n  },\n  \"application/vnd.fluxtime.clip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ftc\"]\n  },\n  \"application/vnd.font-fontforge-sfd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.framemaker\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fm\",\"frame\",\"maker\",\"book\"]\n  },\n  \"application/vnd.frogans.fnc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fnc\"]\n  },\n  \"application/vnd.frogans.ltf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ltf\"]\n  },\n  \"application/vnd.fsc.weblaunch\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fsc\"]\n  },\n  \"application/vnd.fujifilm.fb.docuworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.docuworks.binder\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujifilm.fb.jfi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.fujitsu.oasys\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oas\"]\n  },\n  \"application/vnd.fujitsu.oasys2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa2\"]\n  },\n  \"application/vnd.fujitsu.oasys3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oa3\"]\n  },\n  \"application/vnd.fujitsu.oasysgp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fg5\"]\n  },\n  \"application/vnd.fujitsu.oasysprs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bh2\"]\n  },\n  \"application/vnd.fujixerox.art-ex\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.art4\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.ddd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ddd\"]\n  },\n  \"application/vnd.fujixerox.docuworks\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xdw\"]\n  },\n  \"application/vnd.fujixerox.docuworks.binder\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xbd\"]\n  },\n  \"application/vnd.fujixerox.docuworks.container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fujixerox.hbpl\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.fut-misnet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.futoin+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.futoin+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.fuzzysheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fzs\"]\n  },\n  \"application/vnd.genomatix.tuxedo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txd\"]\n  },\n  \"application/vnd.gentics.grd+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geo+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geocube+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.geogebra.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggb\"]\n  },\n  \"application/vnd.geogebra.slides\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.geogebra.tool\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ggt\"]\n  },\n  \"application/vnd.geometry-explorer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gex\",\"gre\"]\n  },\n  \"application/vnd.geonext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gxt\"]\n  },\n  \"application/vnd.geoplan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g2w\"]\n  },\n  \"application/vnd.geospace\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3w\"]\n  },\n  \"application/vnd.gerber\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.globalplatform.card-content-mgt-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.gmx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gmx\"]\n  },\n  \"application/vnd.google-apps.document\": {\n    \"compressible\": false,\n    \"extensions\": [\"gdoc\"]\n  },\n  \"application/vnd.google-apps.presentation\": {\n    \"compressible\": false,\n    \"extensions\": [\"gslides\"]\n  },\n  \"application/vnd.google-apps.spreadsheet\": {\n    \"compressible\": false,\n    \"extensions\": [\"gsheet\"]\n  },\n  \"application/vnd.google-earth.kml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"kml\"]\n  },\n  \"application/vnd.google-earth.kmz\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"kmz\"]\n  },\n  \"application/vnd.gov.sk.e-form+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.gov.sk.e-form+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.gov.sk.xmldatacontainer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.grafeq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gqf\",\"gqs\"]\n  },\n  \"application/vnd.gridmp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.groove-account\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gac\"]\n  },\n  \"application/vnd.groove-help\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ghf\"]\n  },\n  \"application/vnd.groove-identity-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gim\"]\n  },\n  \"application/vnd.groove-injector\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"grv\"]\n  },\n  \"application/vnd.groove-tool-message\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtm\"]\n  },\n  \"application/vnd.groove-tool-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpl\"]\n  },\n  \"application/vnd.groove-vcard\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcg\"]\n  },\n  \"application/vnd.hal+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hal+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"hal\"]\n  },\n  \"application/vnd.handheld-entertainment+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"zmm\"]\n  },\n  \"application/vnd.hbci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hbci\"]\n  },\n  \"application/vnd.hc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hcl-bireports\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hdt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.heroku+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hhe.lesson-player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"les\"]\n  },\n  \"application/vnd.hl7cda+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.hl7v2+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.hp-hpgl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpgl\"]\n  },\n  \"application/vnd.hp-hpid\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hpid\"]\n  },\n  \"application/vnd.hp-hps\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hps\"]\n  },\n  \"application/vnd.hp-jlyt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jlt\"]\n  },\n  \"application/vnd.hp-pcl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcl\"]\n  },\n  \"application/vnd.hp-pclxl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pclxl\"]\n  },\n  \"application/vnd.httphone\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.hydrostatix.sof-data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfd-hdstx\"]\n  },\n  \"application/vnd.hyper+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hyper-item+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hyperdrive+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.hzn-3d-crossword\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.afplinedata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.electronic-media\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ibm.minipay\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpy\"]\n  },\n  \"application/vnd.ibm.modcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"afp\",\"listafp\",\"list3820\"]\n  },\n  \"application/vnd.ibm.rights-management\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"irm\"]\n  },\n  \"application/vnd.ibm.secure-container\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sc\"]\n  },\n  \"application/vnd.iccprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"icc\",\"icm\"]\n  },\n  \"application/vnd.ieee.1905\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.igloader\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igl\"]\n  },\n  \"application/vnd.imagemeter.folder+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.imagemeter.image+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.immervision-ivp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivp\"]\n  },\n  \"application/vnd.immervision-ivu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ivu\"]\n  },\n  \"application/vnd.ims.imsccv1p1\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.imsccv1p3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ims.lis.v2.result+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolconsumerprofile+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolproxy.id+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ims.lti.v2.toolsettings.simple+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informedcontrol.rms+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.informix-visionary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.infotech.project+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.innopath.wamp.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.insors.igm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igm\"]\n  },\n  \"application/vnd.intercon.formnet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpw\",\"xpx\"]\n  },\n  \"application/vnd.intergeo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"i2g\"]\n  },\n  \"application/vnd.intertrust.digibox\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intertrust.nncp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.intu.qbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qbo\"]\n  },\n  \"application/vnd.intu.qfx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qfx\"]\n  },\n  \"application/vnd.iptc.g2.catalogitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.conceptitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.knowledgeitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.newsitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.newsmessage+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.packageitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.iptc.g2.planningitem+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ipunplugged.rcprofile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rcprofile\"]\n  },\n  \"application/vnd.irepository.package+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"irp\"]\n  },\n  \"application/vnd.is-xpr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xpr\"]\n  },\n  \"application/vnd.isac.fcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fcs\"]\n  },\n  \"application/vnd.iso11783-10+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.jam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jam\"]\n  },\n  \"application/vnd.japannet-directory-service\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-jpnstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-payment-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-registration-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-setstore-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.japannet-verification-wakeup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.jcp.javame.midlet-rms\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rms\"]\n  },\n  \"application/vnd.jisp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jisp\"]\n  },\n  \"application/vnd.joost.joda-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"joda\"]\n  },\n  \"application/vnd.jsk.isdn-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.kahootz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktz\",\"ktr\"]\n  },\n  \"application/vnd.kde.karbon\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"karbon\"]\n  },\n  \"application/vnd.kde.kchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chrt\"]\n  },\n  \"application/vnd.kde.kformula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kfo\"]\n  },\n  \"application/vnd.kde.kivio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flw\"]\n  },\n  \"application/vnd.kde.kontour\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kon\"]\n  },\n  \"application/vnd.kde.kpresenter\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kpr\",\"kpt\"]\n  },\n  \"application/vnd.kde.kspread\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ksp\"]\n  },\n  \"application/vnd.kde.kword\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kwd\",\"kwt\"]\n  },\n  \"application/vnd.kenameaapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"htke\"]\n  },\n  \"application/vnd.kidspiration\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kia\"]\n  },\n  \"application/vnd.kinar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"kne\",\"knp\"]\n  },\n  \"application/vnd.koan\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"skp\",\"skd\",\"skt\",\"skm\"]\n  },\n  \"application/vnd.kodak-descriptor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sse\"]\n  },\n  \"application/vnd.las\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.las.las+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.las.las+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lasxml\"]\n  },\n  \"application/vnd.laszip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.leap+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.liberty-request+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.llamagraphics.life-balance.desktop\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lbd\"]\n  },\n  \"application/vnd.llamagraphics.life-balance.exchange+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"lbe\"]\n  },\n  \"application/vnd.logipipe.circuit+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.loom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.lotus-1-2-3\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"123\"]\n  },\n  \"application/vnd.lotus-approach\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"apr\"]\n  },\n  \"application/vnd.lotus-freelance\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pre\"]\n  },\n  \"application/vnd.lotus-notes\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nsf\"]\n  },\n  \"application/vnd.lotus-organizer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"org\"]\n  },\n  \"application/vnd.lotus-screencam\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"scm\"]\n  },\n  \"application/vnd.lotus-wordpro\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lwp\"]\n  },\n  \"application/vnd.macports.portpkg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"portpkg\"]\n  },\n  \"application/vnd.mapbox-vector-tile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mvt\"]\n  },\n  \"application/vnd.marlin.drm.actiontoken+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.conftoken+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.license+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.marlin.drm.mdcf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mason+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.maxar.archive.3tz+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"application/vnd.maxmind.maxmind-db\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mcd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mcd\"]\n  },\n  \"application/vnd.medcalcdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mc1\"]\n  },\n  \"application/vnd.mediastation.cdkey\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cdkey\"]\n  },\n  \"application/vnd.meridian-slingshot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mfer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mwf\"]\n  },\n  \"application/vnd.mfmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mfm\"]\n  },\n  \"application/vnd.micro+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.micrografx.flo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flo\"]\n  },\n  \"application/vnd.micrografx.igx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"igx\"]\n  },\n  \"application/vnd.microsoft.portable-executable\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.microsoft.windows.thumbnail-cache\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.miele+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.mif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mif\"]\n  },\n  \"application/vnd.minisoft-hp3000-save\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mitsubishi.misty-guard.trustweb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mobius.daf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"daf\"]\n  },\n  \"application/vnd.mobius.dis\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dis\"]\n  },\n  \"application/vnd.mobius.mbk\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mbk\"]\n  },\n  \"application/vnd.mobius.mqy\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mqy\"]\n  },\n  \"application/vnd.mobius.msl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msl\"]\n  },\n  \"application/vnd.mobius.plc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plc\"]\n  },\n  \"application/vnd.mobius.txf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"txf\"]\n  },\n  \"application/vnd.mophun.application\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpn\"]\n  },\n  \"application/vnd.mophun.certificate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpc\"]\n  },\n  \"application/vnd.motorola.flexsuite\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.adsi\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.fis\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.gotap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.kmr\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.ttc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.flexsuite.wem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.motorola.iprm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mozilla.xul+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xul\"]\n  },\n  \"application/vnd.ms-3mfdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-artgalry\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cil\"]\n  },\n  \"application/vnd.ms-asf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-cab-compressed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cab\"]\n  },\n  \"application/vnd.ms-color.iccprofile\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-excel\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xls\",\"xlm\",\"xla\",\"xlc\",\"xlt\",\"xlw\"]\n  },\n  \"application/vnd.ms-excel.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlam\"]\n  },\n  \"application/vnd.ms-excel.sheet.binary.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsb\"]\n  },\n  \"application/vnd.ms-excel.sheet.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xlsm\"]\n  },\n  \"application/vnd.ms-excel.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltm\"]\n  },\n  \"application/vnd.ms-fontobject\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eot\"]\n  },\n  \"application/vnd.ms-htmlhelp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"chm\"]\n  },\n  \"application/vnd.ms-ims\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ims\"]\n  },\n  \"application/vnd.ms-lrm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lrm\"]\n  },\n  \"application/vnd.ms-office.activex+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-officetheme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"thmx\"]\n  },\n  \"application/vnd.ms-opentype\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-outlook\": {\n    \"compressible\": false,\n    \"extensions\": [\"msg\"]\n  },\n  \"application/vnd.ms-package.obfuscated-opentype\": {\n    \"source\": \"apache\"\n  },\n  \"application/vnd.ms-pki.seccat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cat\"]\n  },\n  \"application/vnd.ms-pki.stl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stl\"]\n  },\n  \"application/vnd.ms-playready.initiator+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-powerpoint\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ppt\",\"pps\",\"pot\"]\n  },\n  \"application/vnd.ms-powerpoint.addin.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppam\"]\n  },\n  \"application/vnd.ms-powerpoint.presentation.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pptm\"]\n  },\n  \"application/vnd.ms-powerpoint.slide.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldm\"]\n  },\n  \"application/vnd.ms-powerpoint.slideshow.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsm\"]\n  },\n  \"application/vnd.ms-powerpoint.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potm\"]\n  },\n  \"application/vnd.ms-printdevicecapabilities+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-printing.printticket+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-printschematicket+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ms-project\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mpp\",\"mpt\"]\n  },\n  \"application/vnd.ms-tnef\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.nwprinting.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.printerpairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-windows.wsd.oob\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.lic-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-chlg-req\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-wmdrm.meter-resp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ms-word.document.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"docm\"]\n  },\n  \"application/vnd.ms-word.template.macroenabled.12\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotm\"]\n  },\n  \"application/vnd.ms-works\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wps\",\"wks\",\"wcm\",\"wdb\"]\n  },\n  \"application/vnd.ms-wpl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpl\"]\n  },\n  \"application/vnd.ms-xpsdocument\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xps\"]\n  },\n  \"application/vnd.msa-disk-image\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.mseq\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mseq\"]\n  },\n  \"application/vnd.msign\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.multiad.creator.cif\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.music-niff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.musician\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mus\"]\n  },\n  \"application/vnd.muvee.style\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"msty\"]\n  },\n  \"application/vnd.mynfc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"taglet\"]\n  },\n  \"application/vnd.nacamar.ybrid+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.ncd.control\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ncd.reference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nearst.inv+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nebumind.line\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nervana\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.netfpx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.neurolanguage.nlu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nlu\"]\n  },\n  \"application/vnd.nimn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.nitro.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nintendo.snes.rom\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nitf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ntf\",\"nitf\"]\n  },\n  \"application/vnd.noblenet-directory\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnd\"]\n  },\n  \"application/vnd.noblenet-sealer\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nns\"]\n  },\n  \"application/vnd.noblenet-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nnw\"]\n  },\n  \"application/vnd.nokia.catalogs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.conml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.iptv.config+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.isds-radio-presets\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.landmark+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.landmarkcollection+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.n-gage.ac+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ac\"]\n  },\n  \"application/vnd.nokia.n-gage.data\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ngdat\"]\n  },\n  \"application/vnd.nokia.n-gage.symbian.install\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"n-gage\"]\n  },\n  \"application/vnd.nokia.ncd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.nokia.pcd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.nokia.radio-preset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpst\"]\n  },\n  \"application/vnd.nokia.radio-presets\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rpss\"]\n  },\n  \"application/vnd.novadigm.edm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edm\"]\n  },\n  \"application/vnd.novadigm.edx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"edx\"]\n  },\n  \"application/vnd.novadigm.ext\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ext\"]\n  },\n  \"application/vnd.ntt-local.content-share\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.file-transfer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.ogw_remote-access\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_remote\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ntt-local.sip-ta_tcp_stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oasis.opendocument.chart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odc\"]\n  },\n  \"application/vnd.oasis.opendocument.chart-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otc\"]\n  },\n  \"application/vnd.oasis.opendocument.database\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odb\"]\n  },\n  \"application/vnd.oasis.opendocument.formula\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odf\"]\n  },\n  \"application/vnd.oasis.opendocument.formula-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odft\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odg\"]\n  },\n  \"application/vnd.oasis.opendocument.graphics-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otg\"]\n  },\n  \"application/vnd.oasis.opendocument.image\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odi\"]\n  },\n  \"application/vnd.oasis.opendocument.image-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oti\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odp\"]\n  },\n  \"application/vnd.oasis.opendocument.presentation-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"otp\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ods\"]\n  },\n  \"application/vnd.oasis.opendocument.spreadsheet-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ots\"]\n  },\n  \"application/vnd.oasis.opendocument.text\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"odt\"]\n  },\n  \"application/vnd.oasis.opendocument.text-master\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"odm\"]\n  },\n  \"application/vnd.oasis.opendocument.text-template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ott\"]\n  },\n  \"application/vnd.oasis.opendocument.text-web\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"oth\"]\n  },\n  \"application/vnd.obn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ocf+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oci.image.manifest.v1+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oftn.l10n+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessdownload+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.contentaccessstreaming+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.cspg-hexbinary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.dae.svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.dae.xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.mippvcontrolmessage+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.pae.gem\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oipf.spdiscovery+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.spdlist+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.ueprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oipf.userprofile+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.olpc-sugar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xo\"]\n  },\n  \"application/vnd.oma-scws-config\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-request\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma-scws-http-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.associated-procedure-parameter+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.drm-trigger+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.imd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.ltkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.notification+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.provisioningtrigger\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgboot\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.sgdd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.sgdu\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.simple-symbol-container\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.bcast.smartcard-trigger+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.sprov+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.bcast.stkm\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.cab-address-book+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-feature-handler+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-pcc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-subs-invite+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.cab-user-prefs+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.dcd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dcdc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.dd2+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dd2\"]\n  },\n  \"application/vnd.oma.drm.risd+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.group-usage-list+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.lwm2m+cbor\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.lwm2m+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.lwm2m+tlv\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.pal+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.detailed-progress-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.final-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.groups+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.invocation-descriptor+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.poc.optimized-progress-report+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.push\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.oma.scidm.messages+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oma.xcap-directory+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-email+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-file+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omads-folder+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.omaloc-supl-init\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepager\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertamp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertamx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertat\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertatp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.onepagertatx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openblox.game+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"obgx\"]\n  },\n  \"application/vnd.openblox.game-binary\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openeye.oeb\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openofficeorg.extension\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"oxt\"]\n  },\n  \"application/vnd.openstreetmap.data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"osm\"]\n  },\n  \"application/vnd.opentimestamps.ots\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.custom-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.customxmlproperties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawing+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chart+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.extended-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"pptx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sldx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slide+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ppsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.tags+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"potx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"xlsx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xltx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.theme+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.themeoverride+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.vmldrawing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"docx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dotx\"]\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.core-properties+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.openxmlformats-package.relationships+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oracle.resource+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.orange.indata\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osa.netdeploy\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgeo.mapguide.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgp\"]\n  },\n  \"application/vnd.osgi.bundle\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.osgi.dp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dp\"]\n  },\n  \"application/vnd.osgi.subsystem\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"esa\"]\n  },\n  \"application/vnd.otps.ct-kip+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.oxli.countgraph\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pagerduty+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.palm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pdb\",\"pqa\",\"oprc\"]\n  },\n  \"application/vnd.panoply\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.paos.xml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.patentdive\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.patientecommsdoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pawaafile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"paw\"]\n  },\n  \"application/vnd.pcos\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pg.format\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"str\"]\n  },\n  \"application/vnd.pg.osasli\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ei6\"]\n  },\n  \"application/vnd.piaccess.application-licence\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.picsel\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"efif\"]\n  },\n  \"application/vnd.pmi.widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wg\"]\n  },\n  \"application/vnd.poc.group-advertisement+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.pocketlearn\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"plf\"]\n  },\n  \"application/vnd.powerbuilder6\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pbd\"]\n  },\n  \"application/vnd.powerbuilder6-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder7-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.powerbuilder75-s\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.preminet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.previewsystems.box\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"box\"]\n  },\n  \"application/vnd.proteus.magazine\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mgz\"]\n  },\n  \"application/vnd.psfs\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.publishare-delta-tree\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qps\"]\n  },\n  \"application/vnd.pvi.ptid1\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ptid\"]\n  },\n  \"application/vnd.pwg-multiplexed\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.pwg-xhtml-print+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.qualcomm.brew-app-res\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quarantainenet\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.quark.quarkxpress\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"qxd\",\"qxt\",\"qwd\",\"qwt\",\"qxl\",\"qxb\"]\n  },\n  \"application/vnd.quobject-quoxdocument\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.radisys.moml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-conf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-conn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-dialog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-audit-stream+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-conf+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-base+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-fax-detect+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-fax-sendrecv+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-group+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-speech+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.radisys.msml-dialog-transform+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.rainstor.data\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rapid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.rar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rar\"]\n  },\n  \"application/vnd.realvnc.bed\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bed\"]\n  },\n  \"application/vnd.recordare.musicxml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxl\"]\n  },\n  \"application/vnd.recordare.musicxml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"musicxml\"]\n  },\n  \"application/vnd.renlearn.rlprint\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.resilient.logic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.restful+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.rig.cryptonote\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cryptonote\"]\n  },\n  \"application/vnd.rim.cod\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cod\"]\n  },\n  \"application/vnd.rn-realmedia\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rm\"]\n  },\n  \"application/vnd.rn-realmedia-vbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmvb\"]\n  },\n  \"application/vnd.route66.link66+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"link66\"]\n  },\n  \"application/vnd.rs-274x\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ruckus.download\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.s3sms\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sailingtracker.track\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"st\"]\n  },\n  \"application/vnd.sar\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.cid\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sbm.mid2\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.scribus\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.3df\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.csf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.doc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.eml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.mht\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.net\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.ppt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.tiff\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealed.xls\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.html\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sealedmedia.softseal.pdf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.seemail\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"see\"]\n  },\n  \"application/vnd.seis+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.sema\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sema\"]\n  },\n  \"application/vnd.semd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semd\"]\n  },\n  \"application/vnd.semf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"semf\"]\n  },\n  \"application/vnd.shade-save-file\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.shana.informed.formdata\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ifm\"]\n  },\n  \"application/vnd.shana.informed.formtemplate\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"itp\"]\n  },\n  \"application/vnd.shana.informed.interchange\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"iif\"]\n  },\n  \"application/vnd.shana.informed.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ipk\"]\n  },\n  \"application/vnd.shootproof+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.shopkick+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.shp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.shx\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sigrok.session\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.simtech-mindmapper\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"twd\",\"twds\"]\n  },\n  \"application/vnd.siren+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.smaf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmf\"]\n  },\n  \"application/vnd.smart.notebook\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.smart.teacher\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"teacher\"]\n  },\n  \"application/vnd.snesdev-page-table\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.software602.filler.form+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"fo\"]\n  },\n  \"application/vnd.software602.filler.form-xml-zip\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.solent.sdkm+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"sdkm\",\"sdkd\"]\n  },\n  \"application/vnd.spotfire.dxp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxp\"]\n  },\n  \"application/vnd.spotfire.sfs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sfs\"]\n  },\n  \"application/vnd.sqlite3\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-cod\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-dtf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sss-ntf\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.stardivision.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdc\"]\n  },\n  \"application/vnd.stardivision.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sda\"]\n  },\n  \"application/vnd.stardivision.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdd\"]\n  },\n  \"application/vnd.stardivision.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smf\"]\n  },\n  \"application/vnd.stardivision.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sdw\",\"vor\"]\n  },\n  \"application/vnd.stardivision.writer-global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgl\"]\n  },\n  \"application/vnd.stepmania.package\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"smzip\"]\n  },\n  \"application/vnd.stepmania.stepchart\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sm\"]\n  },\n  \"application/vnd.street-stream\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sun.wadl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wadl\"]\n  },\n  \"application/vnd.sun.xml.calc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxc\"]\n  },\n  \"application/vnd.sun.xml.calc.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stc\"]\n  },\n  \"application/vnd.sun.xml.draw\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxd\"]\n  },\n  \"application/vnd.sun.xml.draw.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"std\"]\n  },\n  \"application/vnd.sun.xml.impress\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxi\"]\n  },\n  \"application/vnd.sun.xml.impress.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sti\"]\n  },\n  \"application/vnd.sun.xml.math\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxm\"]\n  },\n  \"application/vnd.sun.xml.writer\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxw\"]\n  },\n  \"application/vnd.sun.xml.writer.global\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sxg\"]\n  },\n  \"application/vnd.sun.xml.writer.template\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"stw\"]\n  },\n  \"application/vnd.sus-calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sus\",\"susp\"]\n  },\n  \"application/vnd.svd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"svd\"]\n  },\n  \"application/vnd.swiftview-ics\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.sycle+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.syft+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.symbian.install\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sis\",\"sisx\"]\n  },\n  \"application/vnd.syncml+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"xsm\"]\n  },\n  \"application/vnd.syncml.dm+wbxml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"bdm\"]\n  },\n  \"application/vnd.syncml.dm+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"xdm\"]\n  },\n  \"application/vnd.syncml.dm.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmddf+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"ddf\"]\n  },\n  \"application/vnd.syncml.dmtnds+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.syncml.dmtnds+xml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true\n  },\n  \"application/vnd.syncml.ds.notification\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tableschema+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tao.intent-module-archive\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tao\"]\n  },\n  \"application/vnd.tcpdump.pcap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcap\",\"cap\",\"dmp\"]\n  },\n  \"application/vnd.think-cell.ppttc+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tmd.mediaflex.api+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.tml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.tmobile-livetv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tmo\"]\n  },\n  \"application/vnd.tri.onesource\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.trid.tpt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tpt\"]\n  },\n  \"application/vnd.triscape.mxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxs\"]\n  },\n  \"application/vnd.trueapp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tra\"]\n  },\n  \"application/vnd.truedoc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ubisoft.webplayer\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ufdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ufd\",\"ufdl\"]\n  },\n  \"application/vnd.uiq.theme\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"utz\"]\n  },\n  \"application/vnd.umajin\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"umj\"]\n  },\n  \"application/vnd.unity\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"unityweb\"]\n  },\n  \"application/vnd.uoml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uoml\"]\n  },\n  \"application/vnd.uplanet.alert\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.alert-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.bearer-choice-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.cacheop-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.channel-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.list-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.listcmd-wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uplanet.signal\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.uri-map\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.valve.source.material\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vcx\"]\n  },\n  \"application/vnd.vd-study\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vectorworks\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vel+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.verimatrix.vcas\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.veritone.aion+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.veryant.thin\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.ves.encrypted\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vidsoft.vidconference\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.visio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsd\",\"vst\",\"vss\",\"vsw\"]\n  },\n  \"application/vnd.visionary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vis\"]\n  },\n  \"application/vnd.vividence.scriptfile\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.vsf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vsf\"]\n  },\n  \"application/vnd.wap.sic\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.slc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wap.wbxml\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"wbxml\"]\n  },\n  \"application/vnd.wap.wmlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlc\"]\n  },\n  \"application/vnd.wap.wmlscriptc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmlsc\"]\n  },\n  \"application/vnd.webturbo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wtb\"]\n  },\n  \"application/vnd.wfa.dpp\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.p2p\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wfa.wsc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.windows.devicepairing\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmc\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wmf.bootstrap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.mathematica.package\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wolfram.player\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"nbp\"]\n  },\n  \"application/vnd.wordperfect\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wpd\"]\n  },\n  \"application/vnd.wqd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wqd\"]\n  },\n  \"application/vnd.wrq-hp3000-labelled\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wt.stf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stf\"]\n  },\n  \"application/vnd.wv.csp+wbxml\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.wv.csp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.wv.ssp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xacml+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xara\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xar\"]\n  },\n  \"application/vnd.xfdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xfdl\"]\n  },\n  \"application/vnd.xfdl.webform\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmi+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vnd.xmpie.cpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.dpkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.plan\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.ppkg\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.xmpie.xlim\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.hv-dic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvd\"]\n  },\n  \"application/vnd.yamaha.hv-script\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvs\"]\n  },\n  \"application/vnd.yamaha.hv-voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hvp\"]\n  },\n  \"application/vnd.yamaha.openscoreformat\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"osf\"]\n  },\n  \"application/vnd.yamaha.openscoreformat.osfpvg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"osfpvg\"]\n  },\n  \"application/vnd.yamaha.remote-setup\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.smaf-audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"saf\"]\n  },\n  \"application/vnd.yamaha.smaf-phrase\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spf\"]\n  },\n  \"application/vnd.yamaha.through-ngn\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yamaha.tunnel-udpencap\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yaoweme\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.yellowriver-custom-menu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cmp\"]\n  },\n  \"application/vnd.youtube.yt\": {\n    \"source\": \"iana\"\n  },\n  \"application/vnd.zul\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"zir\",\"zirz\"]\n  },\n  \"application/vnd.zzazz.deck+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"zaz\"]\n  },\n  \"application/voicexml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vxml\"]\n  },\n  \"application/voucher-cms+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/vq-rtcpxr\": {\n    \"source\": \"iana\"\n  },\n  \"application/wasm\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wasm\"]\n  },\n  \"application/watcherinfo+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wif\"]\n  },\n  \"application/webpush-options+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/whoispp-query\": {\n    \"source\": \"iana\"\n  },\n  \"application/whoispp-response\": {\n    \"source\": \"iana\"\n  },\n  \"application/widget\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wgt\"]\n  },\n  \"application/winhlp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hlp\"]\n  },\n  \"application/wita\": {\n    \"source\": \"iana\"\n  },\n  \"application/wordperfect5.1\": {\n    \"source\": \"iana\"\n  },\n  \"application/wsdl+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wsdl\"]\n  },\n  \"application/wspolicy+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"wspolicy\"]\n  },\n  \"application/x-7z-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"7z\"]\n  },\n  \"application/x-abiword\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"abw\"]\n  },\n  \"application/x-ace-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ace\"]\n  },\n  \"application/x-amf\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-apple-diskimage\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dmg\"]\n  },\n  \"application/x-arj\": {\n    \"compressible\": false,\n    \"extensions\": [\"arj\"]\n  },\n  \"application/x-authorware-bin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aab\",\"x32\",\"u32\",\"vox\"]\n  },\n  \"application/x-authorware-map\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aam\"]\n  },\n  \"application/x-authorware-seg\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aas\"]\n  },\n  \"application/x-bcpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bcpio\"]\n  },\n  \"application/x-bdoc\": {\n    \"compressible\": false,\n    \"extensions\": [\"bdoc\"]\n  },\n  \"application/x-bittorrent\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"torrent\"]\n  },\n  \"application/x-blorb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"blb\",\"blorb\"]\n  },\n  \"application/x-bzip\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz\"]\n  },\n  \"application/x-bzip2\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"bz2\",\"boz\"]\n  },\n  \"application/x-cbr\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cbr\",\"cba\",\"cbt\",\"cbz\",\"cb7\"]\n  },\n  \"application/x-cdlink\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcd\"]\n  },\n  \"application/x-cfs-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cfs\"]\n  },\n  \"application/x-chat\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"chat\"]\n  },\n  \"application/x-chess-pgn\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgn\"]\n  },\n  \"application/x-chrome-extension\": {\n    \"extensions\": [\"crx\"]\n  },\n  \"application/x-cocoa\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"cco\"]\n  },\n  \"application/x-compress\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-conference\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nsc\"]\n  },\n  \"application/x-cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cpio\"]\n  },\n  \"application/x-csh\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csh\"]\n  },\n  \"application/x-deb\": {\n    \"compressible\": false\n  },\n  \"application/x-debian-package\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"deb\",\"udeb\"]\n  },\n  \"application/x-dgc-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dgc\"]\n  },\n  \"application/x-director\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dir\",\"dcr\",\"dxr\",\"cst\",\"cct\",\"cxt\",\"w3d\",\"fgd\",\"swa\"]\n  },\n  \"application/x-doom\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wad\"]\n  },\n  \"application/x-dtbncx+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ncx\"]\n  },\n  \"application/x-dtbook+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"dtb\"]\n  },\n  \"application/x-dtbresource+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"res\"]\n  },\n  \"application/x-dvi\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"dvi\"]\n  },\n  \"application/x-envoy\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"evy\"]\n  },\n  \"application/x-eva\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"eva\"]\n  },\n  \"application/x-font-bdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"bdf\"]\n  },\n  \"application/x-font-dos\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-framemaker\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-ghostscript\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gsf\"]\n  },\n  \"application/x-font-libgrx\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-linux-psf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"psf\"]\n  },\n  \"application/x-font-pcf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcf\"]\n  },\n  \"application/x-font-snf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"snf\"]\n  },\n  \"application/x-font-speedo\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-sunos-news\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-font-type1\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pfa\",\"pfb\",\"pfm\",\"afm\"]\n  },\n  \"application/x-font-vfont\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-freearc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"arc\"]\n  },\n  \"application/x-futuresplash\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"spl\"]\n  },\n  \"application/x-gca-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gca\"]\n  },\n  \"application/x-glulx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ulx\"]\n  },\n  \"application/x-gnumeric\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gnumeric\"]\n  },\n  \"application/x-gramps-xml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gramps\"]\n  },\n  \"application/x-gtar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gtar\"]\n  },\n  \"application/x-gzip\": {\n    \"source\": \"apache\"\n  },\n  \"application/x-hdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"hdf\"]\n  },\n  \"application/x-httpd-php\": {\n    \"compressible\": true,\n    \"extensions\": [\"php\"]\n  },\n  \"application/x-install-instructions\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"install\"]\n  },\n  \"application/x-iso9660-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"iso\"]\n  },\n  \"application/x-iwork-keynote-sffkey\": {\n    \"extensions\": [\"key\"]\n  },\n  \"application/x-iwork-numbers-sffnumbers\": {\n    \"extensions\": [\"numbers\"]\n  },\n  \"application/x-iwork-pages-sffpages\": {\n    \"extensions\": [\"pages\"]\n  },\n  \"application/x-java-archive-diff\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jardiff\"]\n  },\n  \"application/x-java-jnlp-file\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"jnlp\"]\n  },\n  \"application/x-javascript\": {\n    \"compressible\": true\n  },\n  \"application/x-keepass2\": {\n    \"extensions\": [\"kdbx\"]\n  },\n  \"application/x-latex\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"latex\"]\n  },\n  \"application/x-lua-bytecode\": {\n    \"extensions\": [\"luac\"]\n  },\n  \"application/x-lzh-compressed\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lzh\",\"lha\"]\n  },\n  \"application/x-makeself\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"run\"]\n  },\n  \"application/x-mie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mie\"]\n  },\n  \"application/x-mobipocket-ebook\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"prc\",\"mobi\"]\n  },\n  \"application/x-mpegurl\": {\n    \"compressible\": false\n  },\n  \"application/x-ms-application\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"application\"]\n  },\n  \"application/x-ms-shortcut\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"lnk\"]\n  },\n  \"application/x-ms-wmd\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmd\"]\n  },\n  \"application/x-ms-wmz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmz\"]\n  },\n  \"application/x-ms-xbap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbap\"]\n  },\n  \"application/x-msaccess\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mdb\"]\n  },\n  \"application/x-msbinder\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obd\"]\n  },\n  \"application/x-mscardfile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"crd\"]\n  },\n  \"application/x-msclip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"clp\"]\n  },\n  \"application/x-msdos-program\": {\n    \"extensions\": [\"exe\"]\n  },\n  \"application/x-msdownload\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"exe\",\"dll\",\"com\",\"bat\",\"msi\"]\n  },\n  \"application/x-msmediaview\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mvb\",\"m13\",\"m14\"]\n  },\n  \"application/x-msmetafile\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmf\",\"wmz\",\"emf\",\"emz\"]\n  },\n  \"application/x-msmoney\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mny\"]\n  },\n  \"application/x-mspublisher\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pub\"]\n  },\n  \"application/x-msschedule\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scd\"]\n  },\n  \"application/x-msterminal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"trm\"]\n  },\n  \"application/x-mswrite\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wri\"]\n  },\n  \"application/x-netcdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nc\",\"cdf\"]\n  },\n  \"application/x-ns-proxy-autoconfig\": {\n    \"compressible\": true,\n    \"extensions\": [\"pac\"]\n  },\n  \"application/x-nzb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nzb\"]\n  },\n  \"application/x-perl\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"pl\",\"pm\"]\n  },\n  \"application/x-pilot\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"prc\",\"pdb\"]\n  },\n  \"application/x-pkcs12\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"p12\",\"pfx\"]\n  },\n  \"application/x-pkcs7-certificates\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7b\",\"spc\"]\n  },\n  \"application/x-pkcs7-certreqresp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p7r\"]\n  },\n  \"application/x-pki-message\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-rar-compressed\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"rar\"]\n  },\n  \"application/x-redhat-package-manager\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"rpm\"]\n  },\n  \"application/x-research-info-systems\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ris\"]\n  },\n  \"application/x-sea\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"sea\"]\n  },\n  \"application/x-sh\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"sh\"]\n  },\n  \"application/x-shar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"shar\"]\n  },\n  \"application/x-shockwave-flash\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"swf\"]\n  },\n  \"application/x-silverlight-app\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xap\"]\n  },\n  \"application/x-sql\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sql\"]\n  },\n  \"application/x-stuffit\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"sit\"]\n  },\n  \"application/x-stuffitx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sitx\"]\n  },\n  \"application/x-subrip\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"srt\"]\n  },\n  \"application/x-sv4cpio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4cpio\"]\n  },\n  \"application/x-sv4crc\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sv4crc\"]\n  },\n  \"application/x-t3vm-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"t3\"]\n  },\n  \"application/x-tads\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"gam\"]\n  },\n  \"application/x-tar\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"tar\"]\n  },\n  \"application/x-tcl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tcl\",\"tk\"]\n  },\n  \"application/x-tex\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tex\"]\n  },\n  \"application/x-tex-tfm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tfm\"]\n  },\n  \"application/x-texinfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"texinfo\",\"texi\"]\n  },\n  \"application/x-tgif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"obj\"]\n  },\n  \"application/x-ustar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ustar\"]\n  },\n  \"application/x-virtualbox-hdd\": {\n    \"compressible\": true,\n    \"extensions\": [\"hdd\"]\n  },\n  \"application/x-virtualbox-ova\": {\n    \"compressible\": true,\n    \"extensions\": [\"ova\"]\n  },\n  \"application/x-virtualbox-ovf\": {\n    \"compressible\": true,\n    \"extensions\": [\"ovf\"]\n  },\n  \"application/x-virtualbox-vbox\": {\n    \"compressible\": true,\n    \"extensions\": [\"vbox\"]\n  },\n  \"application/x-virtualbox-vbox-extpack\": {\n    \"compressible\": false,\n    \"extensions\": [\"vbox-extpack\"]\n  },\n  \"application/x-virtualbox-vdi\": {\n    \"compressible\": true,\n    \"extensions\": [\"vdi\"]\n  },\n  \"application/x-virtualbox-vhd\": {\n    \"compressible\": true,\n    \"extensions\": [\"vhd\"]\n  },\n  \"application/x-virtualbox-vmdk\": {\n    \"compressible\": true,\n    \"extensions\": [\"vmdk\"]\n  },\n  \"application/x-wais-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"src\"]\n  },\n  \"application/x-web-app-manifest+json\": {\n    \"compressible\": true,\n    \"extensions\": [\"webapp\"]\n  },\n  \"application/x-www-form-urlencoded\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/x-x509-ca-cert\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"der\",\"crt\",\"pem\"]\n  },\n  \"application/x-x509-ca-ra-cert\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-x509-next-ca-cert\": {\n    \"source\": \"iana\"\n  },\n  \"application/x-xfig\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fig\"]\n  },\n  \"application/x-xliff+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/x-xpinstall\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"xpi\"]\n  },\n  \"application/x-xz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xz\"]\n  },\n  \"application/x-zmachine\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"z1\",\"z2\",\"z3\",\"z4\",\"z5\",\"z6\",\"z7\",\"z8\"]\n  },\n  \"application/x400-bp\": {\n    \"source\": \"iana\"\n  },\n  \"application/xacml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xaml+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xaml\"]\n  },\n  \"application/xcap-att+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xav\"]\n  },\n  \"application/xcap-caps+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xca\"]\n  },\n  \"application/xcap-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xdf\"]\n  },\n  \"application/xcap-el+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xel\"]\n  },\n  \"application/xcap-error+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xcap-ns+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xns\"]\n  },\n  \"application/xcon-conference-info+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xcon-conference-info-diff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xenc+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xenc\"]\n  },\n  \"application/xhtml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xhtml\",\"xht\"]\n  },\n  \"application/xhtml-voice+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true\n  },\n  \"application/xliff+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xlf\"]\n  },\n  \"application/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\",\"xsl\",\"xsd\",\"rng\"]\n  },\n  \"application/xml-dtd\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dtd\"]\n  },\n  \"application/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"application/xml-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xmpp+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/xop+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xop\"]\n  },\n  \"application/xproc+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xpl\"]\n  },\n  \"application/xslt+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xsl\",\"xslt\"]\n  },\n  \"application/xspf+xml\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"xspf\"]\n  },\n  \"application/xv+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"mxml\",\"xhvml\",\"xvml\",\"xvm\"]\n  },\n  \"application/yang\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"yang\"]\n  },\n  \"application/yang-data+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-data+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-patch+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yang-patch+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"application/yin+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"yin\"]\n  },\n  \"application/zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"zip\"]\n  },\n  \"application/zlib\": {\n    \"source\": \"iana\"\n  },\n  \"application/zstd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/3gpp\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"3gpp\"]\n  },\n  \"audio/3gpp2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aac\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/adpcm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"adp\"]\n  },\n  \"audio/amr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"amr\"]\n  },\n  \"audio/amr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/amr-wb+\": {\n    \"source\": \"iana\"\n  },\n  \"audio/aptx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/asc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-advanced-lossless\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac-x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/atrac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/basic\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"au\",\"snd\"]\n  },\n  \"audio/bv16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/bv32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/clearmode\": {\n    \"source\": \"iana\"\n  },\n  \"audio/cn\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dat12\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dls\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es201108\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202050\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202211\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dsr-es202212\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/dvi4\": {\n    \"source\": \"iana\"\n  },\n  \"audio/eac3\": {\n    \"source\": \"iana\"\n  },\n  \"audio/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrc1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcnw1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evrcwb1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/evs\": {\n    \"source\": \"iana\"\n  },\n  \"audio/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g711-0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g719\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g722\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7221\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g723\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-24\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-32\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g726-40\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g728\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g7291\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729d\": {\n    \"source\": \"iana\"\n  },\n  \"audio/g729e\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-efr\": {\n    \"source\": \"iana\"\n  },\n  \"audio/gsm-hr-08\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ilbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ip-mr_v2.5\": {\n    \"source\": \"iana\"\n  },\n  \"audio/isac\": {\n    \"source\": \"apache\"\n  },\n  \"audio/l16\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l20\": {\n    \"source\": \"iana\"\n  },\n  \"audio/l24\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/l8\": {\n    \"source\": \"iana\"\n  },\n  \"audio/lpc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp1200\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp2400\": {\n    \"source\": \"iana\"\n  },\n  \"audio/melp600\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mhas\": {\n    \"source\": \"iana\"\n  },\n  \"audio/midi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mid\",\"midi\",\"kar\",\"rmi\"]\n  },\n  \"audio/mobile-xmf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxmf\"]\n  },\n  \"audio/mp3\": {\n    \"compressible\": false,\n    \"extensions\": [\"mp3\"]\n  },\n  \"audio/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"m4a\",\"mp4a\"]\n  },\n  \"audio/mp4a-latm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpa-robust\": {\n    \"source\": \"iana\"\n  },\n  \"audio/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpga\",\"mp2\",\"mp2a\",\"mp3\",\"m2a\",\"m3a\"]\n  },\n  \"audio/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"audio/musepack\": {\n    \"source\": \"apache\"\n  },\n  \"audio/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"oga\",\"ogg\",\"spx\",\"opus\"]\n  },\n  \"audio/opus\": {\n    \"source\": \"iana\"\n  },\n  \"audio/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcma-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu\": {\n    \"source\": \"iana\"\n  },\n  \"audio/pcmu-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/prs.sid\": {\n    \"source\": \"iana\"\n  },\n  \"audio/qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/red\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"audio/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"audio/s3m\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s3m\"]\n  },\n  \"audio/scip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/silk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sil\"]\n  },\n  \"audio/smv\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv-qcp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/smv0\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sofa\": {\n    \"source\": \"iana\"\n  },\n  \"audio/sp-midi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/speex\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t140c\": {\n    \"source\": \"iana\"\n  },\n  \"audio/t38\": {\n    \"source\": \"iana\"\n  },\n  \"audio/telephone-event\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tetra_acelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tetra_acelp_bb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tone\": {\n    \"source\": \"iana\"\n  },\n  \"audio/tsvcis\": {\n    \"source\": \"iana\"\n  },\n  \"audio/uemclip\": {\n    \"source\": \"iana\"\n  },\n  \"audio/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"audio/usac\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vdvi\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vmr-wb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.3gpp.iufp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.4sb\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.audiokoz\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.celp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cisco.nse\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cmles.radio-events\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.anp1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.cns.inf1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dece.audio\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uva\",\"uvva\"]\n  },\n  \"audio/vnd.digital-winds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"eol\"]\n  },\n  \"audio/vnd.dlna.adts\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.heaac.2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mlp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.mps\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2x\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pl2z\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dolby.pulse.1\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dra\"]\n  },\n  \"audio/vnd.dts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dts\"]\n  },\n  \"audio/vnd.dts.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dtshd\"]\n  },\n  \"audio/vnd.dts.uhd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.dvb.file\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.everad.plj\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.hns.audio\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.lucent.voice\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"lvp\"]\n  },\n  \"audio/vnd.ms-playready.media.pya\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pya\"]\n  },\n  \"audio/vnd.nokia.mobile-xmf\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nortel.vbk\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.nuera.ecelp4800\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp4800\"]\n  },\n  \"audio/vnd.nuera.ecelp7470\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp7470\"]\n  },\n  \"audio/vnd.nuera.ecelp9600\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ecelp9600\"]\n  },\n  \"audio/vnd.octel.sbc\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.presonus.multitrack\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.qcelp\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rhetorex.32kadpcm\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.rip\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rip\"]\n  },\n  \"audio/vnd.rn-realaudio\": {\n    \"compressible\": false\n  },\n  \"audio/vnd.sealedmedia.softseal.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.vmx.cvsd\": {\n    \"source\": \"iana\"\n  },\n  \"audio/vnd.wave\": {\n    \"compressible\": false\n  },\n  \"audio/vorbis\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"audio/vorbis-config\": {\n    \"source\": \"iana\"\n  },\n  \"audio/wav\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/wave\": {\n    \"compressible\": false,\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"weba\"]\n  },\n  \"audio/x-aac\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"aac\"]\n  },\n  \"audio/x-aiff\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"aif\",\"aiff\",\"aifc\"]\n  },\n  \"audio/x-caf\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"caf\"]\n  },\n  \"audio/x-flac\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"flac\"]\n  },\n  \"audio/x-m4a\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"m4a\"]\n  },\n  \"audio/x-matroska\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mka\"]\n  },\n  \"audio/x-mpegurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m3u\"]\n  },\n  \"audio/x-ms-wax\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wax\"]\n  },\n  \"audio/x-ms-wma\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wma\"]\n  },\n  \"audio/x-pn-realaudio\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ram\",\"ra\"]\n  },\n  \"audio/x-pn-realaudio-plugin\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rmp\"]\n  },\n  \"audio/x-realaudio\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"ra\"]\n  },\n  \"audio/x-tta\": {\n    \"source\": \"apache\"\n  },\n  \"audio/x-wav\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wav\"]\n  },\n  \"audio/xm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xm\"]\n  },\n  \"chemical/x-cdx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cdx\"]\n  },\n  \"chemical/x-cif\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cif\"]\n  },\n  \"chemical/x-cmdf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmdf\"]\n  },\n  \"chemical/x-cml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cml\"]\n  },\n  \"chemical/x-csml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"csml\"]\n  },\n  \"chemical/x-pdb\": {\n    \"source\": \"apache\"\n  },\n  \"chemical/x-xyz\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xyz\"]\n  },\n  \"font/collection\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ttc\"]\n  },\n  \"font/otf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"otf\"]\n  },\n  \"font/sfnt\": {\n    \"source\": \"iana\"\n  },\n  \"font/ttf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ttf\"]\n  },\n  \"font/woff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"woff\"]\n  },\n  \"font/woff2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"woff2\"]\n  },\n  \"image/aces\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"exr\"]\n  },\n  \"image/apng\": {\n    \"compressible\": false,\n    \"extensions\": [\"apng\"]\n  },\n  \"image/avci\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"avci\"]\n  },\n  \"image/avcs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"avcs\"]\n  },\n  \"image/avif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"avif\"]\n  },\n  \"image/bmp\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/cgm\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"cgm\"]\n  },\n  \"image/dicom-rle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"drle\"]\n  },\n  \"image/emf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"emf\"]\n  },\n  \"image/fits\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fits\"]\n  },\n  \"image/g3fax\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"g3\"]\n  },\n  \"image/gif\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"gif\"]\n  },\n  \"image/heic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heic\"]\n  },\n  \"image/heic-sequence\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heics\"]\n  },\n  \"image/heif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heif\"]\n  },\n  \"image/heif-sequence\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"heifs\"]\n  },\n  \"image/hej2k\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hej2\"]\n  },\n  \"image/hsj2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"hsj2\"]\n  },\n  \"image/ief\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ief\"]\n  },\n  \"image/jls\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jls\"]\n  },\n  \"image/jp2\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jp2\",\"jpg2\"]\n  },\n  \"image/jpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpeg\",\"jpg\",\"jpe\"]\n  },\n  \"image/jph\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jph\"]\n  },\n  \"image/jphc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jhc\"]\n  },\n  \"image/jpm\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpm\"]\n  },\n  \"image/jpx\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"jpx\",\"jpf\"]\n  },\n  \"image/jxr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxr\"]\n  },\n  \"image/jxra\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxra\"]\n  },\n  \"image/jxrs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxrs\"]\n  },\n  \"image/jxs\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxs\"]\n  },\n  \"image/jxsc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxsc\"]\n  },\n  \"image/jxsi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxsi\"]\n  },\n  \"image/jxss\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jxss\"]\n  },\n  \"image/ktx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx\"]\n  },\n  \"image/ktx2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ktx2\"]\n  },\n  \"image/naplps\": {\n    \"source\": \"iana\"\n  },\n  \"image/pjpeg\": {\n    \"compressible\": false\n  },\n  \"image/png\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"png\"]\n  },\n  \"image/prs.btif\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"btif\"]\n  },\n  \"image/prs.pti\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pti\"]\n  },\n  \"image/pwg-raster\": {\n    \"source\": \"iana\"\n  },\n  \"image/sgi\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sgi\"]\n  },\n  \"image/svg+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"svg\",\"svgz\"]\n  },\n  \"image/t38\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t38\"]\n  },\n  \"image/tiff\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"tif\",\"tiff\"]\n  },\n  \"image/tiff-fx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tfx\"]\n  },\n  \"image/vnd.adobe.photoshop\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"psd\"]\n  },\n  \"image/vnd.airzip.accelerator.azv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"azv\"]\n  },\n  \"image/vnd.cns.inf2\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.dece.graphic\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvi\",\"uvvi\",\"uvg\",\"uvvg\"]\n  },\n  \"image/vnd.djvu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"djvu\",\"djv\"]\n  },\n  \"image/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"image/vnd.dwg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwg\"]\n  },\n  \"image/vnd.dxf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dxf\"]\n  },\n  \"image/vnd.fastbidsheet\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fbs\"]\n  },\n  \"image/vnd.fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fpx\"]\n  },\n  \"image/vnd.fst\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fst\"]\n  },\n  \"image/vnd.fujixerox.edmics-mmr\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mmr\"]\n  },\n  \"image/vnd.fujixerox.edmics-rlc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"rlc\"]\n  },\n  \"image/vnd.globalgraphics.pgb\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.microsoft.icon\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/vnd.mix\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.mozilla.apng\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.ms-dds\": {\n    \"compressible\": true,\n    \"extensions\": [\"dds\"]\n  },\n  \"image/vnd.ms-modi\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mdi\"]\n  },\n  \"image/vnd.ms-photo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wdp\"]\n  },\n  \"image/vnd.net-fpx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"npx\"]\n  },\n  \"image/vnd.pco.b16\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"b16\"]\n  },\n  \"image/vnd.radiance\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealed.png\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.gif\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.sealedmedia.softseal.jpg\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.svf\": {\n    \"source\": \"iana\"\n  },\n  \"image/vnd.tencent.tap\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"tap\"]\n  },\n  \"image/vnd.valve.source.texture\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtf\"]\n  },\n  \"image/vnd.wap.wbmp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wbmp\"]\n  },\n  \"image/vnd.xiff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"xif\"]\n  },\n  \"image/vnd.zbrush.pcx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/webp\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"webp\"]\n  },\n  \"image/wmf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmf\"]\n  },\n  \"image/x-3ds\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"3ds\"]\n  },\n  \"image/x-cmu-raster\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ras\"]\n  },\n  \"image/x-cmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"cmx\"]\n  },\n  \"image/x-freehand\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fh\",\"fhc\",\"fh4\",\"fh5\",\"fh7\"]\n  },\n  \"image/x-icon\": {\n    \"source\": \"apache\",\n    \"compressible\": true,\n    \"extensions\": [\"ico\"]\n  },\n  \"image/x-jng\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"jng\"]\n  },\n  \"image/x-mrsid-image\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sid\"]\n  },\n  \"image/x-ms-bmp\": {\n    \"source\": \"nginx\",\n    \"compressible\": true,\n    \"extensions\": [\"bmp\"]\n  },\n  \"image/x-pcx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pcx\"]\n  },\n  \"image/x-pict\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pic\",\"pct\"]\n  },\n  \"image/x-portable-anymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pnm\"]\n  },\n  \"image/x-portable-bitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pbm\"]\n  },\n  \"image/x-portable-graymap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"pgm\"]\n  },\n  \"image/x-portable-pixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ppm\"]\n  },\n  \"image/x-rgb\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"rgb\"]\n  },\n  \"image/x-tga\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"tga\"]\n  },\n  \"image/x-xbitmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xbm\"]\n  },\n  \"image/x-xcf\": {\n    \"compressible\": false\n  },\n  \"image/x-xpixmap\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xpm\"]\n  },\n  \"image/x-xwindowdump\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"xwd\"]\n  },\n  \"message/cpim\": {\n    \"source\": \"iana\"\n  },\n  \"message/delivery-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/disposition-notification\": {\n    \"source\": \"iana\",\n    \"extensions\": [\n      \"disposition-notification\"\n    ]\n  },\n  \"message/external-body\": {\n    \"source\": \"iana\"\n  },\n  \"message/feedback-report\": {\n    \"source\": \"iana\"\n  },\n  \"message/global\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8msg\"]\n  },\n  \"message/global-delivery-status\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8dsn\"]\n  },\n  \"message/global-disposition-notification\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8mdn\"]\n  },\n  \"message/global-headers\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"u8hdr\"]\n  },\n  \"message/http\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/imdn+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"message/news\": {\n    \"source\": \"iana\"\n  },\n  \"message/partial\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"message/rfc822\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"eml\",\"mime\"]\n  },\n  \"message/s-http\": {\n    \"source\": \"iana\"\n  },\n  \"message/sip\": {\n    \"source\": \"iana\"\n  },\n  \"message/sipfrag\": {\n    \"source\": \"iana\"\n  },\n  \"message/tracking-status\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.si.simp\": {\n    \"source\": \"iana\"\n  },\n  \"message/vnd.wfa.wsc\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wsc\"]\n  },\n  \"model/3mf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3mf\"]\n  },\n  \"model/e57\": {\n    \"source\": \"iana\"\n  },\n  \"model/gltf+json\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"gltf\"]\n  },\n  \"model/gltf-binary\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"glb\"]\n  },\n  \"model/iges\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"igs\",\"iges\"]\n  },\n  \"model/mesh\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"msh\",\"mesh\",\"silo\"]\n  },\n  \"model/mtl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mtl\"]\n  },\n  \"model/obj\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"obj\"]\n  },\n  \"model/step\": {\n    \"source\": \"iana\"\n  },\n  \"model/step+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"stpx\"]\n  },\n  \"model/step+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"stpz\"]\n  },\n  \"model/step-xml+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"stpxz\"]\n  },\n  \"model/stl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"stl\"]\n  },\n  \"model/vnd.collada+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"dae\"]\n  },\n  \"model/vnd.dwf\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dwf\"]\n  },\n  \"model/vnd.flatland.3dml\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gdl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gdl\"]\n  },\n  \"model/vnd.gs-gdl\": {\n    \"source\": \"apache\"\n  },\n  \"model/vnd.gs.gdl\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.gtw\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gtw\"]\n  },\n  \"model/vnd.moml+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"model/vnd.mts\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mts\"]\n  },\n  \"model/vnd.opengex\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ogex\"]\n  },\n  \"model/vnd.parasolid.transmit.binary\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x_b\"]\n  },\n  \"model/vnd.parasolid.transmit.text\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x_t\"]\n  },\n  \"model/vnd.pytha.pyox\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.rosette.annotated-data-model\": {\n    \"source\": \"iana\"\n  },\n  \"model/vnd.sap.vds\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vds\"]\n  },\n  \"model/vnd.usdz+zip\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"usdz\"]\n  },\n  \"model/vnd.valve.source.compiled-map\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"bsp\"]\n  },\n  \"model/vnd.vtu\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"vtu\"]\n  },\n  \"model/vrml\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"wrl\",\"vrml\"]\n  },\n  \"model/x3d+binary\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3db\",\"x3dbz\"]\n  },\n  \"model/x3d+fastinfoset\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x3db\"]\n  },\n  \"model/x3d+vrml\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"x3dv\",\"x3dvz\"]\n  },\n  \"model/x3d+xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"x3d\",\"x3dz\"]\n  },\n  \"model/x3d-vrml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"x3dv\"]\n  },\n  \"multipart/alternative\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/appledouble\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/byteranges\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/digest\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/encrypted\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/form-data\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/header-set\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/mixed\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/multilingual\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/parallel\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/related\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/report\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/signed\": {\n    \"source\": \"iana\",\n    \"compressible\": false\n  },\n  \"multipart/vnd.bint.med-plus\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/voice-message\": {\n    \"source\": \"iana\"\n  },\n  \"multipart/x-mixed-replace\": {\n    \"source\": \"iana\"\n  },\n  \"text/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/cache-manifest\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"appcache\",\"manifest\"]\n  },\n  \"text/calendar\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ics\",\"ifb\"]\n  },\n  \"text/calender\": {\n    \"compressible\": true\n  },\n  \"text/cmd\": {\n    \"compressible\": true\n  },\n  \"text/coffeescript\": {\n    \"extensions\": [\"coffee\",\"litcoffee\"]\n  },\n  \"text/cql\": {\n    \"source\": \"iana\"\n  },\n  \"text/cql-expression\": {\n    \"source\": \"iana\"\n  },\n  \"text/cql-identifier\": {\n    \"source\": \"iana\"\n  },\n  \"text/css\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"css\"]\n  },\n  \"text/csv\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"csv\"]\n  },\n  \"text/csv-schema\": {\n    \"source\": \"iana\"\n  },\n  \"text/directory\": {\n    \"source\": \"iana\"\n  },\n  \"text/dns\": {\n    \"source\": \"iana\"\n  },\n  \"text/ecmascript\": {\n    \"source\": \"iana\"\n  },\n  \"text/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"text/enriched\": {\n    \"source\": \"iana\"\n  },\n  \"text/fhirpath\": {\n    \"source\": \"iana\"\n  },\n  \"text/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/fwdred\": {\n    \"source\": \"iana\"\n  },\n  \"text/gff3\": {\n    \"source\": \"iana\"\n  },\n  \"text/grammar-ref-list\": {\n    \"source\": \"iana\"\n  },\n  \"text/html\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"html\",\"htm\",\"shtml\"]\n  },\n  \"text/jade\": {\n    \"extensions\": [\"jade\"]\n  },\n  \"text/javascript\": {\n    \"source\": \"iana\",\n    \"compressible\": true\n  },\n  \"text/jcr-cnd\": {\n    \"source\": \"iana\"\n  },\n  \"text/jsx\": {\n    \"compressible\": true,\n    \"extensions\": [\"jsx\"]\n  },\n  \"text/less\": {\n    \"compressible\": true,\n    \"extensions\": [\"less\"]\n  },\n  \"text/markdown\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"markdown\",\"md\"]\n  },\n  \"text/mathml\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"mml\"]\n  },\n  \"text/mdx\": {\n    \"compressible\": true,\n    \"extensions\": [\"mdx\"]\n  },\n  \"text/mizar\": {\n    \"source\": \"iana\"\n  },\n  \"text/n3\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"n3\"]\n  },\n  \"text/parameters\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/plain\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"txt\",\"text\",\"conf\",\"def\",\"list\",\"log\",\"in\",\"ini\"]\n  },\n  \"text/provenance-notation\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/prs.fallenstein.rst\": {\n    \"source\": \"iana\"\n  },\n  \"text/prs.lines.tag\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dsc\"]\n  },\n  \"text/prs.prop.logic\": {\n    \"source\": \"iana\"\n  },\n  \"text/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/red\": {\n    \"source\": \"iana\"\n  },\n  \"text/rfc822-headers\": {\n    \"source\": \"iana\"\n  },\n  \"text/richtext\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtx\"]\n  },\n  \"text/rtf\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"rtf\"]\n  },\n  \"text/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"text/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"text/sgml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sgml\",\"sgm\"]\n  },\n  \"text/shaclc\": {\n    \"source\": \"iana\"\n  },\n  \"text/shex\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"shex\"]\n  },\n  \"text/slim\": {\n    \"extensions\": [\"slim\",\"slm\"]\n  },\n  \"text/spdx\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spdx\"]\n  },\n  \"text/strings\": {\n    \"source\": \"iana\"\n  },\n  \"text/stylus\": {\n    \"extensions\": [\"stylus\",\"styl\"]\n  },\n  \"text/t140\": {\n    \"source\": \"iana\"\n  },\n  \"text/tab-separated-values\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"tsv\"]\n  },\n  \"text/troff\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"t\",\"tr\",\"roff\",\"man\",\"me\",\"ms\"]\n  },\n  \"text/turtle\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"ttl\"]\n  },\n  \"text/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"text/uri-list\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"uri\",\"uris\",\"urls\"]\n  },\n  \"text/vcard\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"vcard\"]\n  },\n  \"text/vnd.a\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.abc\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ascii-art\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.curl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"curl\"]\n  },\n  \"text/vnd.curl.dcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"dcurl\"]\n  },\n  \"text/vnd.curl.mcurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mcurl\"]\n  },\n  \"text/vnd.curl.scurl\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"scurl\"]\n  },\n  \"text/vnd.debian.copyright\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.dmclientscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.dvb.subtitle\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"sub\"]\n  },\n  \"text/vnd.esmertec.theme-descriptor\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.familysearch.gedcom\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ged\"]\n  },\n  \"text/vnd.ficlab.flt\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.fly\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fly\"]\n  },\n  \"text/vnd.fmi.flexstor\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"flx\"]\n  },\n  \"text/vnd.gml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.graphviz\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"gv\"]\n  },\n  \"text/vnd.hans\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.hgl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.in3d.3dml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3dml\"]\n  },\n  \"text/vnd.in3d.spot\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"spot\"]\n  },\n  \"text/vnd.iptc.newsml\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.iptc.nitf\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.latex-z\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.motorola.reflex\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.ms-mediapackage\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.net2phone.commcenter.command\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.radisys.msml-basic-layout\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.senx.warpscript\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.si.uricatalogue\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.sosi\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.sun.j2me.app-descriptor\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"extensions\": [\"jad\"]\n  },\n  \"text/vnd.trolltech.linguist\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\"\n  },\n  \"text/vnd.wap.si\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.sl\": {\n    \"source\": \"iana\"\n  },\n  \"text/vnd.wap.wml\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wml\"]\n  },\n  \"text/vnd.wap.wmlscript\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"wmls\"]\n  },\n  \"text/vtt\": {\n    \"source\": \"iana\",\n    \"charset\": \"UTF-8\",\n    \"compressible\": true,\n    \"extensions\": [\"vtt\"]\n  },\n  \"text/x-asm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"s\",\"asm\"]\n  },\n  \"text/x-c\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"c\",\"cc\",\"cxx\",\"cpp\",\"h\",\"hh\",\"dic\"]\n  },\n  \"text/x-component\": {\n    \"source\": \"nginx\",\n    \"extensions\": [\"htc\"]\n  },\n  \"text/x-fortran\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f\",\"for\",\"f77\",\"f90\"]\n  },\n  \"text/x-gwt-rpc\": {\n    \"compressible\": true\n  },\n  \"text/x-handlebars-template\": {\n    \"extensions\": [\"hbs\"]\n  },\n  \"text/x-java-source\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"java\"]\n  },\n  \"text/x-jquery-tmpl\": {\n    \"compressible\": true\n  },\n  \"text/x-lua\": {\n    \"extensions\": [\"lua\"]\n  },\n  \"text/x-markdown\": {\n    \"compressible\": true,\n    \"extensions\": [\"mkd\"]\n  },\n  \"text/x-nfo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"nfo\"]\n  },\n  \"text/x-opml\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"opml\"]\n  },\n  \"text/x-org\": {\n    \"compressible\": true,\n    \"extensions\": [\"org\"]\n  },\n  \"text/x-pascal\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"p\",\"pas\"]\n  },\n  \"text/x-processing\": {\n    \"compressible\": true,\n    \"extensions\": [\"pde\"]\n  },\n  \"text/x-sass\": {\n    \"extensions\": [\"sass\"]\n  },\n  \"text/x-scss\": {\n    \"extensions\": [\"scss\"]\n  },\n  \"text/x-setext\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"etx\"]\n  },\n  \"text/x-sfv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"sfv\"]\n  },\n  \"text/x-suse-ymp\": {\n    \"compressible\": true,\n    \"extensions\": [\"ymp\"]\n  },\n  \"text/x-uuencode\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"uu\"]\n  },\n  \"text/x-vcalendar\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcs\"]\n  },\n  \"text/x-vcard\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vcf\"]\n  },\n  \"text/xml\": {\n    \"source\": \"iana\",\n    \"compressible\": true,\n    \"extensions\": [\"xml\"]\n  },\n  \"text/xml-external-parsed-entity\": {\n    \"source\": \"iana\"\n  },\n  \"text/yaml\": {\n    \"compressible\": true,\n    \"extensions\": [\"yaml\",\"yml\"]\n  },\n  \"video/1d-interleaved-parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/3gpp\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3gp\",\"3gpp\"]\n  },\n  \"video/3gpp-tt\": {\n    \"source\": \"iana\"\n  },\n  \"video/3gpp2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"3g2\"]\n  },\n  \"video/av1\": {\n    \"source\": \"iana\"\n  },\n  \"video/bmpeg\": {\n    \"source\": \"iana\"\n  },\n  \"video/bt656\": {\n    \"source\": \"iana\"\n  },\n  \"video/celb\": {\n    \"source\": \"iana\"\n  },\n  \"video/dv\": {\n    \"source\": \"iana\"\n  },\n  \"video/encaprtp\": {\n    \"source\": \"iana\"\n  },\n  \"video/ffv1\": {\n    \"source\": \"iana\"\n  },\n  \"video/flexfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/h261\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h261\"]\n  },\n  \"video/h263\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h263\"]\n  },\n  \"video/h263-1998\": {\n    \"source\": \"iana\"\n  },\n  \"video/h263-2000\": {\n    \"source\": \"iana\"\n  },\n  \"video/h264\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"h264\"]\n  },\n  \"video/h264-rcdo\": {\n    \"source\": \"iana\"\n  },\n  \"video/h264-svc\": {\n    \"source\": \"iana\"\n  },\n  \"video/h265\": {\n    \"source\": \"iana\"\n  },\n  \"video/iso.segment\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"m4s\"]\n  },\n  \"video/jpeg\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"jpgv\"]\n  },\n  \"video/jpeg2000\": {\n    \"source\": \"iana\"\n  },\n  \"video/jpm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"jpm\",\"jpgm\"]\n  },\n  \"video/jxsv\": {\n    \"source\": \"iana\"\n  },\n  \"video/mj2\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mj2\",\"mjp2\"]\n  },\n  \"video/mp1s\": {\n    \"source\": \"iana\"\n  },\n  \"video/mp2p\": {\n    \"source\": \"iana\"\n  },\n  \"video/mp2t\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"ts\"]\n  },\n  \"video/mp4\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mp4\",\"mp4v\",\"mpg4\"]\n  },\n  \"video/mp4v-es\": {\n    \"source\": \"iana\"\n  },\n  \"video/mpeg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"mpeg\",\"mpg\",\"mpe\",\"m1v\",\"m2v\"]\n  },\n  \"video/mpeg4-generic\": {\n    \"source\": \"iana\"\n  },\n  \"video/mpv\": {\n    \"source\": \"iana\"\n  },\n  \"video/nv\": {\n    \"source\": \"iana\"\n  },\n  \"video/ogg\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"ogv\"]\n  },\n  \"video/parityfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/pointer\": {\n    \"source\": \"iana\"\n  },\n  \"video/quicktime\": {\n    \"source\": \"iana\",\n    \"compressible\": false,\n    \"extensions\": [\"qt\",\"mov\"]\n  },\n  \"video/raptorfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/raw\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtp-enc-aescm128\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtploopback\": {\n    \"source\": \"iana\"\n  },\n  \"video/rtx\": {\n    \"source\": \"iana\"\n  },\n  \"video/scip\": {\n    \"source\": \"iana\"\n  },\n  \"video/smpte291\": {\n    \"source\": \"iana\"\n  },\n  \"video/smpte292m\": {\n    \"source\": \"iana\"\n  },\n  \"video/ulpfec\": {\n    \"source\": \"iana\"\n  },\n  \"video/vc1\": {\n    \"source\": \"iana\"\n  },\n  \"video/vc2\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.cctv\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dece.hd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvh\",\"uvvh\"]\n  },\n  \"video/vnd.dece.mobile\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvm\",\"uvvm\"]\n  },\n  \"video/vnd.dece.mp4\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dece.pd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvp\",\"uvvp\"]\n  },\n  \"video/vnd.dece.sd\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvs\",\"uvvs\"]\n  },\n  \"video/vnd.dece.video\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvv\",\"uvvv\"]\n  },\n  \"video/vnd.directv.mpeg\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.directv.mpeg-tts\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dlna.mpeg-tts\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.dvb.file\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"dvb\"]\n  },\n  \"video/vnd.fvt\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"fvt\"]\n  },\n  \"video/vnd.hns.video\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-1010\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.1dparityfec-2005\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-1010\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.2dparityfec-2005\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.ttsavc\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.iptvforum.ttsmpeg2\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.motorola.video\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.motorola.videop\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.mpegurl\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"mxu\",\"m4u\"]\n  },\n  \"video/vnd.ms-playready.media.pyv\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"pyv\"]\n  },\n  \"video/vnd.nokia.interleaved-multimedia\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.nokia.mp4vr\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.nokia.videovoip\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.objectvideo\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.radgamettools.bink\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.radgamettools.smacker\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.mpeg1\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.mpeg4\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealed.swf\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.sealedmedia.softseal.mov\": {\n    \"source\": \"iana\"\n  },\n  \"video/vnd.uvvu.mp4\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"uvu\",\"uvvu\"]\n  },\n  \"video/vnd.vivo\": {\n    \"source\": \"iana\",\n    \"extensions\": [\"viv\"]\n  },\n  \"video/vnd.youtube.yt\": {\n    \"source\": \"iana\"\n  },\n  \"video/vp8\": {\n    \"source\": \"iana\"\n  },\n  \"video/vp9\": {\n    \"source\": \"iana\"\n  },\n  \"video/webm\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"webm\"]\n  },\n  \"video/x-f4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"f4v\"]\n  },\n  \"video/x-fli\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"fli\"]\n  },\n  \"video/x-flv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"flv\"]\n  },\n  \"video/x-m4v\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"m4v\"]\n  },\n  \"video/x-matroska\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"mkv\",\"mk3d\",\"mks\"]\n  },\n  \"video/x-mng\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"mng\"]\n  },\n  \"video/x-ms-asf\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"asf\",\"asx\"]\n  },\n  \"video/x-ms-vob\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"vob\"]\n  },\n  \"video/x-ms-wm\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wm\"]\n  },\n  \"video/x-ms-wmv\": {\n    \"source\": \"apache\",\n    \"compressible\": false,\n    \"extensions\": [\"wmv\"]\n  },\n  \"video/x-ms-wmx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wmx\"]\n  },\n  \"video/x-ms-wvx\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"wvx\"]\n  },\n  \"video/x-msvideo\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"avi\"]\n  },\n  \"video/x-sgi-movie\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"movie\"]\n  },\n  \"video/x-smv\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"smv\"]\n  },\n  \"x-conference/x-cooltalk\": {\n    \"source\": \"apache\",\n    \"extensions\": [\"ice\"]\n  },\n  \"x-shader/x-fragment\": {\n    \"compressible\": true\n  },\n  \"x-shader/x-vertex\": {\n    \"compressible\": true\n  }\n}\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2022 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","module.exports = defer;\n\n/**\n * Runs provided function on next iteration of the event loop\n *\n * @param {function} fn - function to run\n */\nfunction defer(fn)\n{\n  var nextTick = typeof setImmediate == 'function'\n    ? setImmediate\n    : (\n      typeof process == 'object' && typeof process.nextTick == 'function'\n      ? process.nextTick\n      : null\n    );\n\n  if (nextTick)\n  {\n    nextTick(fn);\n  }\n  else\n  {\n    setTimeout(fn, 0);\n  }\n}\n","var defer = require('./defer.js');\n\n// API\nmodule.exports = async;\n\n/**\n * Runs provided callback asynchronously\n * even if callback itself is not\n *\n * @param   {function} callback - callback to invoke\n * @returns {function} - augmented callback\n */\nfunction async(callback)\n{\n  var isAsync = false;\n\n  // check if async happened\n  defer(function() { isAsync = true; });\n\n  return function async_callback(err, result)\n  {\n    if (isAsync)\n    {\n      callback(err, result);\n    }\n    else\n    {\n      defer(function nextTick_callback()\n      {\n        callback(err, result);\n      });\n    }\n  };\n}\n","// API\nmodule.exports = abort;\n\n/**\n * Aborts leftover active jobs\n *\n * @param {object} state - current state object\n */\nfunction abort(state)\n{\n  Object.keys(state.jobs).forEach(clean.bind(state));\n\n  // reset leftover jobs\n  state.jobs = {};\n}\n\n/**\n * Cleans up leftover job by invoking abort function for the provided job id\n *\n * @this  state\n * @param {string|number} key - job id to abort\n */\nfunction clean(key)\n{\n  if (typeof this.jobs[key] == 'function')\n  {\n    this.jobs[key]();\n  }\n}\n","var async = require('./async.js')\n  , abort = require('./abort.js')\n  ;\n\n// API\nmodule.exports = iterate;\n\n/**\n * Iterates over each job object\n *\n * @param {array|object} list - array or object (named list) to iterate over\n * @param {function} iterator - iterator to run\n * @param {object} state - current job status\n * @param {function} callback - invoked when all elements processed\n */\nfunction iterate(list, iterator, state, callback)\n{\n  // store current index\n  var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;\n\n  state.jobs[key] = runJob(iterator, key, list[key], function(error, output)\n  {\n    // don't repeat yourself\n    // skip secondary callbacks\n    if (!(key in state.jobs))\n    {\n      return;\n    }\n\n    // clean up jobs\n    delete state.jobs[key];\n\n    if (error)\n    {\n      // don't process rest of the results\n      // stop still active jobs\n      // and reset the list\n      abort(state);\n    }\n    else\n    {\n      state.results[key] = output;\n    }\n\n    // return salvaged results\n    callback(error, state.results);\n  });\n}\n\n/**\n * Runs iterator over provided job element\n *\n * @param   {function} iterator - iterator to invoke\n * @param   {string|number} key - key/index of the element in the list of jobs\n * @param   {mixed} item - job description\n * @param   {function} callback - invoked after iterator is done with the job\n * @returns {function|mixed} - job abort function or something else\n */\nfunction runJob(iterator, key, item, callback)\n{\n  var aborter;\n\n  // allow shortcut if iterator expects only two arguments\n  if (iterator.length == 2)\n  {\n    aborter = iterator(item, async(callback));\n  }\n  // otherwise go with full three arguments\n  else\n  {\n    aborter = iterator(item, key, async(callback));\n  }\n\n  return aborter;\n}\n","// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod)\n{\n  var isNamedList = !Array.isArray(list)\n    , initState =\n    {\n      index    : 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs     : {},\n      results  : isNamedList ? {} : [],\n      size     : isNamedList ? Object.keys(list).length : list.length\n    }\n    ;\n\n  if (sortMethod)\n  {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function(a, b)\n    {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n\n  return initState;\n}\n","var abort = require('./abort.js')\n  , async = require('./async.js')\n  ;\n\n// API\nmodule.exports = terminator;\n\n/**\n * Terminates jobs in the attached state context\n *\n * @this  AsyncKitState#\n * @param {function} callback - final callback to invoke after termination\n */\nfunction terminator(callback)\n{\n  if (!Object.keys(this.jobs).length)\n  {\n    return;\n  }\n\n  // fast forward iteration index\n  this.index = this.size;\n\n  // abort jobs\n  abort(this);\n\n  // send back results we have so far\n  async(callback)(null, this.results);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = parallel;\n\n/**\n * Runs iterator over provided array elements in parallel\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction parallel(list, iterator, callback)\n{\n  var state = initState(list);\n\n  while (state.index < (state['keyedList'] || list).length)\n  {\n    iterate(list, iterator, state, function(error, result)\n    {\n      if (error)\n      {\n        callback(error, result);\n        return;\n      }\n\n      // looks like it's the last one\n      if (Object.keys(state.jobs).length === 0)\n      {\n        callback(null, state.results);\n        return;\n      }\n    });\n\n    state.index++;\n  }\n\n  return terminator.bind(state, callback);\n}\n","var iterate    = require('./lib/iterate.js')\n  , initState  = require('./lib/state.js')\n  , terminator = require('./lib/terminator.js')\n  ;\n\n// Public API\nmodule.exports = serialOrdered;\n// sorting helpers\nmodule.exports.ascending  = ascending;\nmodule.exports.descending = descending;\n\n/**\n * Runs iterator over provided sorted array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} sortMethod - custom sort function\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serialOrdered(list, iterator, sortMethod, callback)\n{\n  var state = initState(list, sortMethod);\n\n  iterate(list, iterator, state, function iteratorHandler(error, result)\n  {\n    if (error)\n    {\n      callback(error, result);\n      return;\n    }\n\n    state.index++;\n\n    // are we there yet?\n    if (state.index < (state['keyedList'] || list).length)\n    {\n      iterate(list, iterator, state, iteratorHandler);\n      return;\n    }\n\n    // done here\n    callback(null, state.results);\n  });\n\n  return terminator.bind(state, callback);\n}\n\n/*\n * -- Sort methods\n */\n\n/**\n * sort helper to sort array elements in ascending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction ascending(a, b)\n{\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\n/**\n * sort helper to sort array elements in descending order\n *\n * @param   {mixed} a - an item to compare\n * @param   {mixed} b - an item to compare\n * @returns {number} - comparison result\n */\nfunction descending(a, b)\n{\n  return -1 * ascending(a, b);\n}\n","var serialOrdered = require('./serialOrdered.js');\n\n// Public API\nmodule.exports = serial;\n\n/**\n * Runs iterator over provided array elements in series\n *\n * @param   {array|object} list - array or object (named list) to iterate over\n * @param   {function} iterator - iterator to run\n * @param   {function} callback - invoked when all elements processed\n * @returns {function} - jobs terminator\n */\nfunction serial(list, iterator, callback)\n{\n  return serialOrdered(list, iterator, null, callback);\n}\n","module.exports =\n{\n  parallel      : require('./parallel.js'),\n  serial        : require('./serial.js'),\n  serialOrdered : require('./serialOrdered.js')\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n","'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n","'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n","'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n","'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n","'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n","'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n","'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n","'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n","'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n","'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n","'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n","'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n","'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n","'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n","'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar hasOwn = require('hasown');\nvar $TypeError = require('es-errors/type');\n\nvar toStringTag = hasToStringTag ? Symbol.toStringTag : null;\n\n/** @type {import('.')} */\nmodule.exports = function setToStringTag(object, value) {\n\tvar overrideIfSet = arguments.length > 2 && !!arguments[2] && arguments[2].force;\n\tvar nonConfigurable = arguments.length > 2 && !!arguments[2] && arguments[2].nonConfigurable;\n\tif (\n\t\t(typeof overrideIfSet !== 'undefined' && typeof overrideIfSet !== 'boolean')\n\t\t|| (typeof nonConfigurable !== 'undefined' && typeof nonConfigurable !== 'boolean')\n\t) {\n\t\tthrow new $TypeError('if provided, the `overrideIfSet` and `nonConfigurable` options must be booleans');\n\t}\n\tif (toStringTag && (overrideIfSet || !hasOwn(object, toStringTag))) {\n\t\tif ($defineProperty) {\n\t\t\t$defineProperty(object, toStringTag, {\n\t\t\t\tconfigurable: !nonConfigurable,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: value,\n\t\t\t\twritable: false\n\t\t\t});\n\t\t} else {\n\t\t\tobject[toStringTag] = value; // eslint-disable-line no-param-reassign\n\t\t}\n\t}\n};\n","// populates missing values\nmodule.exports = function(dst, src) {\n\n  Object.keys(src).forEach(function(prop)\n  {\n    dst[prop] = dst[prop] || src[prop];\n  });\n\n  return dst;\n};\n","var CombinedStream = require('combined-stream');\nvar util = require('util');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar parseUrl = require('url').parse;\nvar fs = require('fs');\nvar Stream = require('stream').Stream;\nvar mime = require('mime-types');\nvar asynckit = require('asynckit');\nvar setToStringTag = require('es-set-tostringtag');\nvar populate = require('./populate.js');\n\n// Public API\nmodule.exports = FormData;\n\n// make it a Stream\nutil.inherits(FormData, CombinedStream);\n\n/**\n * Create readable \"multipart/form-data\" streams.\n * Can be used to submit forms\n * and file uploads to other web applications.\n *\n * @constructor\n * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream\n */\nfunction FormData(options) {\n  if (!(this instanceof FormData)) {\n    return new FormData(options);\n  }\n\n  this._overheadLength = 0;\n  this._valueLength = 0;\n  this._valuesToMeasure = [];\n\n  CombinedStream.call(this);\n\n  options = options || {};\n  for (var option in options) {\n    this[option] = options[option];\n  }\n}\n\nFormData.LINE_BREAK = '\\r\\n';\nFormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';\n\nFormData.prototype.append = function(field, value, options) {\n\n  options = options || {};\n\n  // allow filename as single option\n  if (typeof options == 'string') {\n    options = {filename: options};\n  }\n\n  var append = CombinedStream.prototype.append.bind(this);\n\n  // all that streamy business can't handle numbers\n  if (typeof value == 'number') {\n    value = '' + value;\n  }\n\n  // https://github.com/felixge/node-form-data/issues/38\n  if (Array.isArray(value)) {\n    // Please convert your array into string\n    // the way web server expects it\n    this._error(new Error('Arrays are not supported.'));\n    return;\n  }\n\n  var header = this._multiPartHeader(field, value, options);\n  var footer = this._multiPartFooter();\n\n  append(header);\n  append(value);\n  append(footer);\n\n  // pass along options.knownLength\n  this._trackLength(header, value, options);\n};\n\nFormData.prototype._trackLength = function(header, value, options) {\n  var valueLength = 0;\n\n  // used w/ getLengthSync(), when length is known.\n  // e.g. for streaming directly from a remote server,\n  // w/ a known file a size, and not wanting to wait for\n  // incoming file to finish to get its size.\n  if (options.knownLength != null) {\n    valueLength += +options.knownLength;\n  } else if (Buffer.isBuffer(value)) {\n    valueLength = value.length;\n  } else if (typeof value === 'string') {\n    valueLength = Buffer.byteLength(value);\n  }\n\n  this._valueLength += valueLength;\n\n  // @check why add CRLF? does this account for custom/multiple CRLFs?\n  this._overheadLength +=\n    Buffer.byteLength(header) +\n    FormData.LINE_BREAK.length;\n\n  // empty or either doesn't have path or not an http response or not a stream\n  if (!value || ( !value.path && !(value.readable && Object.prototype.hasOwnProperty.call(value, 'httpVersion')) && !(value instanceof Stream))) {\n    return;\n  }\n\n  // no need to bother with the length\n  if (!options.knownLength) {\n    this._valuesToMeasure.push(value);\n  }\n};\n\nFormData.prototype._lengthRetriever = function(value, callback) {\n  if (Object.prototype.hasOwnProperty.call(value, 'fd')) {\n\n    // take read range into a account\n    // `end` = Infinity –> read file till the end\n    //\n    // TODO: Looks like there is bug in Node fs.createReadStream\n    // it doesn't respect `end` options without `start` options\n    // Fix it when node fixes it.\n    // https://github.com/joyent/node/issues/7819\n    if (value.end != undefined && value.end != Infinity && value.start != undefined) {\n\n      // when end specified\n      // no need to calculate range\n      // inclusive, starts with 0\n      callback(null, value.end + 1 - (value.start ? value.start : 0));\n\n    // not that fast snoopy\n    } else {\n      // still need to fetch file size from fs\n      fs.stat(value.path, function(err, stat) {\n\n        var fileSize;\n\n        if (err) {\n          callback(err);\n          return;\n        }\n\n        // update final size based on the range options\n        fileSize = stat.size - (value.start ? value.start : 0);\n        callback(null, fileSize);\n      });\n    }\n\n  // or http response\n  } else if (Object.prototype.hasOwnProperty.call(value, 'httpVersion')) {\n    callback(null, +value.headers['content-length']);\n\n  // or request stream http://github.com/mikeal/request\n  } else if (Object.prototype.hasOwnProperty.call(value, 'httpModule')) {\n    // wait till response come back\n    value.on('response', function(response) {\n      value.pause();\n      callback(null, +response.headers['content-length']);\n    });\n    value.resume();\n\n  // something else\n  } else {\n    callback('Unknown stream');\n  }\n};\n\nFormData.prototype._multiPartHeader = function(field, value, options) {\n  // custom header specified (as string)?\n  // it becomes responsible for boundary\n  // (e.g. to handle extra CRLFs on .NET servers)\n  if (typeof options.header == 'string') {\n    return options.header;\n  }\n\n  var contentDisposition = this._getContentDisposition(value, options);\n  var contentType = this._getContentType(value, options);\n\n  var contents = '';\n  var headers  = {\n    // add custom disposition as third element or keep it two elements if not\n    'Content-Disposition': ['form-data', 'name=\"' + field + '\"'].concat(contentDisposition || []),\n    // if no content type. allow it to be empty array\n    'Content-Type': [].concat(contentType || [])\n  };\n\n  // allow custom headers.\n  if (typeof options.header == 'object') {\n    populate(headers, options.header);\n  }\n\n  var header;\n  for (var prop in headers) {\n    if (Object.prototype.hasOwnProperty.call(headers, prop)) {\n      header = headers[prop];\n\n      // skip nullish headers.\n      if (header == null) {\n        continue;\n      }\n\n      // convert all headers to arrays.\n      if (!Array.isArray(header)) {\n        header = [header];\n      }\n\n      // add non-empty headers.\n      if (header.length) {\n        contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;\n      }\n    }\n  }\n\n  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;\n};\n\nFormData.prototype._getContentDisposition = function(value, options) {\n\n  var filename\n    , contentDisposition\n    ;\n\n  if (typeof options.filepath === 'string') {\n    // custom filepath for relative paths\n    filename = path.normalize(options.filepath).replace(/\\\\/g, '/');\n  } else if (options.filename || value.name || value.path) {\n    // custom filename take precedence\n    // formidable and the browser add a name property\n    // fs- and request- streams have path property\n    filename = path.basename(options.filename || value.name || value.path);\n  } else if (value.readable && Object.prototype.hasOwnProperty.call(value, 'httpVersion')) {\n    // or try http response\n    filename = path.basename(value.client._httpMessage.path || '');\n  }\n\n  if (filename) {\n    contentDisposition = 'filename=\"' + filename + '\"';\n  }\n\n  return contentDisposition;\n};\n\nFormData.prototype._getContentType = function(value, options) {\n\n  // use custom content-type above all\n  var contentType = options.contentType;\n\n  // or try `name` from formidable, browser\n  if (!contentType && value.name) {\n    contentType = mime.lookup(value.name);\n  }\n\n  // or try `path` from fs-, request- streams\n  if (!contentType && value.path) {\n    contentType = mime.lookup(value.path);\n  }\n\n  // or if it's http-reponse\n  if (!contentType && value.readable && Object.prototype.hasOwnProperty.call(value, 'httpVersion')) {\n    contentType = value.headers['content-type'];\n  }\n\n  // or guess it from the filepath or filename\n  if (!contentType && (options.filepath || options.filename)) {\n    contentType = mime.lookup(options.filepath || options.filename);\n  }\n\n  // fallback to the default content type if `value` is not simple value\n  if (!contentType && typeof value == 'object') {\n    contentType = FormData.DEFAULT_CONTENT_TYPE;\n  }\n\n  return contentType;\n};\n\nFormData.prototype._multiPartFooter = function() {\n  return function(next) {\n    var footer = FormData.LINE_BREAK;\n\n    var lastPart = (this._streams.length === 0);\n    if (lastPart) {\n      footer += this._lastBoundary();\n    }\n\n    next(footer);\n  }.bind(this);\n};\n\nFormData.prototype._lastBoundary = function() {\n  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;\n};\n\nFormData.prototype.getHeaders = function(userHeaders) {\n  var header;\n  var formHeaders = {\n    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()\n  };\n\n  for (header in userHeaders) {\n    if (Object.prototype.hasOwnProperty.call(userHeaders, header)) {\n      formHeaders[header.toLowerCase()] = userHeaders[header];\n    }\n  }\n\n  return formHeaders;\n};\n\nFormData.prototype.setBoundary = function(boundary) {\n  this._boundary = boundary;\n};\n\nFormData.prototype.getBoundary = function() {\n  if (!this._boundary) {\n    this._generateBoundary();\n  }\n\n  return this._boundary;\n};\n\nFormData.prototype.getBuffer = function() {\n  var dataBuffer = new Buffer.alloc(0);\n  var boundary = this.getBoundary();\n\n  // Create the form content. Add Line breaks to the end of data.\n  for (var i = 0, len = this._streams.length; i < len; i++) {\n    if (typeof this._streams[i] !== 'function') {\n\n      // Add content to the buffer.\n      if(Buffer.isBuffer(this._streams[i])) {\n        dataBuffer = Buffer.concat( [dataBuffer, this._streams[i]]);\n      }else {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(this._streams[i])]);\n      }\n\n      // Add break after content.\n      if (typeof this._streams[i] !== 'string' || this._streams[i].substring( 2, boundary.length + 2 ) !== boundary) {\n        dataBuffer = Buffer.concat( [dataBuffer, Buffer.from(FormData.LINE_BREAK)] );\n      }\n    }\n  }\n\n  // Add the footer and return the Buffer object.\n  return Buffer.concat( [dataBuffer, Buffer.from(this._lastBoundary())] );\n};\n\nFormData.prototype._generateBoundary = function() {\n  // This generates a 50 character boundary similar to those used by Firefox.\n  // They are optimized for boyer-moore parsing.\n  var boundary = '--------------------------';\n  for (var i = 0; i < 24; i++) {\n    boundary += Math.floor(Math.random() * 10).toString(16);\n  }\n\n  this._boundary = boundary;\n};\n\n// Note: getLengthSync DOESN'T calculate streams length\n// As workaround one can calculate file size manually\n// and add it as knownLength option\nFormData.prototype.getLengthSync = function() {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  // Don't get confused, there are 3 \"internal\" streams for each keyval pair\n  // so it basically checks if there is any value added to the form\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  // https://github.com/form-data/form-data/issues/40\n  if (!this.hasKnownLength()) {\n    // Some async length retrievers are present\n    // therefore synchronous length calculation is false.\n    // Please use getLength(callback) to get proper length\n    this._error(new Error('Cannot calculate proper length in synchronous way.'));\n  }\n\n  return knownLength;\n};\n\n// Public API to check if length of added values is known\n// https://github.com/form-data/form-data/issues/196\n// https://github.com/form-data/form-data/issues/262\nFormData.prototype.hasKnownLength = function() {\n  var hasKnownLength = true;\n\n  if (this._valuesToMeasure.length) {\n    hasKnownLength = false;\n  }\n\n  return hasKnownLength;\n};\n\nFormData.prototype.getLength = function(cb) {\n  var knownLength = this._overheadLength + this._valueLength;\n\n  if (this._streams.length) {\n    knownLength += this._lastBoundary().length;\n  }\n\n  if (!this._valuesToMeasure.length) {\n    process.nextTick(cb.bind(this, null, knownLength));\n    return;\n  }\n\n  asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    values.forEach(function(length) {\n      knownLength += length;\n    });\n\n    cb(null, knownLength);\n  });\n};\n\nFormData.prototype.submit = function(params, cb) {\n  var request\n    , options\n    , defaults = {method: 'post'}\n    ;\n\n  // parse provided url if it's string\n  // or treat it as options object\n  if (typeof params == 'string') {\n\n    params = parseUrl(params);\n    options = populate({\n      port: params.port,\n      path: params.pathname,\n      host: params.hostname,\n      protocol: params.protocol\n    }, defaults);\n\n  // use custom params\n  } else {\n\n    options = populate(params, defaults);\n    // if no port provided use default one\n    if (!options.port) {\n      options.port = options.protocol == 'https:' ? 443 : 80;\n    }\n  }\n\n  // put that good code in getHeaders to some use\n  options.headers = this.getHeaders(params.headers);\n\n  // https if specified, fallback to http in any other case\n  if (options.protocol == 'https:') {\n    request = https.request(options);\n  } else {\n    request = http.request(options);\n  }\n\n  // get content length and fire away\n  this.getLength(function(err, length) {\n    if (err && err !== 'Unknown stream') {\n      this._error(err);\n      return;\n    }\n\n    // add content length\n    if (length) {\n      request.setHeader('Content-Length', length);\n    }\n\n    this.pipe(request);\n    if (cb) {\n      var onResponse;\n\n      var callback = function (error, responce) {\n        request.removeListener('error', callback);\n        request.removeListener('response', onResponse);\n\n        return cb.call(this, error, responce);\n      };\n\n      onResponse = callback.bind(this, null);\n\n      request.on('error', callback);\n      request.on('response', onResponse);\n    }\n  }.bind(this));\n\n  return request;\n};\n\nFormData.prototype._error = function(err) {\n  if (!this.error) {\n    this.error = err;\n    this.pause();\n    this.emit('error', err);\n  }\n};\n\nFormData.prototype.toString = function () {\n  return '[object FormData]';\n};\nsetToStringTag(FormData, 'FormData');\n","'use strict';\n\nvar parseUrl = require('url').parse;\n\nvar DEFAULT_PORTS = {\n  ftp: 21,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443,\n};\n\nvar stringEndsWith = String.prototype.endsWith || function(s) {\n  return s.length <= this.length &&\n    this.indexOf(s, this.length - s.length) !== -1;\n};\n\n/**\n * @param {string|object} url - The URL, or the result from url.parse.\n * @return {string} The URL of the proxy that should handle the request to the\n *  given URL. If no proxy is set, this will be an empty string.\n */\nfunction getProxyForUrl(url) {\n  var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};\n  var proto = parsedUrl.protocol;\n  var hostname = parsedUrl.host;\n  var port = parsedUrl.port;\n  if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {\n    return '';  // Don't proxy URLs without a valid scheme or host.\n  }\n\n  proto = proto.split(':', 1)[0];\n  // Stripping ports in this way instead of using parsedUrl.hostname to make\n  // sure that the brackets around IPv6 addresses are kept.\n  hostname = hostname.replace(/:\\d*$/, '');\n  port = parseInt(port) || DEFAULT_PORTS[proto] || 0;\n  if (!shouldProxy(hostname, port)) {\n    return '';  // Don't proxy URLs that match NO_PROXY.\n  }\n\n  var proxy =\n    getEnv('npm_config_' + proto + '_proxy') ||\n    getEnv(proto + '_proxy') ||\n    getEnv('npm_config_proxy') ||\n    getEnv('all_proxy');\n  if (proxy && proxy.indexOf('://') === -1) {\n    // Missing scheme in proxy, default to the requested URL's scheme.\n    proxy = proto + '://' + proxy;\n  }\n  return proxy;\n}\n\n/**\n * Determines whether a given URL should be proxied.\n *\n * @param {string} hostname - The host name of the URL.\n * @param {number} port - The effective port of the URL.\n * @returns {boolean} Whether the given URL should be proxied.\n * @private\n */\nfunction shouldProxy(hostname, port) {\n  var NO_PROXY =\n    (getEnv('npm_config_no_proxy') || getEnv('no_proxy')).toLowerCase();\n  if (!NO_PROXY) {\n    return true;  // Always proxy if NO_PROXY is not set.\n  }\n  if (NO_PROXY === '*') {\n    return false;  // Never proxy if wildcard is set.\n  }\n\n  return NO_PROXY.split(/[,\\s]/).every(function(proxy) {\n    if (!proxy) {\n      return true;  // Skip zero-length hosts.\n    }\n    var parsedProxy = proxy.match(/^(.+):(\\d+)$/);\n    var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;\n    var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;\n    if (parsedProxyPort && parsedProxyPort !== port) {\n      return true;  // Skip if ports don't match.\n    }\n\n    if (!/^[.*]/.test(parsedProxyHostname)) {\n      // No wildcards, so stop proxying if there is an exact match.\n      return hostname !== parsedProxyHostname;\n    }\n\n    if (parsedProxyHostname.charAt(0) === '*') {\n      // Remove leading wildcard.\n      parsedProxyHostname = parsedProxyHostname.slice(1);\n    }\n    // Stop proxying if the hostname ends with the no_proxy host.\n    return !stringEndsWith.call(hostname, parsedProxyHostname);\n  });\n}\n\n/**\n * Get the value for an environment variable.\n *\n * @param {string} key - The name of the environment variable.\n * @return {string} The value of the environment variable.\n * @private\n */\nfunction getEnv(key) {\n  return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';\n}\n\nexports.getProxyForUrl = getProxyForUrl;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(' ', ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug !== \"function\") {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Preventive platform detection\n// istanbul ignore next\n(function detectUnsupportedEnvironment() {\n  var looksLikeNode = typeof process !== \"undefined\";\n  var looksLikeBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\n  var looksLikeV8 = isFunction(Error.captureStackTrace);\n  if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {\n    console.warn(\"The follow-redirects package should be excluded from browser builds.\");\n  }\n}());\n\n// Whether to use the native URL object or the legacy url module\nvar useNativeURL = false;\ntry {\n  assert(new URL(\"\"));\n}\ncatch (error) {\n  useNativeURL = error.code === \"ERR_INVALID_URL\";\n}\n\n// URL fields to preserve in copy operations\nvar preservedUrlFields = [\n  \"auth\",\n  \"host\",\n  \"hostname\",\n  \"href\",\n  \"path\",\n  \"pathname\",\n  \"port\",\n  \"protocol\",\n  \"query\",\n  \"search\",\n  \"hash\",\n];\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar InvalidUrlError = createErrorType(\n  \"ERR_INVALID_URL\",\n  \"Invalid URL\",\n  TypeError\n);\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\",\n  RedirectionError\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// istanbul ignore next\nvar destroy = Writable.prototype.destroy || noop;\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    try {\n      self._processResponse(response);\n    }\n    catch (cause) {\n      self.emit(\"error\", cause instanceof RedirectionError ?\n        cause : new RedirectionError({ cause: cause }));\n    }\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  destroyRequest(this._currentRequest);\n  this._currentRequest.abort();\n  this.emit(\"abort\");\n};\n\nRedirectableRequest.prototype.destroy = function (error) {\n  destroyRequest(this._currentRequest, error);\n  destroy.call(this, error);\n  return this;\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!isString(data) && !isBuffer(data)) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (isFunction(data)) {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (isFunction(encoding)) {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    self.removeListener(\"close\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n  this.on(\"close\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    throw new TypeError(\"Unsupported protocol \" + protocol);\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request and set up its event handlers\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  request._redirectable = this;\n  for (var event of events) {\n    request.on(event, eventHandlers[event]);\n  }\n\n  // RFC7230§5.3.1: When making a request directly to an origin server, […]\n  // a client MUST send only the absolute path […] as the request-target.\n  this._currentUrl = /^\\//.test(this._options.path) ?\n    url.format(this._options) :\n    // When making a request to a proxy, […]\n    // a client MUST send the target URI in absolute-form […].\n    this._options.path;\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      // istanbul ignore else\n      if (request === self._currentRequest) {\n        // Report any write errors\n        // istanbul ignore if\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          // istanbul ignore else\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  destroyRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231§6.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    throw new TooManyRedirectsError();\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231§6.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, […]\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource […]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) […]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = parseUrl(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Create the redirected request\n  var redirectUrl = resolveUrl(location, currentUrl);\n  debug(\"redirecting to\", redirectUrl.href);\n  this._isRedirect = true;\n  spreadUrlObject(redirectUrl, this._options);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrl.protocol !== currentUrlParts.protocol &&\n     redirectUrl.protocol !== \"https:\" ||\n     redirectUrl.host !== currentHost &&\n     !isSubdomain(redirectUrl.host, currentHost)) {\n    removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (isFunction(beforeRedirect)) {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    beforeRedirect(this._options, responseDetails, requestDetails);\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  this._performRequest();\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters, ensuring that input is an object\n      if (isURL(input)) {\n        input = spreadUrlObject(input);\n      }\n      else if (isString(input)) {\n        input = spreadUrlObject(parseUrl(input));\n      }\n      else {\n        callback = options;\n        options = validateUrl(input);\n        input = { protocol: protocol };\n      }\n      if (isFunction(options)) {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n      if (!isString(options.host) && !isString(options.hostname)) {\n        options.hostname = \"::1\";\n      }\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\nfunction noop() { /* empty */ }\n\nfunction parseUrl(input) {\n  var parsed;\n  // istanbul ignore else\n  if (useNativeURL) {\n    parsed = new URL(input);\n  }\n  else {\n    // Ensure the URL is valid and absolute\n    parsed = validateUrl(url.parse(input));\n    if (!isString(parsed.protocol)) {\n      throw new InvalidUrlError({ input });\n    }\n  }\n  return parsed;\n}\n\nfunction resolveUrl(relative, base) {\n  // istanbul ignore next\n  return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));\n}\n\nfunction validateUrl(input) {\n  if (/^\\[/.test(input.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(input.hostname)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  if (/^\\[/.test(input.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(input.host)) {\n    throw new InvalidUrlError({ input: input.href || input });\n  }\n  return input;\n}\n\nfunction spreadUrlObject(urlObject, target) {\n  var spread = target || {};\n  for (var key of preservedUrlFields) {\n    spread[key] = urlObject[key];\n  }\n\n  // Fix IPv6 hostname\n  if (spread.hostname.startsWith(\"[\")) {\n    spread.hostname = spread.hostname.slice(1, -1);\n  }\n  // Ensure port is a number\n  if (spread.port !== \"\") {\n    spread.port = Number(spread.port);\n  }\n  // Concatenate path\n  spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;\n\n  return spread;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, message, baseClass) {\n  // Create constructor\n  function CustomError(properties) {\n    // istanbul ignore else\n    if (isFunction(Error.captureStackTrace)) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n    Object.assign(this, properties || {});\n    this.code = code;\n    this.message = this.cause ? message + \": \" + this.cause.message : message;\n  }\n\n  // Attach constructor and set default properties\n  CustomError.prototype = new (baseClass || Error)();\n  Object.defineProperties(CustomError.prototype, {\n    constructor: {\n      value: CustomError,\n      enumerable: false,\n    },\n    name: {\n      value: \"Error [\" + code + \"]\",\n      enumerable: false,\n    },\n  });\n  return CustomError;\n}\n\nfunction destroyRequest(request, error) {\n  for (var event of events) {\n    request.removeListener(event, eventHandlers[event]);\n  }\n  request.on(\"error\", noop);\n  request.destroy(error);\n}\n\nfunction isSubdomain(subdomain, domain) {\n  assert(isString(subdomain) && isString(domain));\n  var dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\nfunction isString(value) {\n  return typeof value === \"string\" || value instanceof String;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction isBuffer(value) {\n  return typeof value === \"object\" && (\"length\" in value);\n}\n\nfunction isURL(value) {\n  return URL && value instanceof URL;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","import { elizaLogger } from '@elizaos/core';\nimport { getEnv } from './config/env';\nimport { startAgents } from './eliza';\n\n// Testing env\ngetEnv();\n\nstartAgents().catch((error) => {\n  elizaLogger.error('Unhandled error in startAgents:', error);\n  process.exit(1);\n});\n","import { z } from 'zod';\n\nconst envSchema = z.object({\n  POSTGRES_URL: z.string().url(),\n  TWITTER_USERNAME: z.string().min(1),\n  TWITTER_PASSWORD: z.string().min(1),\n  TWITTER_EMAIL: z.string().email(),\n  TWITTER_DRY_RUN: z.string().min(1),\n  TWITTER_TARGET_USERS: z.string().min(1),\n  OPENAI_API_KEY: z.string().min(1),\n  TWITTER_POLL_INTERVAL: z.string().transform((val) => Number.parseInt(val)),\n  SEARCH_TIMEFRAME_HOURS: z\n    .string()\n    .transform((val) => Number.parseInt(val))\n    .default('24'),\n  SEARCH_PREFERRED_TOPIC: z.string().min(1).default('crypto'),\n  INJECTIVE_ENABLED: z.string().transform((val) => val === 'true'),\n});\n\nexport type Env = z.infer<typeof envSchema>;\n\nexport function getEnv(): Env {\n  // Access runtime config\n  const envParse = envSchema.safeParse({\n    POSTGRES_URL: process.env.POSTGRES_URL,\n    TWITTER_USERNAME: process.env.TWITTER_USERNAME,\n    TWITTER_PASSWORD: process.env.TWITTER_PASSWORD,\n    TWITTER_EMAIL: process.env.TWITTER_EMAIL,\n    TWITTER_DRY_RUN: process.env.TWITTER_DRY_RUN,\n    TWITTER_TARGET_USERS: process.env.TWITTER_TARGET_USERS,\n    OPENAI_API_KEY: process.env.OPENAI_API_KEY,\n    TWITTER_POLL_INTERVAL: process.env.TWITTER_POLL_INTERVAL,\n    SEARCH_TIMEFRAME_HOURS: process.env.SEARCH_TIMEFRAME_HOURS,\n    SEARCH_PREFERRED_TOPIC: process.env.SEARCH_PREFERRED_TOPIC,\n    INJECTIVE_ENABLED: process.env.INJECTIVE_ENABLED,\n  });\n\n  if (!envParse.success) {\n    console.error(\n      '❌ Invalid environment variables:',\n      envParse.error.flatten().fieldErrors,\n    );\n    throw new Error('Invalid environment variables');\n  }\n  return envParse.data;\n}\n","import {\n  AgentRuntime,\n  type Character,\n  type ICacheManager,\n  type IDatabaseAdapter,\n  type IDatabaseCacheAdapter,\n  elizaLogger,\n  settings,\n  stringToUuid,\n} from '@elizaos/core';\nimport { initializeClients } from 'src/bork-protocol/clients';\nimport { PostgresDatabaseAdapter } from 'src/bork-protocol/plugins/adapter-postgres';\nimport { ApiClient } from '../api/api';\nimport { initializeDbCache } from '../cache/initialize-db-cache';\nimport { configureApiRoutes } from '../config/api-routes';\nimport { getEnv } from '../config/env';\nimport {\n  getTokenForProvider,\n  loadCharacters,\n  parseArguments,\n} from '../config/index';\nimport { character } from './character';\n\nexport function createAgent(\n  character: Character,\n  db: IDatabaseAdapter & IDatabaseCacheAdapter,\n  cache: ICacheManager,\n  token: string,\n) {\n  // Use type assertion to handle plugin version mismatch\n  const plugins = [];\n\n  return new AgentRuntime({\n    databaseAdapter: db,\n    token,\n    modelProvider: character.modelProvider,\n    evaluators: [],\n    character,\n    plugins,\n    providers: [],\n    actions: [],\n    services: [],\n    managers: [],\n    cacheManager: cache,\n  });\n}\n\nasync function startAgent(\n  character: Character,\n  directClient: ApiClient,\n  db: IDatabaseAdapter & IDatabaseCacheAdapter,\n) {\n  try {\n    elizaLogger.info(\n      `[Initialize] Starting agent for character: ${character.name}`,\n    );\n    character.id ??= stringToUuid(character.name);\n    character.username ??= character.name;\n\n    const token = getTokenForProvider(character.modelProvider, character);\n    if (!token) {\n      elizaLogger.error(\n        `[Initialize]No token found for provider ${character.modelProvider}`,\n      );\n      throw new Error(`No token found for provider ${character.modelProvider}`);\n    }\n    elizaLogger.info('[Initialize] Initializing database cache');\n    const cache = initializeDbCache(character, db);\n    const runtime = createAgent(character, db, cache, token);\n    await runtime.initialize();\n    runtime.clients = await initializeClients(character, runtime);\n    directClient.registerAgent(runtime);\n\n    return runtime;\n  } catch (error) {\n    elizaLogger.error(\n      `[Initialize]Error starting agent for character ${character.name}:`,\n      error,\n    );\n    if (db) {\n      elizaLogger.info('Closing database connection due to error');\n      await db.close();\n    }\n    throw error;\n  }\n}\n\nexport const startAgents = async () => {\n  console.log('Starting agents initialization');\n  elizaLogger.info('[Initialize] Starting agents initialization');\n  const directClient = new ApiClient();\n  configureApiRoutes(directClient.app);\n  const serverPort = Number.parseInt(settings.SERVER_PORT || '3000');\n  const args = parseArguments();\n\n  const charactersArg = args.characters || args.character;\n  let characters = [character];\n\n  if (charactersArg) {\n    characters = await loadCharacters(charactersArg);\n  }\n  elizaLogger.info('[Initialize] Loading database adapter');\n  let db: (IDatabaseAdapter & IDatabaseCacheAdapter) | undefined;\n  try {\n    db = new PostgresDatabaseAdapter({\n      connectionString: getEnv().POSTGRES_URL,\n      parseInputs: true,\n    });\n\n    // Test the connection\n    await db.init();\n  } catch (error) {\n    elizaLogger.error('[Initialize] Error initializing database:', error);\n    throw error;\n  }\n\n  elizaLogger.info('[Initialize] Starting agents');\n  try {\n    for (const character of characters) {\n      await startAgent(character, directClient as ApiClient, db);\n    }\n  } catch (error) {\n    elizaLogger.error('[Initialize] Error starting agents:', error);\n    throw error;\n  }\n\n  // upload some agent functionality into directClient\n  directClient.startAgent = async (character: Character) => {\n    return startAgent(character, directClient, db);\n  };\n  directClient.start(serverPort);\n\n  // Handle graceful shutdown\n  let isShuttingDown = false;\n\n  const shutdown = async () => {\n    elizaLogger.info('Shutdown handler triggered');\n\n    // Prevent multiple shutdown attempts\n    if (isShuttingDown) {\n      elizaLogger.info('Already shutting down, skipping...');\n      return;\n    }\n\n    isShuttingDown = true;\n    elizaLogger.info('Starting graceful shutdown...');\n\n    // For debugging purposes, print a stack trace to see what triggered shutdown\n    console.trace('Shutdown stack trace');\n\n    // Just exit the process immediately - don't try to close connections\n    // This avoids all the pool closing errors at the cost of not closing connections cleanly\n    process.exit(0);\n  };\n\n  // Handle different shutdown signals - remove any existing handlers first\n  process.removeListener('SIGINT', shutdown);\n  process.removeListener('SIGTERM', shutdown);\n  process.on('SIGINT', shutdown);\n  process.on('SIGTERM', shutdown);\n};\n","import { elizaLogger } from '@elizaos/core';\nimport { Pool } from 'pg';\nimport { getEnv } from '../../../../config/env';\nimport * as queries from './queries';\nimport * as schema from './schema';\n\n/**\n * A singleton database pool manager that ensures we only have\n * one database pool instance and proper cleanup\n */\nclass DatabaseManager {\n  private static instance: DatabaseManager;\n  private pool: Pool | null;\n  private isClosing: boolean;\n  private closePromise: Promise<void> | null;\n  private closeResolver: (() => void) | null;\n\n  private constructor() {\n    this.pool = null;\n    this.isClosing = false;\n    this.closePromise = null;\n    this.closeResolver = null;\n    this.initPool();\n    this.setupShutdownHandlers();\n  }\n\n  /**\n   * Get the singleton instance\n   */\n  public static getInstance(): DatabaseManager {\n    if (!DatabaseManager.instance) {\n      DatabaseManager.instance = new DatabaseManager();\n    }\n    return DatabaseManager.instance;\n  }\n\n  /**\n   * Initialize the database pool\n   */\n  private initPool(): void {\n    if (!this.pool && !this.isClosing) {\n      this.pool = new Pool({\n        connectionString: getEnv().POSTGRES_URL,\n        max: 20,\n        idleTimeoutMillis: 30000,\n        connectionTimeoutMillis: 5000,\n      });\n\n      // Handle pool errors\n      this.pool.on('error', (err) => {\n        elizaLogger.error('[DatabaseManager] Unexpected pool error:', err);\n      });\n\n      elizaLogger.info('[DatabaseManager] Database pool initialized');\n    }\n  }\n\n  /**\n   * Set up shutdown handlers\n   */\n  private setupShutdownHandlers(): void {\n    // Use a single handler for all shutdown signals\n    const shutdownHandler = () => {\n      this.cleanup().catch((err) => {\n        elizaLogger.error(\n          '[DatabaseManager] Unhandled error during pool cleanup:',\n          err,\n        );\n      });\n    };\n\n    // Setup handler on these signals just once\n    process.once('SIGINT', shutdownHandler);\n    process.once('SIGTERM', shutdownHandler);\n    process.once('beforeExit', shutdownHandler);\n  }\n\n  /**\n   * Get the database pool\n   */\n  public getPool(): Pool {\n    if (!this.pool) {\n      this.initPool();\n    }\n\n    if (!this.pool) {\n      throw new Error('Failed to initialize database pool');\n    }\n\n    return this.pool;\n  }\n\n  /**\n   * Clean up the database pool\n   */\n  public async cleanup(): Promise<void> {\n    // If already closing, return the existing promise\n    if (this.isClosing && this.closePromise) {\n      return this.closePromise;\n    }\n\n    // If pool doesn't exist, just resolve\n    if (!this.pool) {\n      return Promise.resolve();\n    }\n\n    // Set up the closing state\n    this.isClosing = true;\n    this.closePromise = new Promise<void>((resolve) => {\n      this.closeResolver = resolve;\n    });\n\n    // Try to end the pool\n    try {\n      elizaLogger.info('[DatabaseManager] Closing database pool...');\n\n      // Add a timeout just in case\n      const timeoutId = setTimeout(() => {\n        elizaLogger.error(\n          '[DatabaseManager] Pool end timeout - forcing cleanup',\n        );\n        this.pool = null;\n        if (this.closeResolver) {\n          this.closeResolver();\n        }\n      }, 3000);\n\n      // Attempt to end the pool\n      await this.pool.end();\n\n      // Clear the timeout\n      clearTimeout(timeoutId);\n\n      // Clean up\n      elizaLogger.info('[DatabaseManager] Database pool closed successfully');\n      this.pool = null;\n\n      // Resolve the promise\n      if (this.closeResolver) {\n        this.closeResolver();\n      }\n    } catch (error) {\n      elizaLogger.error(\n        '[DatabaseManager] Error closing database pool:',\n        error,\n      );\n\n      // Clean up anyway\n      this.pool = null;\n\n      // Resolve the promise even if it failed\n      if (this.closeResolver) {\n        this.closeResolver();\n      }\n    }\n\n    return this.closePromise;\n  }\n}\n\n// Create the database manager instance\nconst dbManager = DatabaseManager.getInstance();\n\n// Export the database pool through the manager\nexport const db = dbManager.getPool();\nexport const cleanupPool = () => dbManager.cleanup();\n\n// Export schemas and queries\nexport { schema, queries };\n","import type { TargetAccount } from '@/types/account';\nimport type { TopicWeightRow } from '@/types/topic';\nimport type { DatabaseTweet } from '@/types/twitter';\nimport type { TwitterConfig, TwitterConfigRow } from '@/types/twitter-config';\nimport { type UUID, elizaLogger, stringToUuid } from '@elizaos/core';\nimport type { PoolClient } from 'pg';\nimport { v4 as uuidv4 } from 'uuid';\nimport { db } from './index';\nimport type {\n  AccountTopic,\n  AgentPrompt,\n  AgentSetting,\n  ConsciousnessStream,\n  Log,\n  StreamSetting,\n  YapsData,\n} from './schema';\n\n// FIXME: This needs to be split into multiple files\n\n/**\n * Execute a function within a transaction and automatically release the client\n */\nasync function withTransaction<T>(\n  fn: (client: PoolClient) => Promise<T>,\n): Promise<T> {\n  const client = await db.connect();\n  try {\n    await client.query('BEGIN');\n    const result = await fn(client);\n    await client.query('COMMIT');\n    return result;\n  } catch (error) {\n    await client.query('ROLLBACK');\n    throw error;\n  } finally {\n    client.release();\n  }\n}\n\n/**\n * Execute a function with a client that may or may not be part of an existing transaction\n */\nasync function withClient<T>(\n  clientOrNull: PoolClient | null,\n  fn: (client: PoolClient) => Promise<T>,\n): Promise<T> {\n  if (clientOrNull) {\n    // Use the provided client (likely part of an ongoing transaction)\n    return fn(clientOrNull);\n  }\n\n  // Get a new client and release it when done\n  const client = await db.connect();\n  try {\n    return await fn(client);\n  } finally {\n    client.release();\n  }\n}\n\nexport const yapsQueries = {\n  async upsertYapsData(\n    data: Omit<YapsData, 'id' | 'createdAt'>,\n  ): Promise<void> {\n    const query = `\n      INSERT INTO yaps (\n        user_id,\n        username,\n        yaps_all,\n        yaps_l24h,\n        yaps_l48h,\n        yaps_l7d,\n        yaps_l30d,\n        yaps_l3m,\n        yaps_l6m,\n        yaps_l12m,\n        last_updated\n      ) VALUES (\n        $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11\n      )\n      ON CONFLICT (user_id) DO UPDATE SET\n        username = EXCLUDED.username,\n        yaps_all = EXCLUDED.yaps_all,\n        yaps_l24h = EXCLUDED.yaps_l24h,\n        yaps_l48h = EXCLUDED.yaps_l48h,\n        yaps_l7d = EXCLUDED.yaps_l7d,\n        yaps_l30d = EXCLUDED.yaps_l30d,\n        yaps_l3m = EXCLUDED.yaps_l3m,\n        yaps_l6m = EXCLUDED.yaps_l6m,\n        yaps_l12m = EXCLUDED.yaps_l12m,\n        last_updated = EXCLUDED.last_updated\n    `;\n\n    await db.query(query, [\n      data.userId,\n      data.username,\n      data.yapsAll,\n      data.yapsL24h,\n      data.yapsL48h,\n      data.yapsL7d,\n      data.yapsL30d,\n      data.yapsL3m,\n      data.yapsL6m,\n      data.yapsL12m,\n      data.lastUpdated,\n    ]);\n  },\n\n  async getYapsData(userId: string): Promise<YapsData | null> {\n    const query = `\n      SELECT *\n      FROM yaps\n      WHERE user_id = $1\n    `;\n\n    const result = await db.query(query, [userId]);\n    return result.rows[0] || null;\n  },\n\n  async getYapsForAccounts(userIds: string[]): Promise<YapsData[]> {\n    const query = `\n      SELECT *\n      FROM yaps\n      WHERE user_id = ANY($1)\n    `;\n\n    const result = await db.query(query, [userIds]);\n    return result.rows;\n  },\n};\n\nexport const tweetQueries = {\n  getPendingTweets: async (client?: PoolClient): Promise<DatabaseTweet[]> => {\n    try {\n      return withClient(client || null, async (c) => {\n        const { rows } = await c.query(\n          'SELECT * FROM tweets WHERE status = $1 ORDER BY created_at DESC',\n          ['pending'],\n        );\n        return rows;\n      });\n    } catch (error) {\n      elizaLogger.error('Error fetching pending tweets:', error);\n      throw error;\n    }\n  },\n\n  getSentTweets: async (\n    agentId: string,\n    limit: number,\n    client?: PoolClient,\n  ): Promise<DatabaseTweet[]> => {\n    return withClient(client || null, async (c) => {\n      const { rows } = await c.query(\n        'SELECT * FROM tweets WHERE agent_id = $1 AND status = $2 ORDER BY created_at DESC LIMIT $3',\n        [agentId, 'sent', limit],\n      );\n      return rows;\n    });\n  },\n\n  getTweets: async (\n    limit: number,\n    offset: number,\n    client?: PoolClient,\n  ): Promise<DatabaseTweet[]> => {\n    return withClient(client || null, async (c) => {\n      const { rows } = await c.query(\n        'SELECT * FROM tweets ORDER BY created_at DESC LIMIT $1 OFFSET $2',\n        [limit, offset],\n      );\n      return rows;\n    });\n  },\n\n  updateTweetStatus: async (\n    tweet_id: string,\n    status: string,\n    error?: string,\n    client?: PoolClient,\n  ) => {\n    try {\n      return withClient(client || null, async (c) => {\n        await c.query(\n          'UPDATE tweets SET status = $1, error = $2 WHERE tweet_id = $3',\n          [status, error, tweet_id],\n        );\n      });\n    } catch (error) {\n      elizaLogger.error('Error updating tweet status:', error);\n      throw error;\n    }\n  },\n\n  saveTweetObject: async (\n    tweet: DatabaseTweet,\n    client?: PoolClient,\n  ): Promise<void> => {\n    const query = `\n      INSERT INTO tweets (\n        id, tweet_id, agent_id, text, user_id, username, name, timestamp, time_parsed,\n        likes, retweets, replies, views, bookmark_count,\n        conversation_id, permanent_url, html,\n        in_reply_to_status, in_reply_to_status_id,\n        quoted_status, quoted_status_id,\n        retweeted_status, retweeted_status_id,\n        thread,\n        is_quoted, is_pin, is_reply, is_retweet, is_self_thread, sensitive_content,\n        is_thread_merged, thread_size, original_text,\n        media_type, media_url,\n        hashtags, mentions, photos, urls, videos,\n        place, poll,\n        home_timeline,\n        status, created_at, scheduled_for, sent_at,\n        error, prompt, new_tweet_content\n      )\n      VALUES (\n        $1, $2, $3, $4, $5, $6, $7, $8, $9,\n        $10, $11, $12, $13, $14,\n        $15, $16, $17,\n        $18, $19,\n        $20, $21,\n        $22, $23,\n        $24,\n        $25, $26, $27, $28, $29, $30,\n        $31, $32, $33,\n        $34, $35,\n        $36, $37, $38, $39, $40,\n        $41, $42,\n        $43,\n        $44, $45, $46, $47,\n        $48, $49, $50\n      )\n      ON CONFLICT (tweet_id) DO UPDATE SET\n        text = EXCLUDED.text,\n        user_id = EXCLUDED.user_id,\n        username = EXCLUDED.username,\n        name = EXCLUDED.name,\n        timestamp = EXCLUDED.timestamp,\n        time_parsed = EXCLUDED.time_parsed,\n        likes = EXCLUDED.likes,\n        retweets = EXCLUDED.retweets,\n        replies = EXCLUDED.replies,\n        views = EXCLUDED.views,\n        bookmark_count = EXCLUDED.bookmark_count,\n        conversation_id = EXCLUDED.conversation_id,\n        permanent_url = EXCLUDED.permanent_url,\n        html = EXCLUDED.html,\n        in_reply_to_status = EXCLUDED.in_reply_to_status,\n        in_reply_to_status_id = EXCLUDED.in_reply_to_status_id,\n        quoted_status = EXCLUDED.quoted_status,\n        quoted_status_id = EXCLUDED.quoted_status_id,\n        retweeted_status = EXCLUDED.retweeted_status,\n        retweeted_status_id = EXCLUDED.retweeted_status_id,\n        thread = EXCLUDED.thread,\n        is_quoted = EXCLUDED.is_quoted,\n        is_pin = EXCLUDED.is_pin,\n        is_reply = EXCLUDED.is_reply,\n        is_retweet = EXCLUDED.is_retweet,\n        is_self_thread = EXCLUDED.is_self_thread,\n        sensitive_content = EXCLUDED.sensitive_content,\n        is_thread_merged = EXCLUDED.is_thread_merged,\n        thread_size = EXCLUDED.thread_size,\n        original_text = EXCLUDED.original_text,\n        media_type = EXCLUDED.media_type,\n        media_url = EXCLUDED.media_url,\n        hashtags = EXCLUDED.hashtags,\n        mentions = EXCLUDED.mentions,\n        photos = EXCLUDED.photos,\n        urls = EXCLUDED.urls,\n        videos = EXCLUDED.videos,\n        place = EXCLUDED.place,\n        poll = EXCLUDED.poll,\n        home_timeline = EXCLUDED.home_timeline,\n        status = EXCLUDED.status,\n        created_at = EXCLUDED.created_at,\n        scheduled_for = EXCLUDED.scheduled_for,\n        sent_at = EXCLUDED.sent_at,\n        error = EXCLUDED.error,\n        prompt = EXCLUDED.prompt,\n        new_tweet_content = EXCLUDED.new_tweet_content\n    `;\n\n    const values = [\n      tweet.id || uuidv4(),\n      tweet.tweet_id,\n      tweet.agentId,\n      tweet.text,\n      tweet.userId,\n      tweet.username,\n      tweet.name,\n      tweet.timestamp,\n      tweet.timeParsed,\n      tweet.likes || 0,\n      tweet.retweets || 0,\n      tweet.replies || 0,\n      tweet.views,\n      tweet.bookmarkCount,\n      tweet.conversationId,\n      tweet.permanentUrl,\n      tweet.html,\n      tweet.inReplyToStatus ? JSON.stringify(tweet.inReplyToStatus) : null,\n      tweet.inReplyToStatusId,\n      tweet.quotedStatus ? JSON.stringify(tweet.quotedStatus) : null,\n      tweet.quotedStatusId,\n      tweet.retweetedStatus ? JSON.stringify(tweet.retweetedStatus) : null,\n      tweet.retweetedStatusId,\n      JSON.stringify(tweet.thread || []),\n      tweet.isQuoted || false,\n      tweet.isPin || false,\n      tweet.isReply || false,\n      tweet.isRetweet || false,\n      tweet.isSelfThread || false,\n      tweet.sensitiveContent || false,\n      tweet.isThreadMerged || false,\n      tweet.threadSize || 0,\n      tweet.originalText,\n      tweet.mediaType,\n      tweet.mediaUrl,\n      tweet.hashtags || [],\n      JSON.stringify(tweet.mentions || []),\n      JSON.stringify(tweet.photos || []),\n      tweet.urls || [],\n      JSON.stringify(tweet.videos || []),\n      tweet.place ? JSON.stringify(tweet.place) : null,\n      tweet.poll ? JSON.stringify(tweet.poll) : null,\n      JSON.stringify(tweet.homeTimeline || { publicMetrics: {}, entities: {} }),\n      tweet.status || 'pending',\n      tweet.createdAt || new Date(),\n      tweet.scheduledFor,\n      tweet.sentAt,\n      tweet.error,\n      tweet.prompt,\n      tweet.newTweetContent,\n    ];\n\n    try {\n      return withClient(client || null, async (c) => {\n        await c.query(query, values);\n      });\n    } catch (error) {\n      elizaLogger.error('Error saving tweet:', {\n        error: error instanceof Error ? error.message : String(error),\n        tweetId: tweet.tweet_id,\n        userId: tweet.userId,\n      });\n      throw error;\n    }\n  },\n\n  saveTweet: async (\n    text: string,\n    agentId: string,\n    scheduledFor?: Date,\n    newTweetContent?: string,\n    client?: PoolClient,\n  ): Promise<DatabaseTweet> => {\n    // Create a new tweet with both AgentTweet fields and our additional fields\n    const id = uuidv4(); // Generate UUID for our primary key\n    const twitterId = uuidv4(); // Generate an ID that will be used for Twitter\n    const tweet: DatabaseTweet = {\n      // Our primary key\n      id,\n      // AgentTweet fields\n      tweet_id: twitterId,\n      text,\n      hashtags: [],\n      mentions: [],\n      photos: [],\n      urls: [],\n      likes: 0,\n      replies: 0,\n      retweets: 0,\n      isQuoted: false,\n      isPin: false,\n      isReply: false,\n      isRetweet: false,\n      isSelfThread: false,\n      sensitiveContent: false,\n      timestamp: Math.floor(Date.now() / 1000),\n      thread: [], // Required by AgentTweet\n      videos: [], // Required by AgentTweet\n      userId: agentId, // Use agentId as userId for now\n      username: '', // Will be updated later\n      name: '', // Will be updated later\n      conversationId: twitterId, // Same as tweet_id for new tweets\n      permanentUrl: `https://twitter.com/unknown/status/${twitterId}`, // Will be updated later\n\n      // Our additional fields\n      status: 'pending',\n      createdAt: new Date(),\n      agentId,\n      mediaType: 'text',\n      scheduledFor,\n      newTweetContent,\n      isThreadMerged: false,\n      threadSize: 0,\n      originalText: text,\n      homeTimeline: {\n        publicMetrics: {\n          likes: 0,\n          retweets: 0,\n          replies: 0,\n        },\n        entities: {\n          hashtags: [],\n          mentions: [],\n          urls: [],\n        },\n      },\n    };\n\n    try {\n      await tweetQueries.saveTweetObject(tweet, client);\n      return tweet;\n    } catch (error) {\n      elizaLogger.error('Error saving tweet:', error);\n      throw error;\n    }\n  },\n\n  getApprovedTweets: async (client?: PoolClient) => {\n    try {\n      return withClient(client || null, async (c) => {\n        const { rows } = await c.query(\n          'SELECT * FROM tweets WHERE status = $1 AND (scheduled_for IS NULL OR scheduled_for <= NOW()) ORDER BY created_at DESC',\n          ['approved'],\n        );\n        return rows;\n      });\n    } catch (error) {\n      elizaLogger.error('Error fetching approved tweets:', error);\n      throw error;\n    }\n  },\n\n  markTweetAsSent: async (id: string, client?: PoolClient) => {\n    try {\n      return withClient(client || null, async (c) => {\n        await c.query(\n          'UPDATE tweets SET status = $1, sent_at = NOW() WHERE id = $2',\n          ['sent', id],\n        );\n      });\n    } catch (error) {\n      elizaLogger.error('Error marking tweet as sent:', error);\n      throw error;\n    }\n  },\n\n  markTweetAsError: async (id: string, error: string, client?: PoolClient) => {\n    try {\n      return withClient(client || null, async (c) => {\n        await c.query(\n          'UPDATE tweets SET status = $1, error = $2 WHERE id = $3',\n          ['error', error, id],\n        );\n      });\n    } catch (error) {\n      elizaLogger.error('Error marking tweet as error:', error);\n      throw error;\n    }\n  },\n\n  getSentTweetById: async (id: string, client?: PoolClient) => {\n    try {\n      return withClient(client || null, async (c) => {\n        const { rows } = await c.query(\n          'SELECT * FROM tweets WHERE id = $1 AND status = $2',\n          [id, 'sent'],\n        );\n        return rows;\n      });\n    } catch (error) {\n      elizaLogger.error('Error fetching sent tweet:', error);\n      throw error;\n    }\n  },\n\n  updateTweetsAsSending: async (ids: string[], client?: PoolClient) => {\n    return withClient(client || null, async (c) => {\n      await c.query('UPDATE tweets SET status = $1 WHERE id = ANY($2)', [\n        'sending',\n        ids,\n      ]);\n    });\n  },\n\n  insertTweetAnalysis: async (\n    id: UUID,\n    tweet_id: string,\n    type: string,\n    sentiment: string,\n    confidence: number,\n    metrics: Record<string, unknown>,\n    entities: string[],\n    topics: string[],\n    impact_score: number,\n    created_at: Date,\n    author_id: string,\n    tweet_text: string,\n    public_metrics: Record<string, unknown>,\n    raw_entities: Record<string, unknown>,\n    spam_analysis: {\n      spamScore: number;\n      reasons: string[];\n      isSpam: boolean;\n      confidenceMetrics: {\n        linguisticRisk: number;\n        topicMismatch: number;\n        engagementAnomaly: number;\n        promotionalIntent: number;\n        accountTrustSignals: number;\n      };\n    },\n    content_metrics: {\n      relevance: number;\n      quality: number;\n      engagement: number;\n      authenticity: number;\n      valueAdd: number;\n      callToActionEffectiveness?: number;\n      trendAlignmentScore?: number;\n    },\n    format: string,\n    marketing_insights?: Record<string, unknown>,\n    client?: PoolClient,\n  ) => {\n    try {\n      const query = `\n        INSERT INTO tweet_analysis (\n          id,\n          tweet_id,\n          type,\n          format,\n          sentiment,\n          confidence,\n          metrics,\n          entities,\n          topics,\n          impact_score,\n          created_at,\n          author_id,\n          tweet_text,\n          public_metrics,\n          raw_entities,\n          spam_score,\n          spam_reasons,\n          is_spam,\n          linguistic_risk,\n          topic_mismatch,\n          engagement_anomaly,\n          promotional_intent,\n          account_trust_signals,\n          content_relevance,\n          content_quality,\n          content_engagement,\n          content_authenticity,\n          content_value_add,\n          call_to_action_effectiveness,\n          trend_alignment_score,\n          marketing_insights\n        ) VALUES (\n          $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14,\n          $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31\n        )\n        ON CONFLICT (tweet_id) DO UPDATE SET\n          type = EXCLUDED.type,\n          format = EXCLUDED.format,\n          sentiment = EXCLUDED.sentiment,\n          confidence = EXCLUDED.confidence,\n          metrics = EXCLUDED.metrics,\n          entities = EXCLUDED.entities,\n          topics = EXCLUDED.topics,\n          impact_score = EXCLUDED.impact_score,\n          created_at = EXCLUDED.created_at,\n          author_id = EXCLUDED.author_id,\n          tweet_text = EXCLUDED.tweet_text,\n          public_metrics = EXCLUDED.public_metrics,\n          raw_entities = EXCLUDED.raw_entities,\n          spam_score = EXCLUDED.spam_score,\n          spam_reasons = EXCLUDED.spam_reasons,\n          is_spam = EXCLUDED.is_spam,\n          linguistic_risk = EXCLUDED.linguistic_risk,\n          topic_mismatch = EXCLUDED.topic_mismatch,\n          engagement_anomaly = EXCLUDED.engagement_anomaly,\n          promotional_intent = EXCLUDED.promotional_intent,\n          account_trust_signals = EXCLUDED.account_trust_signals,\n          content_relevance = EXCLUDED.content_relevance,\n          content_quality = EXCLUDED.content_quality,\n          content_engagement = EXCLUDED.content_engagement,\n          content_authenticity = EXCLUDED.content_authenticity,\n          content_value_add = EXCLUDED.content_value_add,\n          call_to_action_effectiveness = EXCLUDED.call_to_action_effectiveness,\n          trend_alignment_score = EXCLUDED.trend_alignment_score,\n          marketing_insights = EXCLUDED.marketing_insights`;\n\n      const values = [\n        id,\n        tweet_id,\n        type,\n        format,\n        sentiment,\n        confidence,\n        JSON.stringify(metrics),\n        JSON.stringify(entities),\n        JSON.stringify(topics),\n        impact_score,\n        created_at,\n        author_id,\n        tweet_text,\n        JSON.stringify(public_metrics),\n        JSON.stringify(raw_entities),\n        spam_analysis.spamScore,\n        JSON.stringify(spam_analysis.reasons),\n        spam_analysis.isSpam,\n        spam_analysis.confidenceMetrics.linguisticRisk,\n        spam_analysis.confidenceMetrics.topicMismatch,\n        spam_analysis.confidenceMetrics.engagementAnomaly,\n        spam_analysis.confidenceMetrics.promotionalIntent,\n        spam_analysis.confidenceMetrics.accountTrustSignals,\n        content_metrics.relevance,\n        content_metrics.quality,\n        content_metrics.engagement,\n        content_metrics.authenticity,\n        content_metrics.valueAdd,\n        content_metrics.callToActionEffectiveness || 0,\n        content_metrics.trendAlignmentScore || 0,\n        marketing_insights ? JSON.stringify(marketing_insights) : null,\n      ];\n\n      return withClient(client || null, async (c) => {\n        await c.query(query, values);\n      });\n    } catch (error) {\n      elizaLogger.error('[DB Queries] Error inserting tweet analysis:', {\n        error: error instanceof Error ? error.message : String(error),\n        id: id.toString(),\n        tweet_id,\n        author_id,\n      });\n      throw error;\n    }\n  },\n\n  insertMarketMetrics: async (metrics: Record<string, unknown>) => {\n    try {\n      await db.query(\n        'INSERT INTO market_metrics (metrics, timestamp) VALUES ($1, NOW())',\n        [JSON.stringify(metrics)],\n      );\n    } catch (error) {\n      elizaLogger.error('Error inserting market metrics:', error);\n      throw error;\n    }\n  },\n\n  getSpamUser: async (userId: string) => {\n    try {\n      const { rows } = await db.query(\n        'SELECT * FROM spam_users WHERE user_id = $1',\n        [userId],\n      );\n      return rows[0] || null;\n    } catch (error) {\n      elizaLogger.error('Error fetching spam user:', error);\n      throw error;\n    }\n  },\n\n  updateSpamUser: async (\n    userId: string,\n    spamScore: number,\n    violations: string[],\n  ) => {\n    try {\n      const now = new Date();\n      await db.query(\n        `INSERT INTO spam_users (\n          user_id, spam_score, last_tweet_date, tweet_count, violations, updated_at\n        ) VALUES ($1, $2, $3, 1, $4, $5)\n        ON CONFLICT (user_id) DO UPDATE SET\n          spam_score = $2,\n          last_tweet_date = $3,\n          tweet_count = spam_users.tweet_count + 1,\n          violations = spam_users.violations || $4,\n          updated_at = $5`,\n        [userId, spamScore, now, JSON.stringify(violations), now],\n      );\n    } catch (error) {\n      elizaLogger.error('Error updating spam user:', error);\n      throw error;\n    }\n  },\n\n  getTopicWeights: async (): Promise<TopicWeightRow[]> => {\n    const result = await db.query(\n      'SELECT * FROM topic_weights ORDER BY weight DESC',\n    );\n    return result.rows;\n  },\n\n  updateTopicWeight: async (\n    topic: string,\n    weight: number,\n    impactScore: number,\n    seedWeight: number,\n  ): Promise<void> => {\n    await db.query(\n      `INSERT INTO topic_weights (topic, weight, impact_score, last_updated, seed_weight)\n       VALUES ($1, $2, $3, CURRENT_TIMESTAMP, $4)\n       ON CONFLICT (topic) \n       DO UPDATE SET \n         weight = $2,\n         impact_score = $3,\n         last_updated = CURRENT_TIMESTAMP`,\n      [topic, weight, impactScore, seedWeight],\n    );\n  },\n\n  initializeTopicWeights: async (topics: string[]): Promise<void> => {\n    const seedWeights = topics.map((topic) => ({\n      topic,\n      weight: 0.5,\n      impactScore: 0.5,\n      seedWeight: 0.5,\n    }));\n\n    await Promise.all(\n      seedWeights.map(({ topic, weight, impactScore, seedWeight }) =>\n        tweetQueries.updateTopicWeight(topic, weight, impactScore, seedWeight),\n      ),\n    );\n  },\n\n  async getTargetAccounts(): Promise<TargetAccount[]> {\n    const query = `\n      SELECT * FROM target_accounts \n      WHERE is_active = true \n      ORDER BY created_at DESC\n    `;\n    const result = await db.query(query);\n    return result.rows.map((row) => ({\n      username: row.username,\n      userId: row.user_id,\n      displayName: row.display_name,\n      description: row.description,\n      followersCount: row.followers_count,\n      followingCount: row.following_count,\n      friendsCount: row.friends_count,\n      mediaCount: row.media_count,\n      statusesCount: row.statuses_count,\n      likesCount: row.likes_count,\n      listedCount: row.listed_count,\n      tweetsCount: row.tweets_count,\n      isPrivate: row.is_private,\n      isVerified: row.is_verified,\n      isBlueVerified: row.is_blue_verified,\n      joinedAt: row.joined_at,\n      location: row.location || '',\n      avatarUrl: row.avatar_url,\n      bannerUrl: row.banner_url,\n      websiteUrl: row.website_url,\n      canDm: row.can_dm,\n      createdAt: row.created_at,\n      lastUpdated: row.last_updated,\n      isActive: row.is_active,\n      source: row.source,\n      avgLikes50: row.avg_likes_50 || 0,\n      avgRetweets50: row.avg_retweets_50 || 0,\n      avgReplies50: row.avg_replies_50 || 0,\n      avgViews50: row.avg_views_50 || 0,\n      engagementRate50: row.engagement_rate_50 || 0,\n      influenceScore: row.influence_score || 0,\n      last50TweetsUpdatedAt: row.last_50_tweets_updated_at || null,\n    }));\n  },\n\n  async insertTargetAccount(account: TargetAccount): Promise<void> {\n    const query = `\n      INSERT INTO target_accounts (\n        username,\n        user_id,\n        display_name,\n        description,\n        followers_count,\n        following_count,\n        friends_count,\n        media_count,\n        statuses_count,\n        likes_count,\n        listed_count,\n        tweets_count,\n        is_private,\n        is_verified,\n        is_blue_verified,\n        joined_at,\n        location,\n        avatar_url,\n        banner_url,\n        website_url,\n        can_dm,\n        created_at,\n        last_updated,\n        is_active,\n        source\n      ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25)\n      ON CONFLICT (username) DO UPDATE SET\n        user_id = EXCLUDED.user_id,\n        display_name = EXCLUDED.display_name,\n        description = EXCLUDED.description,\n        followers_count = EXCLUDED.followers_count,\n        following_count = EXCLUDED.following_count,\n        friends_count = EXCLUDED.friends_count,\n        media_count = EXCLUDED.media_count,\n        statuses_count = EXCLUDED.statuses_count,\n        likes_count = EXCLUDED.likes_count,\n        listed_count = EXCLUDED.listed_count,\n        tweets_count = EXCLUDED.tweets_count,\n        is_private = EXCLUDED.is_private,\n        is_verified = EXCLUDED.is_verified,\n        is_blue_verified = EXCLUDED.is_blue_verified,\n        joined_at = EXCLUDED.joined_at,\n        location = EXCLUDED.location,\n        avatar_url = EXCLUDED.avatar_url,\n        banner_url = EXCLUDED.banner_url,\n        website_url = EXCLUDED.website_url,\n        can_dm = EXCLUDED.can_dm,\n        created_at = EXCLUDED.created_at,\n        last_updated = EXCLUDED.last_updated,\n        is_active = EXCLUDED.is_active,\n        source = EXCLUDED.source\n    `;\n\n    await db.query(query, [\n      account.username,\n      account.userId,\n      account.displayName,\n      account.description,\n      account.followersCount,\n      account.followingCount,\n      account.friendsCount,\n      account.mediaCount,\n      account.statusesCount,\n      account.likesCount,\n      account.listedCount,\n      account.tweetsCount,\n      account.isPrivate,\n      account.isVerified,\n      account.isBlueVerified,\n      account.joinedAt,\n      account.location,\n      account.avatarUrl,\n      account.bannerUrl,\n      account.websiteUrl,\n      account.canDm,\n      account.createdAt,\n      account.lastUpdated,\n      account.isActive,\n      account.source,\n    ]);\n  },\n\n  findTweetByTweetId: async (\n    tweet_id: string,\n    client?: PoolClient,\n  ): Promise<DatabaseTweet | null> => {\n    try {\n      return withClient(client || null, async (c) => {\n        const result = await c.query<DatabaseTweet>(\n          'SELECT * FROM tweets WHERE tweet_id = $1 LIMIT 1',\n          [tweet_id],\n        );\n        return result.rows[0] || null;\n      });\n    } catch (error) {\n      elizaLogger.error(\n        `[Tweet Queries] Error finding tweet by tweet ID: ${error}`,\n      );\n      throw error;\n    }\n  },\n\n  findTweetById: async (\n    id: string,\n    client?: PoolClient,\n  ): Promise<DatabaseTweet | null> => {\n    try {\n      return withClient(client || null, async (c) => {\n        const result = await c.query<DatabaseTweet>(\n          'SELECT * FROM tweets WHERE id = $1 LIMIT 1',\n          [id],\n        );\n        return result.rows[0] || null;\n      });\n    } catch (error) {\n      elizaLogger.error(`[Tweet Queries] Error finding tweet by ID: ${error}`);\n      throw error;\n    }\n  },\n\n  updateTargetAccountMetrics: async (\n    username: string,\n    metrics: {\n      avgLikes50: number;\n      avgRetweets50: number;\n      avgReplies50: number;\n      avgViews50: number;\n      last50TweetsUpdatedAt: Date;\n      influenceScore: number;\n    },\n  ): Promise<void> => {\n    const query = `\n      UPDATE target_accounts\n      SET \n        avg_likes_50 = $1,\n        avg_retweets_50 = $2,\n        avg_replies_50 = $3,\n        avg_views_50 = $4,\n        last_50_tweets_updated_at = $5,\n        influence_score = $6\n      WHERE username = $7\n    `;\n\n    try {\n      await db.query(query, [\n        metrics.avgLikes50,\n        metrics.avgRetweets50,\n        metrics.avgReplies50,\n        metrics.avgViews50,\n        metrics.last50TweetsUpdatedAt,\n        metrics.influenceScore,\n        username,\n      ]);\n    } catch (error) {\n      elizaLogger.error('Error updating target account metrics:', {\n        error: error instanceof Error ? error.message : String(error),\n        username,\n      });\n      throw error;\n    }\n  },\n\n  processTweetsInTransaction: async <T>(\n    operations: (client: PoolClient) => Promise<T>,\n  ): Promise<T> => {\n    return withTransaction(operations);\n  },\n\n  ...yapsQueries,\n\n  /**\n   * Get tweets by username\n   */\n  async getTweetsByUsername(\n    username: string,\n    limit = 50,\n  ): Promise<DatabaseTweet[]> {\n    const query = `\n      SELECT *\n      FROM tweets\n      WHERE username = $1\n      ORDER BY timestamp DESC\n      LIMIT $2\n    `;\n\n    try {\n      elizaLogger.debug(`[DB] Getting tweets for username ${username}`);\n      const result = await db.query(query, [username, limit]);\n      return result.rows;\n    } catch (error) {\n      elizaLogger.error(`[DB] Error getting tweets for username ${username}:`, {\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return [];\n    }\n  },\n\n  /**\n   * Creates a new topic weight entry\n   */\n  async createTopicWeight(topicWeight: TopicWeightRow): Promise<void> {\n    const query = `\n      INSERT INTO topic_weights (\n        id,\n        topic,\n        weight,\n        impact_score,\n        created_at,\n        engagement_metrics,\n        sentiment,\n        confidence,\n        tweet_id\n      ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n    `;\n\n    await db.query(query, [\n      topicWeight.id,\n      topicWeight.topic,\n      topicWeight.weight,\n      topicWeight.impact_score,\n      topicWeight.created_at || new Date(),\n      JSON.stringify(topicWeight.engagement_metrics),\n      topicWeight.sentiment,\n      topicWeight.confidence,\n      topicWeight.tweet_id,\n    ]);\n  },\n\n  /**\n   * Gets recent topic weights within a specified timeframe\n   */\n  async getRecentTopicWeights(timeframeHours = 24): Promise<TopicWeightRow[]> {\n    const query = `\n      SELECT *\n      FROM topic_weights\n      WHERE created_at >= NOW() - INTERVAL '${timeframeHours} hours'\n      ORDER BY created_at DESC\n    `;\n\n    const result = await db.query(query);\n    return result.rows.map((row) => ({\n      ...row,\n      engagement_metrics:\n        // TODO Validate this, I believe the logic is wrong here\n        typeof row.engagement_metrics === 'string'\n          ? JSON.parse(row.engagement_metrics)\n          : row.engagement_metrics,\n    }));\n  },\n\n  /**\n   * Gets topic weight trends over time\n   */\n  async getTopicTrends(\n    timeframeHours = 168, // Default 1 week\n    interval = '1 hour',\n  ): Promise<\n    Array<{\n      topic: string;\n      timestamp: Date;\n      avgWeight: number;\n      totalEngagement: number;\n      mentionCount: number;\n    }>\n  > {\n    const query = `\n      WITH time_buckets AS (\n        SELECT\n          topic,\n          time_bucket('${interval}', created_at) as bucket,\n          AVG(weight) as avg_weight,\n          SUM(\n            (engagement_metrics->>'likes')::numeric +\n            (engagement_metrics->>'retweets')::numeric +\n            (engagement_metrics->>'replies')::numeric\n          ) as total_engagement,\n          COUNT(*) as mention_count\n        FROM topic_weights\n        WHERE created_at >= NOW() - INTERVAL '${timeframeHours} hours'\n        GROUP BY topic, bucket\n        ORDER BY bucket DESC\n      )\n      SELECT\n        topic,\n        bucket as timestamp,\n        avg_weight,\n        total_engagement,\n        mention_count\n      FROM time_buckets\n      ORDER BY bucket DESC, avg_weight DESC\n    `;\n\n    const result = await db.query(query);\n    return result.rows;\n  },\n\n  /**\n   * Gets the top trending topics based on recent engagement and weight\n   */\n  async getTopTrendingTopics(\n    timeframeHours = 24,\n    limit = 10,\n  ): Promise<\n    Array<{\n      topic: string;\n      avgWeight: number;\n      totalEngagement: number;\n      mentionCount: number;\n      momentum: number;\n    }>\n  > {\n    const query = `\n      WITH recent_metrics AS (\n        SELECT\n          topic,\n          AVG(weight) as avg_weight,\n          SUM(\n            (engagement_metrics->>'likes')::numeric +\n            (engagement_metrics->>'retweets')::numeric +\n            (engagement_metrics->>'replies')::numeric\n          ) as total_engagement,\n          COUNT(*) as mention_count,\n          -- Calculate momentum (weight trend over time)\n          COALESCE(\n            REGR_SLOPE(\n              weight,\n              EXTRACT(EPOCH FROM created_at)\n            ),\n            0\n          ) as momentum\n        FROM topic_weights\n        WHERE created_at >= NOW() - INTERVAL '${timeframeHours} hours'\n        GROUP BY topic\n      )\n      SELECT *\n      FROM recent_metrics\n      ORDER BY (avg_weight * 0.4 + total_engagement * 0.3 + mention_count * 0.1 + momentum * 0.2) DESC\n      LIMIT $1\n    `;\n\n    const result = await db.query(query, [limit]);\n    return result.rows;\n  },\n};\n\nexport const agentSettingQueries = {\n  getAgentSetting: async (\n    agentId: string,\n    key: string,\n  ): Promise<string | undefined> => {\n    try {\n      const { rows } = await db.query(\n        'SELECT setting_value FROM agent_settings WHERE agent_id = $1 AND setting_key = $2 LIMIT 1',\n        [agentId, key],\n      );\n      return rows[0]?.setting_value;\n    } catch (error) {\n      elizaLogger.error('Error fetching agent setting:', error);\n      throw error;\n    }\n  },\n\n  updateAgentSetting: async (id: string, key: string, value: string) => {\n    try {\n      const setting: AgentSetting = {\n        id: uuidv4(),\n        agentId: id,\n        settingKey: key,\n        settingValue: value,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n      await db.query(\n        'INSERT INTO agent_settings (id, agent_id, setting_key, setting_value, created_at, updated_at) VALUES ($1, $2, $3, $4, $5, $6) ON CONFLICT (id) DO UPDATE SET setting_value = $4, updated_at = $6',\n        [\n          setting.id,\n          setting.agentId,\n          setting.settingKey,\n          setting.settingValue,\n          setting.createdAt,\n          setting.updatedAt,\n        ],\n      );\n    } catch (error) {\n      elizaLogger.error('Error updating agent setting:', error);\n      throw error;\n    }\n  },\n};\n\nexport const promptQueries = {\n  savePrompt: async (settings: AgentPrompt): Promise<AgentPrompt> => {\n    try {\n      const prompt: AgentPrompt = {\n        id: uuidv4(),\n        prompt: settings.prompt,\n        agentId: settings.agentId,\n        version: settings.version,\n        enabled: settings.enabled,\n      };\n      const { rows } = await db.query(\n        'INSERT INTO agent_prompts (id, prompt, agent_id, version, enabled) VALUES ($1, $2, $3, $4, $5) RETURNING *',\n        [\n          prompt.id,\n          prompt.prompt,\n          prompt.agentId,\n          prompt.version,\n          prompt.enabled ? 'true' : 'false',\n        ],\n      );\n      return rows[0];\n    } catch (error) {\n      elizaLogger.error('Error saving prompt:', error);\n      throw error;\n    }\n  },\n\n  getPrompt: async (\n    agentId: string,\n    version: string,\n  ): Promise<AgentPrompt | null> => {\n    try {\n      const { rows } = await db.query(\n        'SELECT * FROM agent_prompts WHERE agent_id = $1 AND version = $2 AND enabled = true LIMIT 1',\n        [agentId, version],\n      );\n      return rows[0] || null;\n    } catch (error) {\n      elizaLogger.error('Error getting prompt:', error);\n      throw error;\n    }\n  },\n\n  updatePrompt: async (\n    id: string,\n    settings: Partial<AgentPrompt>,\n  ): Promise<AgentPrompt> => {\n    try {\n      const setClauses = [];\n      const values: (string | boolean)[] = [id];\n      let paramCount = 1;\n\n      for (const [key, value] of Object.entries(settings)) {\n        if (value !== undefined) {\n          if (key === 'enabled') {\n            setClauses.push(`${key} = $${++paramCount}`);\n            values.push(value ? 'true' : 'false');\n          } else {\n            setClauses.push(`${key} = $${++paramCount}`);\n            values.push(value as string);\n          }\n        }\n      }\n\n      const { rows } = await db.query(\n        `UPDATE agent_prompts SET ${setClauses.join(', ')}, updated_at = NOW() WHERE id = $1 RETURNING *`,\n        values as string[],\n      );\n      return rows[0];\n    } catch (error) {\n      elizaLogger.error('Error updating prompt:', error);\n      throw error;\n    }\n  },\n};\n\nexport const streamQueries = {\n  getStreamSettings: async (agentId: string): Promise<StreamSetting> => {\n    try {\n      const { rows } = await db.query(\n        'SELECT * FROM stream_settings WHERE agent_id = $1',\n        [agentId],\n      );\n\n      if (rows.length === 0) {\n        const defaultSettings: StreamSetting = {\n          id: uuidv4(),\n          agentId,\n          enabled: true,\n          interval: 15,\n          lastRun: new Date(),\n        };\n        await streamQueries.saveStreamSettings(defaultSettings);\n        return defaultSettings;\n      }\n\n      return rows[0];\n    } catch (error) {\n      elizaLogger.error('Error fetching stream settings:', error);\n      throw error;\n    }\n  },\n\n  saveStreamSettings: async (settings: StreamSetting): Promise<void> => {\n    try {\n      await db.query(\n        'INSERT INTO stream_settings (id, agent_id, enabled, interval, last_run) VALUES ($1, $2, $3, $4, $5) ON CONFLICT (id) DO UPDATE SET enabled = $3, interval = $4, last_run = $5',\n        [\n          settings.id,\n          settings.agentId,\n          settings.enabled,\n          settings.interval,\n          settings.lastRun,\n        ],\n      );\n    } catch (error) {\n      elizaLogger.error('Error saving stream settings:', error);\n      throw error;\n    }\n  },\n\n  getRecentStreams: async (agentId: string, limit = 100) => {\n    try {\n      const { rows } = await db.query(\n        'SELECT * FROM consciousness_streams WHERE agent_id = $1 ORDER BY timestamp DESC LIMIT $2',\n        [agentId, limit],\n      );\n      return rows;\n    } catch (error) {\n      elizaLogger.error('Error fetching recent streams:', error);\n      throw error;\n    }\n  },\n\n  saveStream: async (\n    entry: ConsciousnessStream,\n    agentId?: string,\n  ): Promise<void> => {\n    const stream: ConsciousnessStream = {\n      id: uuidv4(),\n      agentId: agentId ?? 'davinci',\n      topic: entry.topic,\n      title: entry.title,\n      content: entry.content,\n      status: entry.status,\n      timestamp: new Date(),\n    };\n    try {\n      await db.query(\n        'INSERT INTO consciousness_streams (id, agent_id, topic, title, content, status, timestamp) VALUES ($1, $2, $3, $4, $5, $6, $7)',\n        [\n          stream.id,\n          stream.agentId,\n          stream.topic,\n          stream.title,\n          stream.content,\n          stream.status,\n          stream.timestamp,\n        ],\n      );\n    } catch (error) {\n      elizaLogger.error('Error saving stream entry:', error);\n      throw error;\n    }\n  },\n};\n\nexport const logQueries = {\n  saveLog: async (newLog: Log) => {\n    await db.query(\n      'INSERT INTO logs (id, user_id, body, type, room_id, created_at) VALUES ($1, $2, $3, $4, $5, $6)',\n      [\n        newLog.id,\n        newLog.userId,\n        newLog.body,\n        newLog.type,\n        newLog.roomId,\n        newLog.createdAt,\n      ],\n    );\n  },\n\n  createPromptLog: async (\n    logBody: Record<string, unknown>,\n    agentId: string,\n    promptType: string,\n  ) => {\n    const log: Log = {\n      id: stringToUuid(`prompt_log_${promptType}_${new Date().getTime()}`),\n      userId: agentId,\n      body: logBody,\n      type: 'prompt',\n      createdAt: new Date(),\n      roomId: `prompt_log_${promptType}`,\n    };\n    await db.query(\n      'INSERT INTO logs (id, user_id, body, type, room_id, created_at) VALUES ($1, $2, $3, $4, $5, $6)',\n      [log.id, log.userId, log.body, log.type, log.roomId, log.createdAt],\n    );\n  },\n};\n\nexport const userMentionQueries = {\n  upsertMentionRelationship: async (\n    sourceUsername: string,\n    targetUsername: string,\n    tweetId: string,\n    timestamp: Date,\n  ): Promise<void> => {\n    try {\n      // First try to update existing relationship\n      await db.query(\n        `INSERT INTO user_mentions_relationship \n         (source_username, target_username, first_mention_at, last_mention_at, tweet_ids)\n         VALUES ($1, $2, $3, $3, ARRAY[$4])\n         ON CONFLICT (source_username, target_username) \n         DO UPDATE SET\n           mention_count = user_mentions_relationship.mention_count + 1,\n           last_mention_at = $3,\n           tweet_ids = array_append(user_mentions_relationship.tweet_ids, $4),\n           relationship_strength = LEAST(1.0, user_mentions_relationship.relationship_strength + 0.1)`,\n        [sourceUsername, targetUsername, timestamp, tweetId],\n      );\n\n      // Check if there's a reverse relationship and update mutual flag\n      const reverseResult = await db.query(\n        `SELECT id FROM user_mentions_relationship \n         WHERE source_username = $1 AND target_username = $2`,\n        [targetUsername, sourceUsername],\n      );\n\n      if (reverseResult.rows.length > 0) {\n        // Update both relationships to be mutual\n        await db.query(\n          `UPDATE user_mentions_relationship \n           SET is_mutual = true \n           WHERE (source_username = $1 AND target_username = $2)\n           OR (source_username = $2 AND target_username = $1)`,\n          [sourceUsername, targetUsername],\n        );\n      }\n    } catch (error) {\n      elizaLogger.error('Error upserting mention relationship:', error);\n      throw error;\n    }\n  },\n\n  getMutualMentions: async (\n    username: string,\n  ): Promise<Array<{ username: string; strength: number }>> => {\n    try {\n      const result = await db.query(\n        `SELECT target_username as username, relationship_strength as strength\n         FROM user_mentions_relationship\n         WHERE source_username = $1 AND is_mutual = true\n         ORDER BY relationship_strength DESC`,\n        [username],\n      );\n      return result.rows;\n    } catch (error) {\n      elizaLogger.error('Error getting mutual mentions:', error);\n      throw error;\n    }\n  },\n\n  getStrongRelationships: async (\n    minStrength = 0.5,\n  ): Promise<\n    Array<{ sourceUsername: string; targetUsername: string; strength: number }>\n  > => {\n    try {\n      const result = await db.query(\n        `SELECT source_username, target_username, relationship_strength as strength\n         FROM user_mentions_relationship\n         WHERE relationship_strength >= $1\n         ORDER BY relationship_strength DESC`,\n        [minStrength],\n      );\n      return result.rows;\n    } catch (error) {\n      elizaLogger.error('Error getting strong relationships:', error);\n      throw error;\n    }\n  },\n\n  decayRelationships: async (): Promise<void> => {\n    try {\n      // Decay relationships that haven't been updated in 30 days\n      await db.query(\n        `UPDATE user_mentions_relationship\n         SET relationship_strength = GREATEST(0.1, relationship_strength * 0.9)\n         WHERE last_mention_at < NOW() - INTERVAL '30 days'`,\n      );\n    } catch (error) {\n      elizaLogger.error('Error decaying relationships:', error);\n      throw error;\n    }\n  },\n};\n\nexport const twitterConfigQueries = {\n  async getConfig(username: string): Promise<TwitterConfig | null> {\n    try {\n      const result = await db.query(\n        'SELECT * FROM twitter_configs WHERE username = $1',\n        [username],\n      );\n\n      if (result.rows.length === 0) {\n        // Try to get default config\n        const defaultResult = await db.query(\n          'SELECT * FROM twitter_configs WHERE username = $1',\n          ['default'],\n        );\n        if (defaultResult.rows.length === 0) {\n          return null;\n        }\n        const row = defaultResult.rows[0];\n        return twitterConfigQueries.mapRowToConfig(row);\n      }\n\n      const row = result.rows[0];\n      return twitterConfigQueries.mapRowToConfig(row);\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterConfigQueries] Error fetching config:',\n        error instanceof Error ? error.message : String(error),\n      );\n      throw error;\n    }\n  },\n\n  async updateConfig(\n    username: string,\n    config: Partial<TwitterConfig>,\n  ): Promise<void> {\n    try {\n      const setClauses: string[] = [];\n      const values: (string | number | boolean | string[])[] = [username];\n      let paramCount = 1;\n\n      if (config.targetAccounts) {\n        setClauses.push(`target_accounts = $${++paramCount}`);\n        values.push(config.targetAccounts);\n      }\n\n      if (config.search) {\n        if (config.search.maxRetries !== undefined) {\n          setClauses.push(`max_retries = $${++paramCount}`);\n          values.push(config.search.maxRetries);\n        }\n        if (config.search.retryDelay !== undefined) {\n          setClauses.push(`retry_delay = $${++paramCount}`);\n          values.push(config.search.retryDelay);\n        }\n        if (config.search.searchInterval) {\n          if (config.search.searchInterval.min !== undefined) {\n            setClauses.push(`search_interval_min = $${++paramCount}`);\n            values.push(config.search.searchInterval.min);\n          }\n          if (config.search.searchInterval.max !== undefined) {\n            setClauses.push(`search_interval_max = $${++paramCount}`);\n            values.push(config.search.searchInterval.max);\n          }\n        }\n        if (config.search.tweetLimits) {\n          if (config.search.tweetLimits.targetAccounts !== undefined) {\n            setClauses.push(`tweet_limit_target_accounts = $${++paramCount}`);\n            values.push(config.search.tweetLimits.targetAccounts);\n          }\n          if (config.search.tweetLimits.qualityTweetsPerAccount !== undefined) {\n            setClauses.push(\n              `tweet_limit_quality_per_account = $${++paramCount}`,\n            );\n            values.push(config.search.tweetLimits.qualityTweetsPerAccount);\n          }\n          if (config.search.tweetLimits.accountsToProcess !== undefined) {\n            setClauses.push(\n              `tweet_limit_accounts_to_process = $${++paramCount}`,\n            );\n            values.push(config.search.tweetLimits.accountsToProcess);\n          }\n          if (config.search.tweetLimits.searchResults !== undefined) {\n            setClauses.push(`tweet_limit_search_results = $${++paramCount}`);\n            values.push(config.search.tweetLimits.searchResults);\n          }\n        }\n        if (config.search.engagementThresholds) {\n          if (config.search.engagementThresholds.minLikes !== undefined) {\n            setClauses.push(`min_likes = $${++paramCount}`);\n            values.push(config.search.engagementThresholds.minLikes);\n          }\n          if (config.search.engagementThresholds.minRetweets !== undefined) {\n            setClauses.push(`min_retweets = $${++paramCount}`);\n            values.push(config.search.engagementThresholds.minRetweets);\n          }\n          if (config.search.engagementThresholds.minReplies !== undefined) {\n            setClauses.push(`min_replies = $${++paramCount}`);\n            values.push(config.search.engagementThresholds.minReplies);\n          }\n        }\n        if (config.search.parameters) {\n          if (config.search.parameters.excludeReplies !== undefined) {\n            setClauses.push(`exclude_replies = $${++paramCount}`);\n            values.push(config.search.parameters.excludeReplies);\n          }\n          if (config.search.parameters.excludeRetweets !== undefined) {\n            setClauses.push(`exclude_retweets = $${++paramCount}`);\n            values.push(config.search.parameters.excludeRetweets);\n          }\n          if (config.search.parameters.filterLevel !== undefined) {\n            setClauses.push(`filter_level = $${++paramCount}`);\n            values.push(config.search.parameters.filterLevel);\n          }\n        }\n      }\n\n      if (setClauses.length === 0) {\n        return;\n      }\n\n      const query = `\n        INSERT INTO twitter_configs (username, ${setClauses\n          .map((_, i) => Object.keys(config)[i])\n          .join(', ')})\n        VALUES ($1, ${setClauses.map((_, i) => `$${i + 2}`).join(', ')})\n        ON CONFLICT (username) \n        DO UPDATE SET ${setClauses.join(', ')}, updated_at = CURRENT_TIMESTAMP\n      `;\n\n      await db.query(query, values);\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterConfigQueries] Error updating config:',\n        error instanceof Error ? error.message : String(error),\n      );\n      throw error;\n    }\n  },\n\n  mapRowToConfig(row: TwitterConfigRow): TwitterConfig {\n    return {\n      targetAccounts: row.target_accounts,\n      search: {\n        maxRetries: row.max_retries,\n        retryDelay: row.retry_delay,\n        searchInterval: {\n          min: row.search_interval_min,\n          max: row.search_interval_max,\n        },\n        tweetLimits: {\n          targetAccounts: row.tweet_limit_target_accounts,\n          qualityTweetsPerAccount: row.tweet_limit_quality_per_account,\n          accountsToProcess: row.tweet_limit_accounts_to_process,\n          searchResults: row.tweet_limit_search_results,\n        },\n        engagementThresholds: {\n          minLikes: row.min_likes,\n          minRetweets: row.min_retweets,\n          minReplies: row.min_replies,\n        },\n        parameters: {\n          excludeReplies: Boolean(row.exclude_replies),\n          excludeRetweets: Boolean(row.exclude_retweets),\n          filterLevel: row.filter_level,\n        },\n      },\n    };\n  },\n};\n\nexport const accountTopicQueries = {\n  /**\n   * Upserts a relationship between an account and a topic, incrementing the mention count\n   */\n  async upsertAccountTopic(\n    username: string,\n    topic: string,\n    client?: PoolClient,\n  ): Promise<void> {\n    const query = `\n      INSERT INTO account_topics (\n        username,\n        topic,\n        mention_count,\n        first_seen_at,\n        last_seen_at\n      ) VALUES ($1, $2, 1, NOW(), NOW())\n      ON CONFLICT (username, topic) \n      DO UPDATE SET\n        mention_count = account_topics.mention_count + 1,\n        last_seen_at = NOW()\n    `;\n\n    try {\n      return withClient(client || null, async (c) => {\n        await c.query(query, [username, topic]);\n      });\n    } catch (error) {\n      elizaLogger.error('Error upserting account topic:', {\n        error: error instanceof Error ? error.message : String(error),\n        username,\n        topic,\n      });\n      throw error;\n    }\n  },\n\n  /**\n   * Gets all topics associated with an account\n   */\n  async getAccountTopics(username: string): Promise<AccountTopic[]> {\n    const query = `\n      SELECT \n        topic,\n        mention_count as \"mentionCount\",\n        first_seen_at as \"firstSeenAt\",\n        last_seen_at as \"lastSeenAt\"\n      FROM account_topics\n      WHERE username = $1\n      ORDER BY mention_count DESC\n    `;\n\n    try {\n      const result = await db.query<AccountTopic>(query, [username]);\n      return result.rows;\n    } catch (error) {\n      elizaLogger.error('Error getting account topics:', {\n        error: error instanceof Error ? error.message : String(error),\n        username,\n      });\n      return [];\n    }\n  },\n\n  /**\n   * Gets all accounts associated with a topic\n   */\n  async getTopicAccounts(topic: string): Promise<AccountTopic[]> {\n    const query = `\n      SELECT \n        username,\n        mention_count as \"mentionCount\",\n        first_seen_at as \"firstSeenAt\",\n        last_seen_at as \"lastSeenAt\"\n      FROM account_topics\n      WHERE topic = $1\n      ORDER BY mention_count DESC\n    `;\n\n    try {\n      const result = await db.query<AccountTopic>(query, [topic]);\n      return result.rows;\n    } catch (error) {\n      elizaLogger.error('Error getting topic accounts:', {\n        error: error instanceof Error ? error.message : String(error),\n        topic,\n      });\n      return [];\n    }\n  },\n};\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import { randomFillSync } from 'crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n","import { randomUUID } from 'crypto';\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || rng)();\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import { db } from '@/extensions/src/db';\nimport type { MarketAnalysis } from '@/types/injective/technical-analysis';\nimport { type IAgentRuntime, elizaLogger } from '@elizaos/core';\n\nexport class DatabaseService {\n  private readonly runtime: IAgentRuntime;\n\n  constructor(runtime: IAgentRuntime) {\n    this.runtime = runtime;\n  }\n\n  async storeMarketAnalysis(analyses: MarketAnalysis[]): Promise<void> {\n    try {\n      elizaLogger.info('[DatabaseService] Storing market analysis data');\n\n      // Store each market analysis in the database\n      for (const analysis of analyses) {\n        await db.query(\n          `INSERT INTO market_analysis (\n            market_id,\n            ticker,\n            technical_analysis,\n            order_book,\n            liquidity,\n            created_at,\n            timeframe\n          ) VALUES ($1, $2, $3, $4, $5, $6, $7)`,\n          [\n            analysis.marketId,\n            analysis.ticker,\n            JSON.stringify(analysis.technicalAnalysis),\n            JSON.stringify(analysis.orderBook),\n            JSON.stringify(analysis.liquidity),\n            new Date().toISOString(),\n            analysis.timeframe,\n          ],\n        );\n      }\n\n      elizaLogger.info(\n        '[DatabaseService] Market analysis data stored successfully',\n      );\n    } catch (error) {\n      elizaLogger.error(\n        '[DatabaseService] Error storing market analysis:',\n        error,\n      );\n      throw error;\n    }\n  }\n}\n","import { z } from 'zod';\n\nexport const MarketHistoryItemSchema = z.object({\n  timestamp: z.number(),\n  open: z.string(),\n  high: z.string(),\n  low: z.string(),\n  close: z.string(),\n  volume: z.string(),\n});\n\nexport const MarketHistoryResponseSchema = z.object({\n  marketId: z.string(),\n  history: z.array(MarketHistoryItemSchema),\n});\n\nexport type MarketHistoryItem = z.infer<typeof MarketHistoryItemSchema>;\nexport type MarketHistoryResponse = z.infer<typeof MarketHistoryResponseSchema>;\n\nexport const TimeResolution = {\n  Minute: '1',\n  FiveMinutes: '5',\n  FifteenMinutes: '15',\n  Hour: '60',\n  Day: '1440', // 24 * 60 minutes\n  Week: '10080', // 7 * 24 * 60 minutes\n} as const;\n\nexport type TimeResolution =\n  (typeof TimeResolution)[keyof typeof TimeResolution];\n","import {\n  type MarketHistoryItem,\n  type MarketHistoryResponse,\n  TimeResolution,\n} from '@/types/injective/market-history';\nimport { Network, getNetworkEndpoints } from '@injectivelabs/networks';\nimport {\n  type AllChronosMarketHistory,\n  IndexerGrpcSpotApi,\n  IndexerRestMarketChronosApi,\n} from '@injectivelabs/sdk-ts';\n\n/**\n * Service for interacting with the Injective Protocol's market data\n */\nexport class InjectiveService {\n  private readonly marketChronosApi: IndexerRestMarketChronosApi;\n  private readonly spotApi: IndexerGrpcSpotApi;\n\n  constructor(network: Network = Network.Mainnet) {\n    const endpoints = getNetworkEndpoints(network);\n    this.marketChronosApi = new IndexerRestMarketChronosApi(\n      `${endpoints.chronos}/api/chronos/v1/market`,\n    );\n    this.spotApi = new IndexerGrpcSpotApi(endpoints.indexer);\n  }\n\n  /**\n   * Fetches all available spot markets\n   * @returns Promise containing market data\n   */\n  async getMarkets() {\n    try {\n      const markets = await this.spotApi.fetchMarkets();\n      return markets;\n    } catch (error) {\n      console.error('Failed to fetch markets:', error);\n      throw new Error('Failed to fetch markets');\n    }\n  }\n\n  /**\n   * Fetches market history for specified markets\n   * @param marketIds Array of market IDs to fetch history for\n   * @param resolution Time resolution for the history data\n   * @param countback Number of historical data points to fetch (in hours)\n   * @returns Promise containing market history data\n   */\n  async getMarketsHistory(\n    marketIds: string[],\n    resolution: TimeResolution = TimeResolution.Hour,\n    countback = 24,\n  ): Promise<MarketHistoryResponse[]> {\n    try {\n      const marketsHistory = await this.marketChronosApi.fetchMarketsHistory({\n        marketIds,\n        resolution,\n        countback,\n      });\n\n      return marketIds.map((marketId) => {\n        const marketHistory = (\n          marketsHistory as AllChronosMarketHistory[]\n        ).find((item) => item.marketID === marketId);\n\n        if (!marketHistory) {\n          return { marketId, history: [] };\n        }\n\n        const history: MarketHistoryItem[] = marketHistory.t.map(\n          (timestamp, index) => ({\n            timestamp,\n            open: marketHistory.o[index].toString(),\n            high: marketHistory.h[index].toString(),\n            low: marketHistory.l[index].toString(),\n            close: marketHistory.c[index].toString(),\n            volume: marketHistory.v[index].toString(),\n          }),\n        );\n\n        return { marketId, history };\n      });\n    } catch (error) {\n      console.error('Failed to fetch markets history:', error);\n      throw error;\n    }\n  }\n}\n\n// Export a singleton instance\nexport const injectiveService = new InjectiveService();\n","import type { TimeResolution } from '@/types/injective/market-history';\nimport type {\n  LiquidityAnalysis,\n  MarketAnalysis,\n  OrderBookAnalysis,\n  TechnicalAnalysis,\n} from '@/types/injective/technical-analysis';\nimport { Network, getNetworkEndpoints } from '@injectivelabs/networks';\nimport {\n  type DerivativeOrderHistory,\n  type DerivativeTrade,\n  IndexerGrpcDerivativesApi,\n  IndexerGrpcSpotApi,\n  IndexerRestMarketChronosApi,\n  IndexerRestSpotChronosApi,\n  type OrderbookWithSequence,\n  type PriceLevel,\n  type SpotOrderHistory,\n  type SpotTrade,\n} from '@injectivelabs/sdk-ts';\nimport type { OrderSide } from '@injectivelabs/ts-types';\n\nexport interface TimeframeConfig {\n  type: 'spot' | 'derivatives';\n  resolution: TimeResolution;\n  countback: number;\n  limit: number;\n  sma: number;\n  ema: number;\n  rsi: number;\n  bollinger: {\n    period: number;\n    stdDev: number;\n  };\n  macd: {\n    fast: number;\n    slow: number;\n    signal: number;\n  };\n  atr: number;\n  stochastic: {\n    k: number;\n    d: number;\n  };\n  adx: number;\n}\n\n/**\n * Service for fetching market data useful for technical analysis\n */\nexport class MarketAnalysisService {\n  private readonly spotApi: IndexerGrpcSpotApi;\n  private readonly derivativesApi: IndexerGrpcDerivativesApi;\n  private readonly marketChronosApi: IndexerRestMarketChronosApi;\n  private readonly spotChronosApi: IndexerRestSpotChronosApi;\n\n  constructor(network: Network = Network.Mainnet) {\n    const endpoints = getNetworkEndpoints(network);\n    this.spotApi = new IndexerGrpcSpotApi(endpoints.indexer);\n    this.derivativesApi = new IndexerGrpcDerivativesApi(endpoints.indexer);\n    this.marketChronosApi = new IndexerRestMarketChronosApi(\n      `${endpoints.chronos}/api/chronos/v1/market`,\n    );\n    this.spotChronosApi = new IndexerRestSpotChronosApi(\n      `${endpoints.chronos}/api/chronos/v1/spot`,\n    );\n  }\n\n  /**\n   * Fetch order book data for a spot market\n   * Useful for: Market depth analysis, liquidity analysis, order book imbalance\n   */\n  async getSpotOrderbook(marketId: string): Promise<OrderbookWithSequence> {\n    const response = await this.spotApi.fetchOrderbookV2(marketId);\n    return {\n      sequence: response.sequence,\n      buys: response.buys,\n      sells: response.sells,\n    };\n  }\n\n  /**\n   * Fetch order book data for a derivatives market\n   * Useful for: Futures market depth, derivatives liquidity analysis\n   */\n  async getDerivativesOrderbook(\n    marketId: string,\n  ): Promise<OrderbookWithSequence> {\n    const response = await this.derivativesApi.fetchOrderbookV2(marketId);\n    return {\n      sequence: response.sequence,\n      buys: response.buys,\n      sells: response.sells,\n    };\n  }\n\n  /**\n   * Fetch recent trades for a spot market\n   * Useful for: Volume analysis, price action study, trade flow\n   */\n  async getSpotTrades(marketId: string, limit = 100): Promise<SpotTrade[]> {\n    const response = await this.spotApi.fetchTrades({\n      marketId,\n      pagination: { limit },\n    });\n    return response.trades;\n  }\n\n  /**\n   * Fetch recent trades for a derivatives market\n   * Useful for: Futures volume analysis, derivatives trade flow\n   */\n  async getDerivativesTrades(\n    marketId: string,\n    limit = 100,\n  ): Promise<DerivativeTrade[]> {\n    const response = await this.derivativesApi.fetchTrades({\n      marketId,\n      pagination: { limit },\n    });\n    return response.trades;\n  }\n\n  /**\n   * Fetch order history for a spot market\n   * Useful for: Historical order flow analysis, market participant behavior\n   */\n  async getSpotOrderHistory(\n    marketId: string,\n    subaccountId?: string,\n    orderTypes?: OrderSide[],\n  ): Promise<SpotOrderHistory[]> {\n    const response = await this.spotApi.fetchOrderHistory({\n      marketId,\n      subaccountId,\n      orderTypes,\n    });\n    return response.orderHistory;\n  }\n\n  /**\n   * Fetch order history for a derivatives market\n   * Useful for: Futures order flow analysis, derivatives trading patterns\n   */\n  async getDerivativesOrderHistory(\n    marketId: string,\n    subaccountId?: string,\n    orderTypes?: OrderSide[],\n  ): Promise<DerivativeOrderHistory[]> {\n    const response = await this.derivativesApi.fetchOrderHistory({\n      marketId,\n      subaccountId,\n      orderTypes,\n    });\n    return response.orderHistory;\n  }\n\n  /**\n   * Fetch aggregated market data\n   * Useful for: OHLCV data, candlestick analysis, technical indicators\n   */\n  async getMarketsHistory(\n    marketIds: string[],\n    resolution: string,\n    countback: number,\n  ) {\n    const response = await this.marketChronosApi.fetchMarketsHistory({\n      marketIds,\n      resolution,\n      countback,\n    });\n\n    return marketIds.map((marketId) => {\n      const marketHistory = response.find((item) => item.marketID === marketId);\n\n      if (!marketHistory) {\n        return { marketId, history: [] };\n      }\n\n      const history = marketHistory.t.map((timestamp, index) => ({\n        timestamp,\n        open: marketHistory.o[index].toString(),\n        high: marketHistory.h[index].toString(),\n        low: marketHistory.l[index].toString(),\n        close: marketHistory.c[index].toString(),\n        volume: marketHistory.v[index].toString(),\n      }));\n\n      return { marketId, history };\n    });\n  }\n\n  /**\n   * Get order book snapshot\n   * Useful for: Real-time market depth analysis, liquidity monitoring\n   */\n  async getOrderbookSnapshot(\n    marketId: string,\n    type: 'spot' | 'derivatives' = 'spot',\n  ) {\n    const api = type === 'spot' ? this.spotApi : this.derivativesApi;\n    const response = await api.fetchOrderbookV2(marketId);\n    return {\n      buys: response.buys as PriceLevel[],\n      sells: response.sells as PriceLevel[],\n      sequence: response.sequence,\n    };\n  }\n\n  /**\n   * Fetch funding rates (derivatives only)\n   * Useful for: Funding rate analysis, carry trade opportunities\n   */\n  async getFundingRates(marketId: string) {\n    return await this.derivativesApi.fetchFundingRates({ marketId });\n  }\n\n  /**\n   * Fetch positions for a derivatives market\n   * Useful for: Open interest analysis, market sentiment\n   */\n  async getPositions(marketId: string, subaccountId?: string) {\n    return await this.derivativesApi.fetchPositions({ marketId, subaccountId });\n  }\n\n  // Technical Analysis Helper Functions\n  calculateEMA(prices: number[], period: number): number {\n    const k = 2 / (period + 1);\n    let ema = prices[0];\n\n    for (let i = 1; i < prices.length; i++) {\n      ema = prices[i] * k + ema * (1 - k);\n    }\n\n    return ema;\n  }\n\n  calculateRSI(prices: number[], period = 14): number {\n    const changes = prices.slice(1).map((price, i) => price - prices[i]);\n    const gains = changes.map((change) => {\n      if (change > 0) {\n        return change;\n      }\n      return 0;\n    });\n    const losses = changes.map((change) => {\n      if (change < 0) {\n        return -change;\n      }\n      return 0;\n    });\n\n    const avgGain = gains.slice(-period).reduce((a, b) => a + b, 0) / period;\n    const avgLoss = losses.slice(-period).reduce((a, b) => a + b, 0) / period;\n\n    if (avgLoss === 0) {\n      return 100;\n    }\n    const rs = avgGain / avgLoss;\n    return 100 - 100 / (1 + rs);\n  }\n\n  calculateATR(\n    highs: number[],\n    lows: number[],\n    closes: number[],\n    period = 14,\n  ): number {\n    const trs = highs.map((high, i) => {\n      if (i === 0) {\n        return high - lows[i];\n      }\n      const prevClose = closes[i - 1];\n      const tr1 = high - lows[i];\n      const tr2 = Math.abs(high - prevClose);\n      const tr3 = Math.abs(lows[i] - prevClose);\n      return Math.max(tr1, tr2, tr3);\n    });\n\n    return trs.slice(-period).reduce((a, b) => a + b, 0) / period;\n  }\n\n  calculateStochastic(\n    closes: number[],\n    highs: number[],\n    lows: number[],\n    kPeriod = 14,\n    dPeriod = 3,\n  ): { k: number; d: number } {\n    const lowestLow = Math.min(...lows.slice(-kPeriod));\n    const highestHigh = Math.max(...highs.slice(-kPeriod));\n    const currentClose = closes[closes.length - 1];\n\n    const k = ((currentClose - lowestLow) / (highestHigh - lowestLow)) * 100;\n    const d = this.calculateSMA(\n      closes\n        .slice(-dPeriod)\n        .map(\n          (close) => ((close - lowestLow) / (highestHigh - lowestLow)) * 100,\n        ),\n      dPeriod,\n    );\n\n    return { k, d };\n  }\n\n  calculateADX(\n    highs: number[],\n    lows: number[],\n    closes: number[],\n    period = 14,\n  ): number {\n    // Calculate +DM and -DM\n    const plusDM = highs.slice(1).map((high, i) => {\n      const diff = high - highs[i];\n      return diff > 0 && diff > lows[i + 1] - lows[i] ? diff : 0;\n    });\n\n    const minusDM = lows.slice(1).map((low, i) => {\n      const diff = lows[i] - low;\n      return diff > 0 && diff > highs[i + 1] - highs[i] ? diff : 0;\n    });\n\n    // Calculate TR\n    const tr = highs.slice(1).map((high, i) => {\n      const prevClose = closes[i];\n      return Math.max(\n        high - lows[i + 1],\n        Math.abs(high - prevClose),\n        Math.abs(lows[i + 1] - prevClose),\n      );\n    });\n\n    // Calculate smoothed averages\n    const smoothedTR = this.calculateEMA(tr, period);\n    const smoothedPlusDM = this.calculateEMA(plusDM, period);\n    const smoothedMinusDM = this.calculateEMA(minusDM, period);\n\n    // Calculate +DI and -DI\n    const plusDI = (smoothedPlusDM / smoothedTR) * 100;\n    const minusDI = (smoothedMinusDM / smoothedTR) * 100;\n\n    // Calculate DX and ADX\n    const dx = Math.abs((plusDI - minusDI) / (plusDI + minusDI)) * 100;\n    return this.calculateEMA([...Array(period - 1).fill(dx), dx], period);\n  }\n\n  calculateSMA(prices: number[], period: number): number {\n    return prices.slice(-period).reduce((a, b) => a + b, 0) / period;\n  }\n\n  calculateBollingerBands(\n    prices: number[],\n    period = 20,\n    stdDev = 2,\n  ): {\n    upper: number;\n    middle: number;\n    lower: number;\n  } {\n    const sma = prices.slice(-period).reduce((a, b) => a + b, 0) / period;\n    const squaredDiffs = prices\n      .slice(-period)\n      .map((price) => (price - sma) ** 2);\n    const standardDeviation = Math.sqrt(\n      squaredDiffs.reduce((a, b) => a + b, 0) / period,\n    );\n\n    return {\n      upper: sma + standardDeviation * stdDev,\n      middle: sma,\n      lower: sma - standardDeviation * stdDev,\n    };\n  }\n\n  calculateMACD(\n    prices: number[],\n    fastPeriod = 12,\n    slowPeriod = 26,\n    signalPeriod = 9,\n  ): {\n    macdLine: number;\n    signalLine: number;\n    histogram: number;\n  } {\n    const fastEMA = this.calculateEMA(prices, fastPeriod);\n    const slowEMA = this.calculateEMA(prices, slowPeriod);\n    const macdLine = fastEMA - slowEMA;\n    const signalLine = this.calculateEMA(\n      [...Array(signalPeriod - 1).fill(macdLine), macdLine],\n      signalPeriod,\n    );\n    const histogram = macdLine - signalLine;\n\n    return {\n      macdLine,\n      signalLine,\n      histogram,\n    };\n  }\n\n  calculateTechnicalAnalysis(\n    marketHistory: {\n      history: Array<{\n        timestamp: number;\n        open: string;\n        high: string;\n        low: string;\n        close: string;\n        volume: string;\n      }>;\n    },\n    config: TimeframeConfig,\n  ): TechnicalAnalysis | null {\n    if (!marketHistory?.history?.length) {\n      return null;\n    }\n\n    const lastCandle = marketHistory.history[marketHistory.history.length - 1];\n    const closes = marketHistory.history.map((candle) => Number(candle.close));\n    const highs = marketHistory.history.map((candle) => Number(candle.high));\n    const lows = marketHistory.history.map((candle) => Number(candle.low));\n    const volumes = marketHistory.history.map((candle) =>\n      Number(candle.volume),\n    );\n\n    // Calculate all indicators using config periods\n    const sma = this.calculateSMA(closes, config.sma);\n    const ema = this.calculateEMA(closes, config.ema);\n    const vwap =\n      marketHistory.history.reduce((acc, candle) => {\n        return acc + Number(candle.close) * Number(candle.volume);\n      }, 0) / volumes.reduce((a, b) => a + b, 0);\n    const rsi = this.calculateRSI(closes, config.rsi);\n    const bollingerBands = this.calculateBollingerBands(\n      closes,\n      config.bollinger.period,\n      config.bollinger.stdDev,\n    );\n    const macd = this.calculateMACD(\n      closes,\n      config.macd.fast,\n      config.macd.slow,\n      config.macd.signal,\n    );\n    const atr = this.calculateATR(highs, lows, closes, config.atr);\n    const stochastic = this.calculateStochastic(\n      closes,\n      highs,\n      lows,\n      config.stochastic.k,\n      config.stochastic.d,\n    );\n    const adx = this.calculateADX(highs, lows, closes, config.adx);\n\n    return {\n      latestCandle: {\n        timestamp: lastCandle.timestamp * 1000,\n        open: lastCandle.open,\n        high: lastCandle.high,\n        low: lastCandle.low,\n        close: lastCandle.close,\n        volume: lastCandle.volume,\n      },\n      indicators: {\n        sma24h: Number(sma.toFixed(4)),\n        ema24h: Number(ema.toFixed(4)),\n        vwap24h: Number(vwap.toFixed(4)),\n        rsi14: Number(rsi.toFixed(4)),\n        bollingerBands: {\n          upper: Number(bollingerBands.upper.toFixed(4)),\n          middle: Number(bollingerBands.middle.toFixed(4)),\n          lower: Number(bollingerBands.lower.toFixed(4)),\n        },\n        macd: {\n          macdLine: Number(macd.macdLine.toFixed(4)),\n          signalLine: Number(macd.signalLine.toFixed(4)),\n          histogram: Number(macd.histogram.toFixed(4)),\n        },\n        atr14: Number(atr.toFixed(4)),\n        stochastic: {\n          k: Number(stochastic.k.toFixed(4)),\n          d: Number(stochastic.d.toFixed(4)),\n        },\n        adx14: Number(adx.toFixed(4)),\n      },\n    };\n  }\n\n  /**\n   * Analyze order book depth and liquidity\n   * Useful for: Market depth analysis, liquidity analysis, order book imbalance\n   */\n  async analyzeOrderBook(\n    marketId: string,\n    type: 'spot' | 'derivatives' = 'spot',\n    depth = 20,\n  ): Promise<OrderBookAnalysis> {\n    const orderbook = await this.getOrderbookSnapshot(marketId, type);\n    const bids = orderbook.buys.slice(0, depth);\n    const asks = orderbook.sells.slice(0, depth);\n\n    // Get market info to get decimals\n    const markets = await (type === 'spot'\n      ? this.spotApi.fetchMarkets()\n      : this.derivativesApi.fetchMarkets());\n    const market = markets.find((m) => m.marketId === marketId);\n    if (!market) {\n      throw new Error(`Market ${marketId} not found`);\n    }\n\n    // Convert quantities to human readable amounts\n    const baseDecimals =\n      type === 'spot' && 'baseToken' in market ? market.baseToken.decimals : 18;\n    const convertToHumanReadable = (quantity: string) => {\n      return Number(quantity) / 10 ** baseDecimals;\n    };\n\n    // Calculate spread\n    const bestBid = Number(bids[0]?.price || 0);\n    const bestAsk = Number(asks[0]?.price || 0);\n    const spread = bestAsk - bestBid;\n    const spreadPercentage = (spread / bestBid) * 100;\n\n    // Calculate depth (convert to human readable amounts)\n    const bidDepth = bids.reduce(\n      (sum, bid) => sum + convertToHumanReadable(bid.quantity),\n      0,\n    );\n    const askDepth = asks.reduce(\n      (sum, ask) => sum + convertToHumanReadable(ask.quantity),\n      0,\n    );\n\n    // Calculate density (orders per price level)\n    const bidDensity =\n      bids.length / (bestBid - Number(bids[bids.length - 1]?.price || bestBid));\n    const askDensity =\n      asks.length / (Number(asks[asks.length - 1]?.price || bestAsk) - bestAsk);\n\n    return {\n      spread,\n      spreadPercentage,\n      bidDepth,\n      askDepth,\n      bidDensity,\n      askDensity,\n      topBids: bids.map((bid) => ({\n        price: bid.price,\n        quantity: convertToHumanReadable(bid.quantity).toString(),\n      })),\n      topAsks: asks.map((ask) => ({\n        price: ask.price,\n        quantity: convertToHumanReadable(ask.quantity).toString(),\n      })),\n    };\n  }\n\n  /**\n   * Analyze liquidity pool metrics (for AMMs)\n   * Useful for: TVL analysis, pool composition, slippage analysis\n   */\n  async analyzeLiquidityPool(marketId: string): Promise<LiquidityAnalysis> {\n    try {\n      // Get market info to get token symbols\n      const markets = await this.spotApi.fetchMarkets();\n      const market = markets.find((m) => m.marketId === marketId);\n      if (!market) {\n        throw new Error(`Market ${marketId} not found`);\n      }\n\n      // Fetch market summary from Chronos API\n      const marketSummary =\n        await this.spotChronosApi.fetchMarketSummary(marketId);\n      console.log(\n        'Market Summary Response:',\n        JSON.stringify(marketSummary, null, 2),\n      );\n\n      // Calculate TVL using volume\n      const tvl = Number(marketSummary.volume);\n\n      // Calculate pool composition using price and volume data\n      const price = Number(marketSummary.price);\n      const volume = Number(marketSummary.volume);\n\n      // For simplicity, we'll assume equal distribution of tokens\n      // In a real implementation, you would fetch actual pool token amounts\n      const token1Amount = volume / 2;\n      const token2Amount = (volume / 2) * price;\n\n      const poolComposition = {\n        token1: {\n          symbol: market.baseToken.symbol,\n          amount: token1Amount,\n          percentage: 50,\n        },\n        token2: {\n          symbol: market.quoteToken.symbol,\n          amount: token2Amount,\n          percentage: 50,\n        },\n      };\n\n      // Calculate slippage curve based on current price\n      const currentPrice = Number(marketSummary.price);\n\n      const slippage = [0.1, 0.5, 1, 2, 5].map((percentage) => {\n        const slippagePrice = currentPrice * (1 + percentage / 100);\n        return {\n          price: slippagePrice,\n          slippagePercentage: percentage,\n        };\n      });\n\n      return {\n        tvl,\n        poolComposition,\n        slippage,\n      };\n    } catch (error) {\n      console.error('Failed to fetch liquidity pool data:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Analyze top N markets by volume\n   * @param config Analysis configuration\n   * @returns Promise containing market analysis results\n   */\n  async analyzeTopMarkets(config: TimeframeConfig): Promise<MarketAnalysis[]> {\n    try {\n      console.log(`Fetching available ${config.type} markets...`);\n      const markets = await (config.type === 'spot'\n        ? this.spotApi.fetchMarkets()\n        : this.derivativesApi.fetchMarkets());\n\n      // Get market summaries to sort by volume\n      const marketSummaries = await Promise.all(\n        markets.map(async (market) => {\n          try {\n            let volume = 0;\n            if (config.type === 'spot') {\n              const summary = await this.spotChronosApi.fetchMarketSummary(\n                market.marketId,\n              );\n              volume = Number(summary.volume || 0);\n            } else {\n              // For derivatives, use recent trades to estimate volume\n              const trades = await this.getDerivativesTrades(\n                market.marketId,\n                100,\n              );\n              volume = trades.length > 0 ? 1000000 : 0; // Assign higher volume to active markets\n            }\n            return {\n              market,\n              volume,\n            };\n          } catch (error) {\n            console.log(`Failed to fetch summary for ${market.ticker}:`, error);\n            return {\n              market,\n              volume: 0,\n            };\n          }\n        }),\n      );\n\n      // Sort by volume and take top N\n      const selectedMarkets = marketSummaries\n        .sort((a, b) => b.volume - a.volume)\n        .slice(0, config.limit)\n        .map(({ market }) => market);\n\n      console.log(`Selected top ${config.limit} markets by volume:`);\n      for (const market of selectedMarkets) {\n        console.log(\n          `  ${market.ticker}: ${marketSummaries.find((m) => m.market.marketId === market.marketId)?.volume || 0} volume`,\n        );\n      }\n\n      return this.analyzeMarkets(\n        config,\n        selectedMarkets.map((m) => m.marketId),\n      );\n    } catch (error) {\n      console.error('Error analyzing top markets:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Analyze specific markets by their IDs\n   * @param config Analysis configuration\n   * @param marketIds Array of market IDs to analyze\n   * @returns Promise containing market analysis results\n   */\n  async analyzeMarkets(\n    config: TimeframeConfig,\n    marketIds: string[],\n  ): Promise<MarketAnalysis[]> {\n    try {\n      // Get all markets to find the ones we want to analyze\n      const markets = await (config.type === 'spot'\n        ? this.spotApi.fetchMarkets()\n        : this.derivativesApi.fetchMarkets());\n\n      const selectedMarkets = markets.filter((m) =>\n        marketIds.includes(m.marketId),\n      );\n\n      if (selectedMarkets.length === 0) {\n        throw new Error('No valid markets found for the provided market IDs');\n      }\n\n      const analysisResults: MarketAnalysis[] = [];\n\n      for (const market of selectedMarkets) {\n        console.log(\n          `\\nAnalyzing ${config.type} market: ${market.ticker} (${market.marketId})`,\n        );\n\n        // Get order book analysis\n        console.log('\\nAnalyzing order book...');\n        const orderBookAnalysis = await this.analyzeOrderBook(\n          market.marketId,\n          config.type,\n        );\n\n        // Get liquidity analysis (for spot markets) or derivatives metrics (for futures)\n        let liquidityAnalysis: LiquidityAnalysis | null = null;\n        let derivativesMetrics = null;\n\n        if (config.type === 'spot') {\n          try {\n            console.log('\\nAnalyzing liquidity pool...');\n            liquidityAnalysis = await this.analyzeLiquidityPool(\n              market.marketId,\n            );\n          } catch (error: unknown) {\n            if (error instanceof Error) {\n              console.log(\n                `Liquidity pool analysis not available: ${error.message}`,\n              );\n            } else {\n              console.log(\n                'Liquidity pool analysis not available for this market',\n              );\n            }\n          }\n        } else {\n          // For derivatives markets, fetch funding rates and open interest\n          console.log('\\nAnalyzing derivatives metrics...');\n          derivativesMetrics = await this.analyzeDerivativesMetrics(\n            market.marketId,\n          );\n        }\n\n        // Get recent trades for volume analysis\n        console.log('Fetching recent trades...');\n        const trades = await (config.type === 'spot'\n          ? this.getSpotTrades(market.marketId, 10)\n          : this.getDerivativesTrades(market.marketId, 10));\n\n        // Get historical data for technical analysis\n        console.log('Fetching historical data...');\n        const marketHistories = await this.getMarketsHistory(\n          [market.marketId],\n          config.resolution,\n          config.countback,\n        );\n\n        const marketHistory = marketHistories[0];\n        const technicalAnalysis = this.calculateTechnicalAnalysis(\n          marketHistory,\n          config,\n        );\n\n        analysisResults.push({\n          marketId: market.marketId,\n          ticker: market.ticker,\n          orderBook: orderBookAnalysis,\n          liquidity: liquidityAnalysis,\n          derivativesMetrics,\n          recentTrades: trades.map((trade) => ({\n            price: trade.price,\n            quantity: trade.quantity,\n            direction: trade.tradeDirection,\n          })),\n          technicalAnalysis,\n          timeframe: config.resolution,\n        });\n      }\n\n      return analysisResults;\n    } catch (error) {\n      console.error('Error running market analysis:', error);\n      if (error instanceof Error) {\n        console.error('Error details:', {\n          message: error.message,\n          stack: error.stack,\n        });\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Analyze markets based on configuration\n   * @param config Analysis configuration\n   * @returns Promise containing market analysis results\n   */\n  async analyzeMarketsByConfig(\n    config: TimeframeConfig,\n  ): Promise<MarketAnalysis[]> {\n    // Use the limit from config to analyze top markets\n    return this.analyzeTopMarkets(config);\n  }\n\n  /**\n   * Analyze derivatives market metrics\n   * Useful for: Funding rates, open interest, and position analysis\n   */\n  async analyzeDerivativesMetrics(marketId: string) {\n    try {\n      // Fetch funding rates\n      const fundingRates = await this.getFundingRates(marketId);\n      const latestRate = fundingRates.fundingRates[0];\n\n      // Fetch positions for open interest\n      const positions = await this.getPositions(marketId);\n      const longPositions = positions.positions.filter(\n        (p) => p.direction === 'long',\n      );\n      const shortPositions = positions.positions.filter(\n        (p) => p.direction === 'short',\n      );\n\n      // Calculate total open interest\n      const totalOpenInterest = positions.positions.reduce(\n        (sum, pos) => sum + Number(pos.quantity),\n        0,\n      );\n      const longOpenInterest = longPositions.reduce(\n        (sum, pos) => sum + Number(pos.quantity),\n        0,\n      );\n      const shortOpenInterest = shortPositions.reduce(\n        (sum, pos) => sum + Number(pos.quantity),\n        0,\n      );\n\n      return {\n        fundingRate: {\n          current: Number(latestRate?.rate || 0),\n          timestamp: latestRate?.timestamp || 0,\n        },\n        openInterest: {\n          total: totalOpenInterest,\n          long: longOpenInterest,\n          short: shortOpenInterest,\n          longShortRatio: longOpenInterest / (shortOpenInterest || 1),\n        },\n      };\n    } catch (error) {\n      console.error('Failed to fetch derivatives metrics:', error);\n      return null;\n    }\n  }\n}\n\n// Export a singleton instance\nexport const marketAnalysisService = new MarketAnalysisService();\n","/**\n * @module injective-client\n * @description Client for interacting with Injective Protocol and performing market analysis\n */\n\nimport { DatabaseService } from '@/services/injective/database-service';\nimport { InjectiveService } from '@/services/injective/injective-service';\nimport { MarketAnalysisService } from '@/services/injective/market-analysis-service';\nimport { TimeResolution } from '@/types/injective/market-history';\nimport {\n  type ClientInstance,\n  type IAgentRuntime,\n  elizaLogger,\n} from '@elizaos/core';\nimport { Network } from '@injectivelabs/networks';\nimport {\n  DEFAULT_MARKET_ANALYSIS_CONFIG,\n  MARKET_ANALYSIS_INTERVALS,\n} from '../../../config/injective';\n\nconst RETRY_DELAY_MS = 15 * 60 * 1000; // 15 minutes in milliseconds\n\n// Define the timeframes we want to analyze\nconst ANALYSIS_TIMEFRAMES = {\n  FIVE_MINUTES: {\n    resolution: TimeResolution.FiveMinutes,\n    interval: MARKET_ANALYSIS_INTERVALS.FIVE_MINUTES,\n    countback: 12, // 1 hour worth of 5-min data\n  },\n  HOUR: {\n    resolution: TimeResolution.Hour,\n    interval: MARKET_ANALYSIS_INTERVALS.HOUR,\n    countback: 24, // 24 hours worth of hourly data\n  },\n} as const;\n\n/**\n * Client for interacting with Injective Protocol\n * Handles market analysis and data storage\n */\nexport class InjectiveClient implements ClientInstance {\n  private readonly runtime: IAgentRuntime;\n  private injectiveService: InjectiveService | null = null;\n  private marketAnalysisService: MarketAnalysisService | null = null;\n  private databaseService: DatabaseService | null = null;\n  private analysisIntervals: { [key: string]: NodeJS.Timer } = {};\n  private isAnalyzing: { [key: string]: boolean } = {};\n  private retryTimeouts: { [key: string]: NodeJS.Timer } = {};\n\n  constructor(runtime: IAgentRuntime) {\n    this.runtime = runtime;\n  }\n\n  private scheduleRetry(timeframe: keyof typeof ANALYSIS_TIMEFRAMES): void {\n    // Clear any existing retry timeout\n    if (this.retryTimeouts[timeframe]) {\n      clearTimeout(this.retryTimeouts[timeframe]);\n    }\n\n    // Schedule retry in 15 minutes\n    this.retryTimeouts[timeframe] = setTimeout(() => {\n      elizaLogger.info(\n        `[InjectiveClient] Retrying analysis for timeframe ${timeframe} after delay`,\n      );\n      this.runMarketAnalysis(timeframe).catch((error) => {\n        elizaLogger.error(\n          `[InjectiveClient] Retry attempt failed for timeframe ${timeframe}:`,\n          error,\n        );\n      });\n    }, RETRY_DELAY_MS);\n  }\n\n  private async runMarketAnalysis(\n    timeframe: keyof typeof ANALYSIS_TIMEFRAMES,\n  ): Promise<void> {\n    // Skip if already analyzing this timeframe\n    if (this.isAnalyzing[timeframe]) {\n      elizaLogger.warn(\n        `[InjectiveClient] Analysis for timeframe ${timeframe} already in progress, skipping`,\n      );\n      return;\n    }\n\n    this.isAnalyzing[timeframe] = true;\n\n    try {\n      const timeframeConfig = ANALYSIS_TIMEFRAMES[timeframe];\n      elizaLogger.info(\n        `[InjectiveClient] Running market analysis for timeframe ${timeframeConfig.resolution}`,\n      );\n\n      const config = {\n        ...DEFAULT_MARKET_ANALYSIS_CONFIG,\n        resolution: timeframeConfig.resolution,\n        countback: timeframeConfig.countback,\n      };\n\n      const analysis =\n        await this.marketAnalysisService?.analyzeMarketsByConfig(config);\n      if (analysis) {\n        await this.databaseService?.storeMarketAnalysis(analysis);\n        elizaLogger.info(\n          `[InjectiveClient] Market analysis completed and stored for timeframe ${timeframeConfig.resolution}`,\n        );\n      }\n\n      // Clear any retry timeout on successful completion\n      if (this.retryTimeouts[timeframe]) {\n        clearTimeout(this.retryTimeouts[timeframe]);\n        delete this.retryTimeouts[timeframe];\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.message.includes('timeout')) {\n          elizaLogger.warn(\n            `[InjectiveClient] Timeout during market analysis for timeframe ${timeframe}, scheduling retry in 15 minutes`,\n          );\n          this.scheduleRetry(timeframe);\n        } else {\n          elizaLogger.error(\n            `[InjectiveClient] Error in market analysis for timeframe ${timeframe}: ${error.message}`,\n          );\n          this.scheduleRetry(timeframe);\n        }\n      } else {\n        elizaLogger.error(\n          `[InjectiveClient] Unknown error in market analysis for timeframe ${timeframe}:`,\n          error,\n        );\n        this.scheduleRetry(timeframe);\n      }\n    } finally {\n      this.isAnalyzing[timeframe] = false;\n    }\n  }\n\n  async start(): Promise<void> {\n    elizaLogger.info('[InjectiveClient] Starting Injective client');\n\n    try {\n      // Initialize services\n      const network = Network.Mainnet;\n      this.injectiveService = new InjectiveService(network);\n      this.marketAnalysisService = new MarketAnalysisService(network);\n      this.databaseService = new DatabaseService(this.runtime);\n\n      // Initialize analysis flags\n      for (const timeframe of Object.keys(ANALYSIS_TIMEFRAMES)) {\n        this.isAnalyzing[timeframe] = false;\n      }\n\n      // Run initial analysis for each timeframe with delay between them\n      for (const [timeframe] of Object.entries(ANALYSIS_TIMEFRAMES)) {\n        await new Promise((resolve) => setTimeout(resolve, 2000)); // 2 second delay between initial analyses\n        await this.runMarketAnalysis(\n          timeframe as keyof typeof ANALYSIS_TIMEFRAMES,\n        ).catch((error) => {\n          elizaLogger.error(\n            `[InjectiveClient] Initial analysis failed for timeframe ${timeframe}:`,\n            error,\n          );\n        });\n      }\n\n      // Schedule periodic market analysis for each timeframe with offset\n      let index = 0;\n      for (const [timeframe, config] of Object.entries(ANALYSIS_TIMEFRAMES)) {\n        // Add offset to prevent all analyses running at the same time\n        const offsetMs = index * 30000; // 30 second offset between timeframes\n        setTimeout(() => {\n          this.analysisIntervals[timeframe] = setInterval(\n            () =>\n              this.runMarketAnalysis(\n                timeframe as keyof typeof ANALYSIS_TIMEFRAMES,\n              ).catch((error) => {\n                elizaLogger.error(\n                  `[InjectiveClient] Scheduled analysis failed for timeframe ${timeframe}:`,\n                  error,\n                );\n              }),\n            config.interval,\n          );\n        }, offsetMs);\n        index++;\n      }\n\n      elizaLogger.info(\n        '[InjectiveClient] Injective client started successfully',\n      );\n    } catch (error) {\n      elizaLogger.error(\n        '[InjectiveClient] Error starting Injective client:',\n        error,\n      );\n      throw error;\n    }\n  }\n\n  async stop(): Promise<void> {\n    elizaLogger.info('[InjectiveClient] Stopping Injective client');\n    try {\n      // Clear all analysis intervals and timeouts\n      for (const interval of Object.values(this.analysisIntervals)) {\n        clearInterval(interval);\n      }\n      for (const timeout of Object.values(this.retryTimeouts)) {\n        clearTimeout(timeout);\n      }\n      this.analysisIntervals = {};\n      this.retryTimeouts = {};\n      this.isAnalyzing = {};\n\n      // Clean up services\n      this.injectiveService = null;\n      this.marketAnalysisService = null;\n      this.databaseService = null;\n\n      elizaLogger.info(\n        '[InjectiveClient] Injective client stopped successfully',\n      );\n    } catch (error) {\n      elizaLogger.error(\n        '[InjectiveClient] Error stopping Injective client:',\n        error,\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * Get the current market analysis service instance\n   * @returns The market analysis service instance or null if not initialized\n   */\n  getMarketAnalysisService(): MarketAnalysisService | null {\n    return this.marketAnalysisService;\n  }\n\n  /**\n   * Get the current injective service instance\n   * @returns The injective service instance or null if not initialized\n   */\n  getInjectiveService(): InjectiveService | null {\n    return this.injectiveService;\n  }\n\n  /**\n   * Get the current database service instance\n   * @returns The database service instance or null if not initialized\n   */\n  getDatabaseService(): DatabaseService | null {\n    return this.databaseService;\n  }\n}\n\n/**\n * Start the Injective client\n * @param runtime The agent runtime instance\n * @returns A promise that resolves to the client instance\n */\nexport async function startInjectiveClient(\n  runtime: IAgentRuntime,\n): Promise<ClientInstance> {\n  const client = new InjectiveClient(runtime);\n  await client.start();\n  return client;\n}\n","import { TimeResolution } from '../bork-protocol/types/injective/market-history';\n\n// Market Analysis Intervals (in milliseconds)\nexport const MARKET_ANALYSIS_INTERVALS = {\n  MINUTE: 60000,\n  FIVE_MINUTES: 300000,\n  FIFTEEN_MINUTES: 900000,\n  THIRTY_MINUTES: 1800000,\n  HOUR: 3600000,\n  FOUR_HOURS: 14400000,\n  DAY: 86400000,\n} as const;\n\n// Default market analysis configuration\nexport const DEFAULT_MARKET_ANALYSIS_CONFIG = {\n  type: 'spot' as const,\n  resolution: TimeResolution.Hour,\n  countback: 24, // Number of historical data points to fetch\n  limit: 10, // Number of top markets to analyze\n  // Technical indicator periods\n  sma: 24, // Simple Moving Average period\n  ema: 24, // Exponential Moving Average period\n  rsi: 14, // Relative Strength Index period\n  bollinger: {\n    period: 20,\n    stdDev: 2, // Standard deviation multiplier\n  },\n  macd: {\n    fast: 12, // Fast EMA period\n    slow: 26, // Slow EMA period\n    signal: 9, // Signal line period\n  },\n  atr: 14, // Average True Range period\n  stochastic: {\n    k: 14, // %K period\n    d: 3, // %D period\n  },\n  adx: 14, // Average Directional Index period\n} as const;\n\n// Default interval for market analysis (1 hour)\nexport const DEFAULT_MARKET_ANALYSIS_INTERVAL = MARKET_ANALYSIS_INTERVALS.HOUR;\n\n// Market depth configuration\nexport const MARKET_DEPTH_CONFIG = {\n  DEFAULT_DEPTH: 20, // Number of orders to analyze in order book\n  MAX_DEPTH: 100, // Maximum number of orders to fetch\n} as const;\n\n// Network configuration\nexport const NETWORK_CONFIG = {\n  RETRY_ATTEMPTS: 3,\n  RETRY_DELAY: 1000, // milliseconds\n  TIMEOUT: 30000, // milliseconds\n} as const;\n\n// Database configuration\nexport const DATABASE_CONFIG = {\n  TABLE_NAMES: {\n    MARKET_ANALYSIS: 'market_analysis',\n  },\n  BATCH_SIZE: 100, // Number of records to insert/update in one batch\n  MAX_RETENTION_DAYS: 30, // Number of days to keep historical data\n} as const;\n","import { tweetQueries } from '@/extensions/src/db/queries';\nimport { elizaLogger } from '@elizaos/core';\nimport type { IAgentRuntime } from '@elizaos/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport type { TwitterService } from '../services/twitter-service';\nimport type { DatabaseTweet, MergedTweet } from '../types/twitter';\n\n/**\n * Recursively fetches and stores all related tweets in a chain\n * @param twitterService Twitter service instance for making API calls\n * @param tweetId ID of the tweet to fetch related tweets for\n * @param runtime IAgentRuntime instance for accessing agent ID\n * @param processedIds Set of already processed tweet IDs to avoid duplicates\n * @param client Optional database client for transactions\n * @returns Array of fetched tweets in chronological order\n */\nasync function fetchRelatedTweets(\n  twitterService: TwitterService,\n  tweetId: string,\n  runtime: IAgentRuntime,\n  processedIds: Set<string> = new Set(),\n  client = null,\n): Promise<MergedTweet[]> {\n  // If we've already processed this tweet, skip it\n  if (processedIds.has(tweetId)) {\n    return [];\n  }\n\n  try {\n    // First check if we already have this tweet in our database\n    const existingTweet = await tweetQueries.findTweetByTweetId(\n      tweetId,\n      client,\n    );\n    if (existingTweet) {\n      processedIds.add(tweetId);\n      // Stop recursion here - don't fetch related tweets for existing tweets\n      return [existingTweet];\n    }\n\n    // Fetch the tweet from Twitter\n    const tweet = await twitterService.getTweet(tweetId);\n    if (!tweet) {\n      return [];\n    }\n\n    // First save the newly fetched tweet to the database\n    const dbTweet: DatabaseTweet = {\n      id: uuidv4(),\n      tweet_id: tweet.id,\n      agentId: runtime.agentId,\n      text: tweet.text || '',\n      userId: tweet.userId?.toString() || '',\n      username: tweet.username || '',\n      name: tweet.name || '',\n      timestamp: tweet.timestamp || Math.floor(Date.now() / 1000),\n      timeParsed: new Date(),\n      likes: tweet.likes || 0,\n      retweets: tweet.retweets || 0,\n      replies: tweet.replies || 0,\n      views: tweet.views || 0,\n      bookmarkCount: tweet.bookmarkCount || 0,\n      conversationId: tweet.conversationId || '',\n      permanentUrl: tweet.permanentUrl || '',\n      html: tweet.html || '',\n      inReplyToStatus: null, // Don't store full tweet objects to avoid cycles\n      inReplyToStatusId: tweet.inReplyToStatusId,\n      quotedStatus: null, // Don't store full tweet objects to avoid cycles\n      quotedStatusId: tweet.quotedStatusId,\n      retweetedStatus: null, // Don't store full tweet objects to avoid cycles\n      retweetedStatusId: tweet.retweetedStatusId,\n      thread: [], // Will be updated after merging\n      isQuoted: tweet.isQuoted || false,\n      isPin: tweet.isPin || false,\n      isReply: tweet.isReply || false,\n      isRetweet: tweet.isRetweet || false,\n      isSelfThread: tweet.isSelfThread || false,\n      sensitiveContent: tweet.sensitiveContent || false,\n      status: 'pending',\n      createdAt: new Date(),\n      isThreadMerged: false,\n      threadSize: 1,\n      originalText: tweet.text || '',\n      hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n      mentions: Array.isArray(tweet.mentions)\n        ? tweet.mentions.map((mention) => ({\n            username: mention.username || '',\n            id: mention.id || '',\n          }))\n        : [],\n      photos: Array.isArray(tweet.photos) ? tweet.photos : [],\n      urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n      videos: Array.isArray(tweet.videos) ? tweet.videos : [],\n      place: tweet.place,\n      poll: tweet.poll,\n      homeTimeline: {\n        publicMetrics: {\n          likes: tweet.likes || 0,\n          retweets: tweet.retweets || 0,\n          replies: tweet.replies || 0,\n        },\n        entities: {\n          hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n          mentions: Array.isArray(tweet.mentions)\n            ? tweet.mentions.map((mention) => ({\n                username: mention.username || '',\n                id: mention.id || '',\n              }))\n            : [],\n          urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n        },\n      },\n    };\n    await tweetQueries.saveTweetObject(dbTweet, client);\n\n    // Mark this tweet as processed\n    processedIds.add(tweetId);\n\n    // Initialize array to store all related tweets\n    const relatedTweets: MergedTweet[] = [];\n\n    // Convert tweet to MergedTweet type\n    const mergedTweet: MergedTweet = {\n      ...tweet,\n      id: uuidv4(), // Internal UUID\n      tweet_id: tweet.id, // Twitter's numeric ID\n      originalText: tweet.text || '',\n      isThreadMerged: false,\n      threadSize: 1,\n      thread: [], // Don't include full tweet objects in thread to avoid cycles\n      hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n      mentions: Array.isArray(tweet.mentions) ? tweet.mentions : [],\n      photos: Array.isArray(tweet.photos) ? tweet.photos : [],\n      urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n      videos: Array.isArray(tweet.videos) ? tweet.videos : [],\n    };\n\n    // Add the current tweet to the relatedTweets array\n    relatedTweets.push(mergedTweet);\n\n    // Handle all the thread relationship types (recursively)\n    if (tweet.inReplyToStatusId) {\n      try {\n        const replyChain = await fetchRelatedTweets(\n          twitterService,\n          tweet.inReplyToStatusId,\n          runtime,\n          processedIds,\n          client,\n        );\n        relatedTweets.push(...replyChain);\n      } catch (replyError) {\n        elizaLogger.warn(\n          '[Tweet Fetching] Error fetching reply to status:',\n          replyError,\n        );\n      }\n    }\n\n    if (tweet.quotedStatusId) {\n      try {\n        const quotedTweets = await fetchRelatedTweets(\n          twitterService,\n          tweet.quotedStatusId,\n          runtime,\n          processedIds,\n          client,\n        );\n        relatedTweets.push(...quotedTweets);\n      } catch (quotedError) {\n        elizaLogger.warn(\n          '[Tweet Fetching] Error fetching quoted status:',\n          quotedError,\n        );\n      }\n    }\n\n    if (tweet.retweetedStatusId) {\n      try {\n        const retweetedTweets = await fetchRelatedTweets(\n          twitterService,\n          tweet.retweetedStatusId,\n          runtime,\n          processedIds,\n          client,\n        );\n        relatedTweets.push(...retweetedTweets);\n      } catch (retweetedError) {\n        elizaLogger.warn(\n          '[Tweet Fetching] Error fetching retweeted status:',\n          retweetedError,\n        );\n      }\n    }\n\n    return relatedTweets;\n  } catch (error) {\n    elizaLogger.error('[Tweet Fetching] Error fetching related tweets:', {\n      error: error instanceof Error ? error.message : String(error),\n      tweetId,\n    });\n    return [];\n  }\n}\n\n/**\n * Merges tweet content with its thread and related tweets\n * @param twitterService Twitter service instance for making API calls\n * @param tweets Array of tweets to process and merge with their threads\n * @returns Array of processed tweets with merged content\n */\nexport async function mergeTweetContent(\n  twitterService: TwitterService,\n  runtime: IAgentRuntime,\n  tweets: MergedTweet[],\n): Promise<DatabaseTweet[]> {\n  // Use a transaction for the entire operation\n  return tweetQueries.processTweetsInTransaction(async (client) => {\n    const processedTweets: DatabaseTweet[] = [];\n    const processedIds = new Set<string>();\n\n    for (const tweet of tweets) {\n      try {\n        // Validate tweet has required fields\n        if (!tweet.tweet_id) {\n          elizaLogger.error('[Tweet Processing] Tweet missing Twitter ID:', {\n            userId: tweet.userId,\n            username: tweet.username,\n            text: tweet.text?.substring(0, 100),\n          });\n          continue;\n        }\n\n        // Skip if we've already processed this tweet\n        if (processedIds.has(tweet.tweet_id)) {\n          continue;\n        }\n\n        // First save the original tweet to the database\n        const dbTweet: DatabaseTweet = {\n          id: uuidv4(),\n          tweet_id: tweet.tweet_id,\n          agentId: runtime.agentId,\n          text: tweet.text || '',\n          userId: tweet.userId?.toString() || '',\n          username: tweet.username || '',\n          name: tweet.name || '',\n          timestamp: tweet.timestamp || Math.floor(Date.now() / 1000),\n          timeParsed: new Date(),\n          likes: tweet.likes || 0,\n          retweets: tweet.retweets || 0,\n          replies: tweet.replies || 0,\n          views: tweet.views || 0,\n          bookmarkCount: tweet.bookmarkCount || 0,\n          conversationId: tweet.conversationId || '',\n          permanentUrl: tweet.permanentUrl || '',\n          html: tweet.html || '',\n          inReplyToStatus: null, // Don't store full tweet objects to avoid cycles\n          inReplyToStatusId: tweet.inReplyToStatusId,\n          quotedStatus: null, // Don't store full tweet objects to avoid cycles\n          quotedStatusId: tweet.quotedStatusId,\n          retweetedStatus: null, // Don't store full tweet objects to avoid cycles\n          retweetedStatusId: tweet.retweetedStatusId,\n          thread: [], // Will be updated after merging\n          isQuoted: tweet.isQuoted || false,\n          isPin: tweet.isPin || false,\n          isReply: tweet.isReply || false,\n          isRetweet: tweet.isRetweet || false,\n          isSelfThread: tweet.isSelfThread || false,\n          sensitiveContent: tweet.sensitiveContent || false,\n          status: 'pending',\n          createdAt: new Date(),\n          isThreadMerged: false,\n          threadSize: 1,\n          originalText: tweet.text || '',\n          mediaType: tweet.mediaType || 'text',\n          mediaUrl: tweet.mediaUrl || '',\n          hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n          mentions: Array.isArray(tweet.mentions)\n            ? tweet.mentions.map((mention) => ({\n                username: mention.username || '',\n                id: mention.id || '',\n              }))\n            : [],\n          photos: Array.isArray(tweet.photos) ? tweet.photos : [],\n          urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n          videos: Array.isArray(tweet.videos) ? tweet.videos : [],\n          place: tweet.place,\n          poll: tweet.poll,\n          homeTimeline: {\n            publicMetrics: {\n              likes: tweet.likes || 0,\n              retweets: tweet.retweets || 0,\n              replies: tweet.replies || 0,\n            },\n            entities: {\n              hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n              mentions: Array.isArray(tweet.mentions)\n                ? tweet.mentions.map((mention) => ({\n                    username: mention.username || '',\n                    id: mention.id || '',\n                  }))\n                : [],\n              urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n            },\n          },\n        };\n        await tweetQueries.saveTweetObject(dbTweet, client);\n        elizaLogger.debug(\n          '[Tweet Processing] Saved original tweet to database:',\n          {\n            tweetId: tweet.tweet_id,\n            userId: tweet.userId,\n            username: tweet.username,\n          },\n        );\n\n        // Now fetch and process related tweets\n        const relatedTweets = await fetchRelatedTweets(\n          twitterService,\n          tweet.tweet_id,\n          runtime,\n          processedIds,\n          client,\n        );\n\n        // Sort tweets chronologically\n        const sortedTweets = relatedTweets.sort(\n          (a, b) => (a.timestamp || 0) - (b.timestamp || 0),\n        );\n\n        // Merge the content\n        let mergedText = '';\n        for (const relatedTweet of sortedTweets) {\n          if (relatedTweet.text) {\n            if (mergedText) {\n              mergedText += '\\n\\n';\n            }\n            mergedText += relatedTweet.text;\n          }\n        }\n\n        // Update the processed tweet with merged content\n        const processedTweet: DatabaseTweet = {\n          ...dbTweet,\n          text: mergedText || tweet.text || '',\n          thread: sortedTweets,\n          isThreadMerged: sortedTweets.length > 1,\n          threadSize: sortedTweets.length,\n        };\n\n        processedTweets.push(processedTweet);\n        processedIds.add(tweet.tweet_id);\n\n        elizaLogger.debug(\n          '[Tweet Merging] Successfully merged tweet with related content:',\n          {\n            tweetId: tweet.tweet_id,\n            relatedTweetsCount: sortedTweets.length,\n            mergedTextLength: mergedText.length,\n            originalTextLength: tweet.text?.length || 0,\n          },\n        );\n      } catch (error) {\n        elizaLogger.error('[Tweet Merging] Error processing tweet:', {\n          error: error instanceof Error ? error.message : String(error),\n          tweetId: tweet.tweet_id,\n        });\n      }\n    }\n\n    return processedTweets;\n  });\n}\n","import { elizaLogger } from '@elizaos/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport type { MergedTweet, Tweet } from '../types/twitter';\n\n/**\n * Validates tweets and filters out those with missing IDs\n */\nexport function validateTweets(tweets: Tweet[]): Tweet[] {\n  const validTweets = tweets.filter((tweet) => {\n    // Check if we have either tweet_id or id\n    const tweetId = tweet.tweet_id || tweet.id;\n\n    if (!tweetId) {\n      elizaLogger.warn(\n        '[Tweet Processing] Skipping tweet with missing Twitter ID:',\n        {\n          userId: tweet.userId,\n          username: tweet.username,\n          text: tweet.text?.substring(0, 100),\n        },\n      );\n      return false;\n    }\n\n    // If tweet has id but not tweet_id, copy id to tweet_id\n    if (!tweet.tweet_id && tweet.id) {\n      tweet.tweet_id = tweet.id;\n      elizaLogger.debug('[Tweet Processing] Copied id to tweet_id field', {\n        tweet_id: tweet.tweet_id,\n        username: tweet.username,\n      });\n    }\n\n    return true;\n  });\n\n  if (validTweets.length === 0) {\n    elizaLogger.error('[Tweet Processing] No valid tweets to process');\n  }\n\n  return validTweets;\n}\n\n/**\n * Prepares tweets for merging by converting them to MergedTweet type\n */\nexport function prepareTweetsForMerging(tweets: Tweet[]): MergedTweet[] {\n  return tweets.map((tweet) => ({\n    ...tweet,\n    id: tweet.id || uuidv4(), // Internal UUID\n    tweet_id: tweet.tweet_id || tweet.id, // Twitter's numeric ID (ensure it's set)\n    originalText: tweet.text || '',\n    isThreadMerged: false,\n    threadSize: 1,\n    thread: [],\n    hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n    mentions: Array.isArray(tweet.mentions) ? tweet.mentions : [],\n    photos: Array.isArray(tweet.photos) ? tweet.photos : [],\n    urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n    videos: Array.isArray(tweet.videos) ? tweet.videos : [],\n  }));\n}\n","import { mergeTweetContent } from '@/helpers/tweet-merging-helper';\nimport {\n  prepareTweetsForMerging,\n  validateTweets,\n} from '@/helpers/tweet-validation-helper';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport type { TopicWeightRow } from '@/types/topic';\nimport type { Tweet } from '@/types/twitter';\nimport { elizaLogger } from '@elizaos/core';\nimport type { IAgentRuntime } from '@elizaos/core';\nimport { updateMetricsForAuthors } from '../account-metrics/update-influence-score';\nimport { processSingleTweet } from './process-single-tweet';\n\n/**\n * Main entry point for processing tweets.\n * Validates, merges, and processes tweet content for analysis.\n */\nexport async function processTweets(\n  runtime: IAgentRuntime,\n  twitterService: TwitterService,\n  tweets: Tweet[],\n  topicWeights: TopicWeightRow[],\n): Promise<void> {\n  try {\n    // Step 1: Validate tweets to ensure they have required fields\n    const validTweets = validateTweets(tweets);\n\n    if (validTweets.length === 0) {\n      return;\n    }\n\n    // Step 2: Prepare tweets for merging by converting to MergedTweet type\n    const tweetsToMerge = prepareTweetsForMerging(validTweets);\n\n    // Step 3: Merge tweet content with related tweets\n    const mergedTweets = await mergeTweetContent(\n      twitterService,\n      runtime,\n      tweetsToMerge,\n    );\n\n    elizaLogger.info(\n      `[TwitterAccounts] Processing ${mergedTweets.length} tweets`,\n    );\n\n    // Step 4: Update metrics for all tweet authors\n    await updateMetricsForAuthors(mergedTweets, '[Tweet Processing]');\n\n    // Step 5: Process each tweet individually\n    for (const tweet of mergedTweets) {\n      await processSingleTweet(\n        runtime,\n        twitterService,\n        tweet,\n        topicWeights,\n        '[Tweet Processing]',\n      );\n    }\n\n    elizaLogger.info('[TwitterAccounts] Successfully processed all tweets');\n  } catch (error) {\n    elizaLogger.error(\n      '[Tweet Processing] Error processing tweets:',\n      error instanceof Error ? error.message : String(error),\n    );\n  }\n}\n","import { tweetQueries } from '@/extensions/src/db/queries';\nimport type { TargetAccount } from '@/types/account';\nimport type { DatabaseTweet } from '@/types/twitter';\nimport { elizaLogger } from '@elizaos/core';\n\n/**\n * Updates engagement metrics for an account based on their last 50 tweets.\n * This calculates average engagement values to help rank accounts for future selections.\n */\nasync function updateAccountEngagementMetrics(\n  account: TargetAccount,\n  context = '[TwitterAccounts]',\n  skipSearch = false, // New parameter to skip the search when we're already processing tweets\n  providedTweets?: DatabaseTweet[], // Optional parameter for tweets we already have\n): Promise<void> {\n  try {\n    // Check if account was updated recently to avoid excessive API calls\n    const lastUpdated = account.last50TweetsUpdatedAt;\n    const now = new Date();\n    const hoursSinceLastUpdate = lastUpdated\n      ? (now.getTime() - lastUpdated.getTime()) / (1000 * 60 * 60)\n      : 999; // Large number if never updated\n\n    // Only skip if we've updated recently AND we're not processing new tweets\n    // FIXME: Seems odd we check that skipSearch is false to skip search :D. I believe we can get rid of skipSearch in that case\n    if (hoursSinceLastUpdate < 24 && !skipSearch && !providedTweets) {\n      elizaLogger.info(\n        `${context} Skipping engagement metrics update for ${account.username} - updated ${hoursSinceLastUpdate.toFixed(1)} hours ago`,\n      );\n      return;\n    }\n\n    // Log that we're updating metrics\n    elizaLogger.info(\n      `${context} Updating engagement metrics for ${account.username}`,\n    );\n\n    // Use provided tweets or fetch from database\n    const tweets =\n      providedTweets ||\n      (await tweetQueries.getTweetsByUsername(account.username, 50));\n\n    elizaLogger.info(\n      `${context} Found ${tweets.length} tweets in database for ${account.username}`,\n    );\n\n    // Process metrics if we have tweets\n    if (tweets.length > 0) {\n      // Calculate average engagement metrics\n      const sumLikes = tweets.reduce((sum, t) => sum + (t.likes || 0), 0);\n      const sumRetweets = tweets.reduce((sum, t) => sum + (t.retweets || 0), 0);\n      const sumReplies = tweets.reduce((sum, t) => sum + (t.replies || 0), 0);\n      const sumViews = tweets.reduce((sum, t) => sum + (t.views || 0), 0);\n\n      const avgLikes = tweets.length ? sumLikes / tweets.length : 0;\n      const avgRetweets = tweets.length ? sumRetweets / tweets.length : 0;\n      const avgReplies = tweets.length ? sumReplies / tweets.length : 0;\n      const avgViews = tweets.length ? sumViews / tweets.length : 0;\n\n      // Calculate engagement rate (weighted average of all metrics)\n      // Views are given less weight since they're more passive\n      const totalFollowers = account.followersCount || 1; // Avoid division by zero\n      const engagementRate =\n        ((avgLikes * 3 + avgRetweets * 5 + avgReplies * 2) / totalFollowers) *\n        100;\n\n      // Calculate influence score based on multiple factors\n      const followerWeight = Math.log10(totalFollowers + 1) / 8; // Normalize follower count (0-1)\n      const engagementWeight = engagementRate / 100; // Normalize engagement rate (0-1)\n      const reachMultiplier = avgViews > 0 ? Math.log10(avgViews + 1) / 6 : 0.5; // View reach factor\n\n      // Combine factors for influence score (0-1)\n      const influenceScore = Math.min(\n        1,\n        (followerWeight * 0.3 + engagementWeight * 0.5) * (1 + reachMultiplier),\n      );\n\n      // Update the account metrics\n      await tweetQueries.updateTargetAccountMetrics(account.username, {\n        avgLikes50: avgLikes,\n        avgRetweets50: avgRetweets,\n        avgReplies50: avgReplies,\n        avgViews50: avgViews,\n        last50TweetsUpdatedAt: new Date(),\n        influenceScore,\n      });\n\n      elizaLogger.info(\n        `${context} Updated engagement metrics for ${account.username}:`,\n      );\n      elizaLogger.debug({\n        avgLikes: avgLikes.toFixed(2),\n        avgRetweets: avgRetweets.toFixed(2),\n        avgReplies: avgReplies.toFixed(2),\n        avgViews: avgViews > 0 ? avgViews.toFixed(2) : 'n/a',\n        engagementRate: `${engagementRate.toFixed(4)}%`,\n        influenceScore: influenceScore.toFixed(4),\n        tweetsAnalyzed: tweets.length,\n      });\n    } else {\n      elizaLogger.warn(\n        `${context} No tweets found in database for ${account.username}`,\n      );\n    }\n  } catch (error) {\n    elizaLogger.error(\n      `${context} Error updating engagement metrics for ${account.username}:`,\n      error instanceof Error ? error.message : String(error),\n    );\n  }\n}\n\n/**\n * Updates metrics for all tweet authors\n */\nexport async function updateMetricsForAuthors(\n  tweets: DatabaseTweet[],\n  context = '[TwitterAccounts]',\n): Promise<void> {\n  try {\n    elizaLogger.info(\n      `${context} Starting metrics update for ${tweets.length} tweets`,\n    );\n\n    // Group tweets by author\n    const tweetsByAuthor = new Map<string, DatabaseTweet[]>();\n    for (const tweet of tweets) {\n      const authorTweets = tweetsByAuthor.get(tweet.username) || [];\n      authorTweets.push(tweet);\n      tweetsByAuthor.set(tweet.username, authorTweets);\n    }\n\n    elizaLogger.info(\n      `${context} Grouped tweets by ${tweetsByAuthor.size} unique authors`,\n    );\n    elizaLogger.debug({\n      authorCounts: Array.from(tweetsByAuthor.entries()).map(\n        ([username, tweets]) => ({\n          username,\n          tweetCount: tweets.length,\n        }),\n      ),\n    });\n\n    // Get all target accounts once\n    const accounts = await tweetQueries.getTargetAccounts();\n    elizaLogger.info(\n      `${context} Retrieved ${accounts.length} target accounts from database`,\n    );\n\n    // Process each author's tweets\n    let processedAuthors = 0;\n    let skippedAuthors = 0;\n\n    for (const [username, authorTweets] of tweetsByAuthor) {\n      elizaLogger.debug(\n        `${context} Processing author ${username} with ${authorTweets.length} tweets`,\n      );\n\n      const account = accounts.find((acc) => acc.username === username);\n      if (account) {\n        elizaLogger.debug(\n          `${context} Found matching target account for ${username}`,\n          {\n            followersCount: account.followersCount,\n            tweetsCount: account.tweetsCount,\n            isVerified: account.isVerified,\n          },\n        );\n\n        await updateAccountEngagementMetrics(\n          account,\n          context,\n          true, // Skip search since we're providing tweets\n          authorTweets,\n        );\n        processedAuthors++;\n      } else {\n        elizaLogger.debug(\n          `${context} No matching target account found for ${username}, skipping metrics update`,\n        );\n        skippedAuthors++;\n      }\n    }\n\n    elizaLogger.info(`${context} Completed metrics update processing`);\n    elizaLogger.debug({\n      totalAuthors: tweetsByAuthor.size,\n      processedAuthors,\n      skippedAuthors,\n      processingRate: `${((processedAuthors / tweetsByAuthor.size) * 100).toFixed(1)}%`,\n    });\n  } catch (error) {\n    elizaLogger.error(\n      `${context} Error updating metrics for authors:`,\n      error instanceof Error ? error.message : String(error),\n      {\n        stack: error instanceof Error ? error.stack : undefined,\n      },\n    );\n  }\n}\n","import { elizaLogger } from '@elizaos/core';\nimport type { TweetAnalysis } from '../types/analysis';\n\n/**\n * Creates a default TweetAnalysis object with reasonable default values\n * Used as a fallback when the AI response is malformed\n */\nexport function createDefaultAnalysis(): TweetAnalysis {\n  return {\n    contentAnalysis: {\n      type: 'other',\n      format: 'statement',\n      sentiment: 'neutral',\n      confidence: 0.5,\n      primaryTopics: [],\n      secondaryTopics: [],\n      entities: {\n        people: [],\n        organizations: [],\n        products: [],\n        locations: [],\n        events: [],\n      },\n      hashtagsUsed: [],\n      qualityMetrics: {\n        relevance: 0.5,\n        originality: 0.5,\n        clarity: 0.5,\n        authenticity: 0.5,\n        valueAdd: 0.5,\n      },\n      engagementAnalysis: {\n        overallScore: 0.5,\n        virality: 0.5,\n        conversionPotential: 0.5,\n        communityBuilding: 0.5,\n        thoughtLeadership: 0.5,\n      },\n    },\n    spamAnalysis: {\n      isSpam: false,\n      spamScore: 0.1,\n      reasons: [],\n      confidenceMetrics: {\n        linguisticRisk: 0.1,\n        topicMismatch: 0.1,\n        engagementAnomaly: 0.1,\n        promotionalIntent: 0.1,\n        accountTrustSignals: 0.1,\n      },\n    },\n    marketingInsights: {\n      targetAudience: [],\n      keyTakeaways: [],\n      contentStrategies: {\n        whatWorked: [],\n        improvement: [],\n      },\n      trendAlignment: {\n        currentTrends: [],\n        emergingOpportunities: [],\n        relevanceScore: 0.5,\n      },\n      copywriting: {\n        effectiveElements: [],\n        hooks: [],\n        callToAction: {\n          present: false,\n          type: 'none',\n          effectiveness: 0.5,\n        },\n      },\n    },\n    actionableRecommendations: {\n      engagementStrategies: [\n        {\n          action: 'Monitor engagement',\n          rationale: 'Initial analysis required',\n          priority: 'medium',\n          expectedOutcome: 'Baseline metrics established',\n        },\n      ],\n      contentCreation: [\n        {\n          contentType: 'general',\n          focus: 'content quality',\n          keyElements: ['clarity', 'value'],\n        },\n      ],\n      networkBuilding: [\n        {\n          targetType: 'community',\n          target: 'general audience',\n          approach: 'organic growth',\n          value: 'establish presence',\n        },\n      ],\n    },\n  };\n}\n\n/**\n * Repairs a partially formed analysis response by filling in missing data\n * with reasonable defaults\n */\nexport function repairAnalysisResponse(\n  partialAnalysis: Partial<Record<string, unknown>>,\n): TweetAnalysis {\n  const defaultAnalysis = createDefaultAnalysis();\n  const result: TweetAnalysis = { ...defaultAnalysis };\n\n  // Handle content analysis\n  if ('contentAnalysis' in partialAnalysis && partialAnalysis.contentAnalysis) {\n    const partialContent = partialAnalysis.contentAnalysis as Record<\n      string,\n      unknown\n    >;\n    result.contentAnalysis = {\n      type:\n        (partialContent.type as string) || defaultAnalysis.contentAnalysis.type,\n      format:\n        (partialContent.format as string) ||\n        defaultAnalysis.contentAnalysis.format,\n      sentiment:\n        (partialContent.sentiment as string) ||\n        defaultAnalysis.contentAnalysis.sentiment,\n      confidence:\n        (partialContent.confidence as number) ||\n        defaultAnalysis.contentAnalysis.confidence,\n      primaryTopics: Array.isArray(partialContent.primaryTopics)\n        ? partialContent.primaryTopics\n        : defaultAnalysis.contentAnalysis.primaryTopics,\n      secondaryTopics: Array.isArray(partialContent.secondaryTopics)\n        ? partialContent.secondaryTopics\n        : defaultAnalysis.contentAnalysis.secondaryTopics,\n      entities: {\n        people: Array.isArray(\n          (partialContent.entities as Record<string, unknown>)?.people,\n        )\n          ? ((partialContent.entities as Record<string, unknown>)\n              ?.people as string[])\n          : defaultAnalysis.contentAnalysis.entities.people,\n        organizations: Array.isArray(\n          (partialContent.entities as Record<string, unknown>)?.organizations,\n        )\n          ? ((partialContent.entities as Record<string, unknown>)\n              ?.organizations as string[])\n          : defaultAnalysis.contentAnalysis.entities.organizations,\n        products: Array.isArray(\n          (partialContent.entities as Record<string, unknown>)?.products,\n        )\n          ? ((partialContent.entities as Record<string, unknown>)\n              ?.products as string[])\n          : defaultAnalysis.contentAnalysis.entities.products,\n        locations: Array.isArray(\n          (partialContent.entities as Record<string, unknown>)?.locations,\n        )\n          ? ((partialContent.entities as Record<string, unknown>)\n              ?.locations as string[])\n          : defaultAnalysis.contentAnalysis.entities.locations,\n        events: Array.isArray(\n          (partialContent.entities as Record<string, unknown>)?.events,\n        )\n          ? ((partialContent.entities as Record<string, unknown>)\n              ?.events as string[])\n          : defaultAnalysis.contentAnalysis.entities.events,\n      },\n      hashtagsUsed: Array.isArray(partialContent.hashtagsUsed)\n        ? partialContent.hashtagsUsed\n        : defaultAnalysis.contentAnalysis.hashtagsUsed,\n      qualityMetrics: {\n        relevance:\n          ((partialContent.qualityMetrics as Record<string, unknown>)\n            ?.relevance as number) ||\n          defaultAnalysis.contentAnalysis.qualityMetrics.relevance,\n        originality:\n          ((partialContent.qualityMetrics as Record<string, unknown>)\n            ?.originality as number) ||\n          defaultAnalysis.contentAnalysis.qualityMetrics.originality,\n        clarity:\n          ((partialContent.qualityMetrics as Record<string, unknown>)\n            ?.clarity as number) ||\n          defaultAnalysis.contentAnalysis.qualityMetrics.clarity,\n        authenticity:\n          ((partialContent.qualityMetrics as Record<string, unknown>)\n            ?.authenticity as number) ||\n          defaultAnalysis.contentAnalysis.qualityMetrics.authenticity,\n        valueAdd:\n          ((partialContent.qualityMetrics as Record<string, unknown>)\n            ?.valueAdd as number) ||\n          defaultAnalysis.contentAnalysis.qualityMetrics.valueAdd,\n      },\n      engagementAnalysis: {\n        overallScore:\n          ((partialContent.engagementAnalysis as Record<string, unknown>)\n            ?.overallScore as number) ||\n          defaultAnalysis.contentAnalysis.engagementAnalysis.overallScore,\n        virality:\n          ((partialContent.engagementAnalysis as Record<string, unknown>)\n            ?.virality as number) ||\n          defaultAnalysis.contentAnalysis.engagementAnalysis.virality,\n        conversionPotential:\n          ((partialContent.engagementAnalysis as Record<string, unknown>)\n            ?.conversionPotential as number) ||\n          defaultAnalysis.contentAnalysis.engagementAnalysis\n            .conversionPotential,\n        communityBuilding:\n          ((partialContent.engagementAnalysis as Record<string, unknown>)\n            ?.communityBuilding as number) ||\n          defaultAnalysis.contentAnalysis.engagementAnalysis.communityBuilding,\n        thoughtLeadership:\n          ((partialContent.engagementAnalysis as Record<string, unknown>)\n            ?.thoughtLeadership as number) ||\n          defaultAnalysis.contentAnalysis.engagementAnalysis.thoughtLeadership,\n      },\n    };\n  }\n\n  // Handle spam analysis\n  if ('spamAnalysis' in partialAnalysis && partialAnalysis.spamAnalysis) {\n    const partialSpam = partialAnalysis.spamAnalysis as Record<string, unknown>;\n    result.spamAnalysis = {\n      isSpam:\n        typeof partialSpam.isSpam === 'boolean'\n          ? partialSpam.isSpam\n          : defaultAnalysis.spamAnalysis.isSpam,\n      spamScore:\n        (partialSpam.spamScore as number) ||\n        defaultAnalysis.spamAnalysis.spamScore,\n      reasons: Array.isArray(partialSpam.reasons)\n        ? partialSpam.reasons\n        : defaultAnalysis.spamAnalysis.reasons,\n      confidenceMetrics: {\n        linguisticRisk:\n          ((partialSpam.confidenceMetrics as Record<string, unknown>)\n            ?.linguisticRisk as number) ||\n          defaultAnalysis.spamAnalysis.confidenceMetrics.linguisticRisk,\n        topicMismatch:\n          ((partialSpam.confidenceMetrics as Record<string, unknown>)\n            ?.topicMismatch as number) ||\n          defaultAnalysis.spamAnalysis.confidenceMetrics.topicMismatch,\n        engagementAnomaly:\n          ((partialSpam.confidenceMetrics as Record<string, unknown>)\n            ?.engagementAnomaly as number) ||\n          defaultAnalysis.spamAnalysis.confidenceMetrics.engagementAnomaly,\n        promotionalIntent:\n          ((partialSpam.confidenceMetrics as Record<string, unknown>)\n            ?.promotionalIntent as number) ||\n          defaultAnalysis.spamAnalysis.confidenceMetrics.promotionalIntent,\n        accountTrustSignals:\n          ((partialSpam.confidenceMetrics as Record<string, unknown>)\n            ?.accountTrustSignals as number) ||\n          defaultAnalysis.spamAnalysis.confidenceMetrics.accountTrustSignals,\n      },\n    };\n  }\n\n  // Handle marketing insights\n  if (\n    'marketingInsights' in partialAnalysis &&\n    partialAnalysis.marketingInsights &&\n    typeof partialAnalysis.marketingInsights === 'object'\n  ) {\n    const partialMarketing = partialAnalysis.marketingInsights as Record<\n      string,\n      unknown\n    >;\n    result.marketingInsights = {\n      targetAudience: Array.isArray(partialMarketing.targetAudience)\n        ? partialMarketing.targetAudience\n        : defaultAnalysis.marketingInsights.targetAudience,\n      keyTakeaways: Array.isArray(partialMarketing.keyTakeaways)\n        ? partialMarketing.keyTakeaways\n        : defaultAnalysis.marketingInsights.keyTakeaways,\n      contentStrategies: {\n        whatWorked: Array.isArray(\n          (partialMarketing.contentStrategies as Record<string, unknown>)\n            ?.whatWorked,\n        )\n          ? ((partialMarketing.contentStrategies as Record<string, unknown>)\n              ?.whatWorked as string[])\n          : defaultAnalysis.marketingInsights.contentStrategies.whatWorked,\n        improvement: Array.isArray(\n          (partialMarketing.contentStrategies as Record<string, unknown>)\n            ?.improvement,\n        )\n          ? ((partialMarketing.contentStrategies as Record<string, unknown>)\n              ?.improvement as string[])\n          : defaultAnalysis.marketingInsights.contentStrategies.improvement,\n      },\n      trendAlignment: {\n        currentTrends: Array.isArray(\n          (partialMarketing.trendAlignment as Record<string, unknown>)\n            ?.currentTrends,\n        )\n          ? ((partialMarketing.trendAlignment as Record<string, unknown>)\n              ?.currentTrends as string[])\n          : defaultAnalysis.marketingInsights.trendAlignment.currentTrends,\n        emergingOpportunities: Array.isArray(\n          (partialMarketing.trendAlignment as Record<string, unknown>)\n            ?.emergingOpportunities,\n        )\n          ? ((partialMarketing.trendAlignment as Record<string, unknown>)\n              ?.emergingOpportunities as string[])\n          : defaultAnalysis.marketingInsights.trendAlignment\n              .emergingOpportunities,\n        relevanceScore:\n          typeof (partialMarketing.trendAlignment as Record<string, unknown>)\n            ?.relevanceScore === 'number'\n            ? ((partialMarketing.trendAlignment as Record<string, unknown>)\n                ?.relevanceScore as number)\n            : defaultAnalysis.marketingInsights.trendAlignment.relevanceScore,\n      },\n      copywriting: {\n        effectiveElements: Array.isArray(\n          (partialMarketing.copywriting as Record<string, unknown>)\n            ?.effectiveElements,\n        )\n          ? ((partialMarketing.copywriting as Record<string, unknown>)\n              ?.effectiveElements as string[])\n          : defaultAnalysis.marketingInsights.copywriting.effectiveElements,\n        hooks: Array.isArray(\n          (partialMarketing.copywriting as Record<string, unknown>)?.hooks,\n        )\n          ? ((partialMarketing.copywriting as Record<string, unknown>)\n              ?.hooks as string[])\n          : defaultAnalysis.marketingInsights.copywriting.hooks,\n        callToAction: {\n          present:\n            typeof (\n              (partialMarketing.copywriting as Record<string, unknown>)\n                ?.callToAction as Record<string, unknown>\n            )?.present === 'boolean'\n              ? ((\n                  (partialMarketing.copywriting as Record<string, unknown>)\n                    ?.callToAction as Record<string, unknown>\n                )?.present as boolean)\n              : defaultAnalysis.marketingInsights.copywriting.callToAction\n                  .present,\n          type:\n            ((\n              (partialMarketing.copywriting as Record<string, unknown>)\n                ?.callToAction as Record<string, unknown>\n            )?.type as string) ||\n            defaultAnalysis.marketingInsights.copywriting.callToAction.type,\n          effectiveness:\n            typeof (\n              (partialMarketing.copywriting as Record<string, unknown>)\n                ?.callToAction as Record<string, unknown>\n            )?.effectiveness === 'number'\n              ? ((\n                  (partialMarketing.copywriting as Record<string, unknown>)\n                    ?.callToAction as Record<string, unknown>\n                )?.effectiveness as number)\n              : defaultAnalysis.marketingInsights.copywriting.callToAction\n                  .effectiveness,\n        },\n      },\n    };\n  } else {\n    elizaLogger.warn(\n      '[Tweet Analysis] Marketing insights missing or invalid, using defaults',\n      {\n        hadMarketingInsights: 'marketingInsights' in partialAnalysis,\n        marketingInsightsType: typeof partialAnalysis.marketingInsights,\n      },\n    );\n  }\n\n  // Handle actionable recommendations\n  if (\n    'actionableRecommendations' in partialAnalysis &&\n    partialAnalysis.actionableRecommendations\n  ) {\n    const partialRecs = partialAnalysis.actionableRecommendations as Record<\n      string,\n      unknown\n    >;\n    result.actionableRecommendations = {\n      engagementStrategies: Array.isArray(partialRecs.engagementStrategies)\n        ? partialRecs.engagementStrategies\n        : defaultAnalysis.actionableRecommendations.engagementStrategies,\n      contentCreation: Array.isArray(partialRecs.contentCreation)\n        ? partialRecs.contentCreation\n        : defaultAnalysis.actionableRecommendations.contentCreation,\n      networkBuilding: Array.isArray(partialRecs.networkBuilding)\n        ? partialRecs.networkBuilding\n        : defaultAnalysis.actionableRecommendations.networkBuilding,\n    };\n  }\n\n  elizaLogger.info('[Tweet Processing] Repaired analysis response');\n  elizaLogger.debug({\n    wasRepaired: true,\n    hadContentAnalysis: 'contentAnalysis' in partialAnalysis,\n    hadSpamAnalysis: 'spamAnalysis' in partialAnalysis,\n    hadMarketingInsights: 'marketingInsights' in partialAnalysis,\n    hadActionableRecommendations:\n      'actionableRecommendations' in partialAnalysis,\n  });\n  return result;\n}\n\n/**\n * Extracts and repairs a TweetAnalysis from an AI response object.\n * Handles various response formats and attempts to extract valid JSON.\n * Falls back to default values if extraction fails.\n */\nexport function extractAndRepairAnalysis(analysis: unknown): TweetAnalysis {\n  let parsedAnalysis: TweetAnalysis;\n\n  // Try all possible response formats, from most likely to least likely\n  if (typeof analysis === 'string') {\n    // Case 1: JSON string - try to parse it first\n    try {\n      // Clean the string of any potential invalid characters\n      let cleanedJson = analysis.trim();\n\n      // Remove any non-JSON content that might be prefixing or suffixing the JSON\n      if (cleanedJson.includes('{')) {\n        const firstBrace = cleanedJson.indexOf('{');\n        const lastBrace = cleanedJson.lastIndexOf('}');\n        if (firstBrace !== -1 && lastBrace !== -1 && lastBrace > firstBrace) {\n          cleanedJson = cleanedJson.substring(firstBrace, lastBrace + 1);\n        }\n      }\n\n      // Handle special characters and escape sequences\n      cleanedJson = cleanedJson\n        .replace(/[^\\x20-\\x7E]+/g, '') // Remove non-printable characters\n        .replace(/\\\\+\"/g, '\\\\\"') // Fix escaped quotes\n        .replace(/\\n/g, '\\\\n') // Handle newlines\n        .replace(/\\r/g, '\\\\r') // Handle carriage returns\n        .replace(/\\t/g, '\\\\t'); // Handle tabs\n\n      const parsed = JSON.parse(cleanedJson);\n      if (parsed && typeof parsed === 'object' && 'contentAnalysis' in parsed) {\n        elizaLogger.info('[Tweet Analysis] Successfully parsed JSON string', {\n          jsonLength: cleanedJson.length,\n          hasContentAnalysis: Boolean(parsed.contentAnalysis),\n          hasMarketingInsights: Boolean(parsed.marketingInsights),\n          hasSpamAnalysis: Boolean(parsed.spamAnalysis),\n        });\n        parsedAnalysis = repairAnalysisResponse(parsed);\n      } else {\n        elizaLogger.warn(\n          '[Tweet Analysis] Parsed JSON missing required fields',\n          {\n            parsedKeys: Object.keys(parsed || {}),\n          },\n        );\n        parsedAnalysis = repairAnalysisResponse(parsed || {});\n      }\n    } catch (jsonError) {\n      elizaLogger.error('[Tweet Analysis] Failed to parse JSON string', {\n        error:\n          jsonError instanceof Error ? jsonError.message : String(jsonError),\n        errorStack: jsonError instanceof Error ? jsonError.stack : undefined,\n        inputType: typeof analysis,\n        inputLength: typeof analysis === 'string' ? analysis.length : 0,\n        inputSample:\n          typeof analysis === 'string'\n            ? `${analysis.substring(0, 100)}...`\n            : '',\n      });\n\n      // Fallback: Try a more aggressive approach to extract JSON\n      try {\n        const stringAnalysis = analysis as string;\n        const jsonMatch = stringAnalysis.match(/{[\\s\\S]*}/);\n        if (jsonMatch?.[0]) {\n          const extractedJson = jsonMatch[0];\n          const extracted = JSON.parse(extractedJson);\n          elizaLogger.info('[Tweet Analysis] Recovered JSON using regex', {\n            recoveredLength: extractedJson.length,\n          });\n          parsedAnalysis = repairAnalysisResponse(extracted);\n        } else {\n          throw new Error('No JSON object found in string');\n        }\n      } catch (fallbackError) {\n        elizaLogger.error('[Tweet Analysis] Failed fallback JSON extraction', {\n          fallbackError:\n            fallbackError instanceof Error\n              ? fallbackError.message\n              : String(fallbackError),\n        });\n        parsedAnalysis = createDefaultAnalysis();\n      }\n    }\n  } else if (\n    typeof analysis === 'object' &&\n    analysis !== null &&\n    'contentAnalysis' in analysis\n  ) {\n    // Case 2: Direct object with expected fields\n    parsedAnalysis = repairAnalysisResponse(\n      analysis as Record<string, unknown>,\n    );\n    elizaLogger.info(\n      '[Tweet Analysis] Using direct structured analysis object',\n    );\n    elizaLogger.debug({\n      hasContentAnalysis: 'contentAnalysis' in analysis,\n      hasMarketingInsights: 'marketingInsights' in analysis,\n      hasSpamAnalysis: 'spamAnalysis' in analysis,\n      hasActionableRecommendations: 'actionableRecommendations' in analysis,\n    });\n  } else {\n    // Case 3: Unknown format - try to repair/convert whatever we got\n    elizaLogger.warn('[Tweet Analysis] Response in unexpected format', {\n      responseType: typeof analysis,\n      keys:\n        typeof analysis === 'object' && analysis !== null\n          ? Object.keys(analysis)\n          : [],\n    });\n    parsedAnalysis = createDefaultAnalysis();\n  }\n\n  // Do a final check for required fields and repair if needed\n  if (!parsedAnalysis.contentAnalysis || !parsedAnalysis.marketingInsights) {\n    elizaLogger.warn(\n      '[Tweet Analysis] Analysis incomplete after parsing, repairing',\n      {\n        hasContentAnalysis: Boolean(parsedAnalysis.contentAnalysis),\n        hasMarketingInsights: Boolean(parsedAnalysis.marketingInsights),\n        hasSpamAnalysis: Boolean(parsedAnalysis.spamAnalysis),\n        hasActionableRecommendations: Boolean(\n          parsedAnalysis.actionableRecommendations,\n        ),\n      },\n    );\n    parsedAnalysis = repairAnalysisResponse(\n      parsedAnalysis as unknown as Partial<Record<string, unknown>>,\n    );\n  }\n\n  return parsedAnalysis;\n}\n","import { tweetQueries } from '@/extensions/src/db/queries.js';\nimport { elizaLogger } from '@elizaos/core';\nimport type { SpamUser } from '../types/twitter.js';\n\n/**\n * Gets the spam data for a user\n * @param userId The ID of the user to get spam data for\n * @returns The user's spam data or null if not found\n */\nexport async function getUserSpamData(\n  userId: string,\n): Promise<SpamUser | null> {\n  try {\n    return await tweetQueries.getSpamUser(userId);\n  } catch (error) {\n    elizaLogger.error('[Spam Processing] Error getting spam data:', {\n      error: error instanceof Error ? error.message : String(error),\n      userId,\n    });\n    return null;\n  }\n}\n\n/**\n * Updates the spam data for a user based on their tweet analysis\n * @param userId The ID of the user to update\n * @param spamScore The spam score from the analysis\n * @param reasons The reasons for the spam score\n * @param context The logging context\n */\nexport async function updateUserSpamData(\n  userId: string,\n  spamScore: number,\n  reasons: string[],\n  context: string,\n): Promise<void> {\n  try {\n    await tweetQueries.updateSpamUser(userId, spamScore, reasons);\n\n    elizaLogger.info(`${context} Updated spam data for user ${userId}`);\n    elizaLogger.debug({\n      spamScore,\n      reasons,\n    });\n  } catch (error) {\n    elizaLogger.error(`${context} Error updating spam data:`, {\n      error: error instanceof Error ? error.message : String(error),\n      userId,\n    });\n    throw error;\n  }\n}\n","import { ModelClass, messageCompletionFooter } from '@elizaos/core';\n\ninterface TweetAnalysisTemplateInput {\n  text: string;\n  public_metrics: {\n    like_count: number;\n    retweet_count: number;\n    reply_count: number;\n  };\n  topics: string[];\n  topicWeights: {\n    topic: string;\n    weight: number;\n  }[];\n  isThreadMerged?: boolean;\n  threadSize?: number;\n  originalText?: string;\n  modelClass?: ModelClass;\n}\n\nexport function tweetAnalysisTemplate(input: TweetAnalysisTemplateInput) {\n  const {\n    text,\n    public_metrics,\n    topicWeights,\n    isThreadMerged,\n    threadSize,\n    originalText,\n  } = input;\n\n  return {\n    context: `# Task: Analyze Tweet Content\nYou are a PhD-level expert in social media marketing and AI prompt engineering with a deep understanding of Twitter engagement patterns and content effectiveness.\n\n# Content to Analyze\nTweet${isThreadMerged ? ' Thread' : ''}:\n${text}\n\n${isThreadMerged ? `\\nThread Context: This is a merged thread of ${threadSize} tweets. Original first tweet was: \"${originalText}\"` : ''}\n\n# Metrics\nPublic Engagement:\n- Likes: ${public_metrics.like_count}\n- Retweets: ${public_metrics.retweet_count}\n- Replies: ${public_metrics.reply_count}\n\nTopics of Interest (with weights):\n${topicWeights.map((tw) => `- ${tw.topic} (${tw.weight})`).join('\\n')}\n\n# Scoring Guidelines\nAll numeric scores should be between 0 and 1, interpreted as follows:\n\nContent Analysis Scores:\n- confidence: 0 = very uncertain, 1 = highly confident in analysis\n- qualityMetrics.relevance: 0 = irrelevant to topics, 1 = perfectly aligned with topics\n- qualityMetrics.originality: 0 = entirely derivative, 1 = highly original content\n- qualityMetrics.clarity: 0 = confusing/unclear, 1 = crystal clear message\n- qualityMetrics.authenticity: 0 = clearly inauthentic, 1 = genuinely authentic\n- qualityMetrics.valueAdd: 0 = no value to readers, 1 = exceptional value\n\nEngagement Scores:\n- engagementAnalysis.overallScore: 0 = poor engagement, 1 = excellent engagement\n- engagementAnalysis.virality: 0 = unlikely to spread, 1 = highly viral potential\n- engagementAnalysis.conversionPotential: 0 = unlikely to convert, 1 = high conversion probability\n- engagementAnalysis.communityBuilding: 0 = isolating content, 1 = strong community building\n- engagementAnalysis.thoughtLeadership: 0 = follower content, 1 = industry-leading insight\n\nMarketing Scores:\n- trendAlignment.relevanceScore: 0 = disconnected from trends, 1 = perfectly aligned with trends\n- copywriting.callToAction.effectiveness: 0 = ineffective CTA, 1 = highly compelling CTA\n\nSpam Analysis Scores:\n- spamScore: 0 = definitely not spam, 1 = certainly spam\n- confidenceMetrics.linguisticRisk: 0 = natural language, 1 = highly suspicious patterns\n- confidenceMetrics.topicMismatch: 0 = perfectly aligned topics, 1 = completely unrelated\n- confidenceMetrics.engagementAnomaly: 0 = normal engagement pattern, 1 = highly suspicious\n- confidenceMetrics.promotionalIntent: 0 = non-promotional, 1 = purely promotional\n- confidenceMetrics.accountTrustSignals: 0 = highly trustworthy, 1 = untrustworthy\n\n# Instructions\nAnalyze this tweet${isThreadMerged ? ' thread' : ''} and provide strategic insights for social media engagement. Use the scoring guidelines above to assign appropriate values to all numeric fields.\n\nResponse format MUST be a JSON object with the following structure:\n\\`\\`\\`json\n{\n  \"contentAnalysis\": {\n    \"type\": \"news|opinion|announcement|question|promotion|thought_leadership|educational|entertainment|other\",\n    \"format\": \"statement|question|poll|call_to_action|thread|image_focus|video_focus|link_share|other\",\n    \"sentiment\": \"positive|negative|neutral|controversial|inspirational\",\n    \"confidence\": 0.5,\n    \"primaryTopics\": [\"topic1\", \"topic2\"],\n    \"secondaryTopics\": [\"topic3\", \"topic4\"],\n    \"entities\": {\n      \"people\": [\"person1\", \"person2\"],\n      \"organizations\": [\"org1\", \"org2\"],\n      \"products\": [\"product1\", \"product2\"],\n      \"locations\": [\"location1\", \"location2\"],\n      \"events\": [\"event1\", \"event2\"]\n    },\n    \"hashtagsUsed\": [\"hashtag1\", \"hashtag2\"],\n    \"qualityMetrics\": {\n      \"relevance\": 0.5,\n      \"originality\": 0.5,\n      \"clarity\": 0.5,\n      \"authenticity\": 0.5,\n      \"valueAdd\": 0.5\n    },\n    \"engagementAnalysis\": {\n      \"overallScore\": 0.5,\n      \"virality\": 0.5,\n      \"conversionPotential\": 0.5,\n      \"communityBuilding\": 0.5,\n      \"thoughtLeadership\": 0.5\n    }\n  },\n  \"marketingInsights\": {\n    \"targetAudience\": [\"audience1\", \"audience2\"],\n    \"keyTakeaways\": [\"takeaway1\", \"takeaway2\"],\n    \"contentStrategies\": {\n      \"whatWorked\": [\"element1\", \"element2\"],\n      \"improvement\": [\"suggestion1\", \"suggestion2\"]\n    },\n    \"trendAlignment\": {\n      \"currentTrends\": [\"trend1\", \"trend2\"],\n      \"emergingOpportunities\": [\"opportunity1\", \"opportunity2\"],\n      \"relevanceScore\": 0.5\n    },\n    \"copywriting\": {\n      \"effectiveElements\": [\"element1\", \"element2\"],\n      \"hooks\": [\"hook1\", \"hook2\"],\n      \"callToAction\": {\n        \"present\": true,\n        \"type\": \"follow|click|share|reply|other\",\n        \"effectiveness\": 0.5\n      }\n    }\n  },\n  \"actionableRecommendations\": {\n    \"engagementStrategies\": [\n      {\n        \"action\": \"description of specific action to take\",\n        \"rationale\": \"brief explanation of why\",\n        \"priority\": \"high|medium|low\",\n        \"expectedOutcome\": \"brief description of expected result\"\n      }\n    ],\n    \"contentCreation\": [\n      {\n        \"contentType\": \"type of content to create\",\n        \"focus\": \"specific focus area\",\n        \"keyElements\": [\"element1\", \"element2\"]\n      }\n    ],\n    \"networkBuilding\": [\n      {\n        \"targetType\": \"user|community|hashtag\",\n        \"target\": \"specific target name\",\n        \"approach\": \"brief description of approach\",\n        \"value\": \"description of potential value\"\n      }\n    ]\n  },\n  \"spamAnalysis\": {\n    \"isSpam\": false,\n    \"spamScore\": 0.1,\n    \"reasons\": [\"reason1\", \"reason2\"],\n    \"confidenceMetrics\": {\n      \"linguisticRisk\": 0.1,\n      \"topicMismatch\": 0.1,\n      \"engagementAnomaly\": 0.1,\n      \"promotionalIntent\": 0.1,\n      \"accountTrustSignals\": 0.1\n    }\n  }\n}\n\\`\\`\\`\n${messageCompletionFooter}`,\n    modelClass: input.modelClass || ModelClass.MEDIUM,\n  };\n}\n","import { z } from 'zod';\n\nexport const qualityMetricsSchema = z.object({\n  relevance: z.number().min(0).max(1),\n  originality: z.number().min(0).max(1),\n  clarity: z.number().min(0).max(1),\n  authenticity: z.number().min(0).max(1),\n  valueAdd: z.number().min(0).max(1),\n});\n\nexport const engagementAnalysisSchema = z.object({\n  overallScore: z.number().min(0).max(1),\n  virality: z.number().min(0).max(1),\n  conversionPotential: z.number().min(0).max(1),\n  communityBuilding: z.number().min(0).max(1),\n  thoughtLeadership: z.number().min(0).max(1),\n});\n\nexport const entitiesSchema = z.object({\n  people: z.array(z.string()),\n  organizations: z.array(z.string()),\n  products: z.array(z.string()),\n  locations: z.array(z.string()),\n  events: z.array(z.string()),\n});\n\nexport const contentAnalysisSchema = z.object({\n  type: z.enum([\n    'news',\n    'opinion',\n    'announcement',\n    'question',\n    'promotion',\n    'thought_leadership',\n    'educational',\n    'entertainment',\n    'other',\n  ]),\n  format: z.enum([\n    'statement',\n    'question',\n    'poll',\n    'call_to_action',\n    'thread',\n    'image_focus',\n    'video_focus',\n    'link_share',\n    'other',\n  ]),\n  sentiment: z.enum([\n    'positive',\n    'negative',\n    'neutral',\n    'controversial',\n    'inspirational',\n  ]),\n  confidence: z.number().min(0).max(1),\n  primaryTopics: z.array(z.string()),\n  secondaryTopics: z.array(z.string()),\n  entities: entitiesSchema,\n  hashtagsUsed: z.array(z.string()),\n  qualityMetrics: qualityMetricsSchema,\n  engagementAnalysis: engagementAnalysisSchema,\n});\n\nexport const callToActionSchema = z.object({\n  present: z.boolean(),\n  type: z.enum(['follow', 'click', 'share', 'reply', 'other', 'none']),\n  effectiveness: z.number().min(0).max(1),\n});\n\nexport const copywritingSchema = z.object({\n  effectiveElements: z.array(z.string()),\n  hooks: z.array(z.string()),\n  callToAction: callToActionSchema,\n});\n\nexport const trendAlignmentSchema = z.object({\n  currentTrends: z.array(z.string()),\n  emergingOpportunities: z.array(z.string()),\n  relevanceScore: z.number().min(0).max(1),\n});\n\nexport const contentStrategiesSchema = z.object({\n  whatWorked: z.array(z.string()),\n  improvement: z.array(z.string()),\n});\n\nexport const marketingInsightsSchema = z.object({\n  targetAudience: z.array(z.string()),\n  keyTakeaways: z.array(z.string()),\n  contentStrategies: contentStrategiesSchema,\n  trendAlignment: trendAlignmentSchema,\n  copywriting: copywritingSchema,\n});\n\nexport const confidenceMetricsSchema = z.object({\n  linguisticRisk: z.number().min(0).max(1),\n  topicMismatch: z.number().min(0).max(1),\n  engagementAnomaly: z.number().min(0).max(1),\n  promotionalIntent: z.number().min(0).max(1),\n  accountTrustSignals: z.number().min(0).max(1),\n});\n\nexport const spamAnalysisSchema = z.object({\n  isSpam: z.boolean(),\n  spamScore: z.number().min(0).max(1),\n  reasons: z.array(z.string()),\n  confidenceMetrics: confidenceMetricsSchema,\n});\n\nexport const engagementStrategySchema = z.object({\n  action: z.string(),\n  rationale: z.string(),\n  priority: z.enum(['high', 'medium', 'low']),\n  expectedOutcome: z.string(),\n});\n\nexport const contentCreationSchema = z.object({\n  contentType: z.string(),\n  focus: z.string(),\n  keyElements: z.array(z.string()),\n});\n\nexport const networkBuildingSchema = z.object({\n  targetType: z.enum(['user', 'community', 'hashtag']),\n  target: z.string(),\n  approach: z.string(),\n  value: z.string(),\n});\n\nexport const actionableRecommendationsSchema = z.object({\n  engagementStrategies: z.array(engagementStrategySchema),\n  contentCreation: z.array(contentCreationSchema),\n  networkBuilding: z.array(networkBuildingSchema),\n});\n\nexport const tweetAnalysisSchema = z.object({\n  contentAnalysis: contentAnalysisSchema,\n  marketingInsights: marketingInsightsSchema,\n  actionableRecommendations: actionableRecommendationsSchema,\n  spamAnalysis: spamAnalysisSchema,\n});\n","import { tweetQueries } from '@/extensions/src/db/queries';\nimport { extractAndRepairAnalysis } from '@/helpers/repair-tweet-analysis-helper';\nimport { updateUserSpamData } from '@/helpers/spam-helper';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport { tweetAnalysisTemplate } from '@/templates/analysis';\nimport type { TweetAnalysis } from '@/types/analysis';\nimport { tweetAnalysisSchema } from '@/types/response/tweet-analysis';\nimport type { TopicWeightRow } from '@/types/topic';\nimport type { DatabaseTweet } from '@/types/twitter';\nimport {\n  type IAgentRuntime,\n  type Memory,\n  ModelClass,\n  composeContext,\n  elizaLogger,\n  generateObject,\n  stringToUuid,\n} from '@elizaos/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport { updateTopicWeights } from '../topic-weights/topics';\nimport { storeAccountInfo } from './process-accounts';\nimport { extractAndStoreKnowledge } from './process-knowledge';\nimport { fetchAndFormatKnowledge } from './process-knowledge';\n\n/**\n * Processes a single tweet by analyzing its content, detecting spam,\n * and updating relevant data in the database\n */\nexport async function processSingleTweet(\n  runtime: IAgentRuntime,\n  twitterService: TwitterService,\n  tweet: DatabaseTweet,\n  topicWeights: TopicWeightRow[],\n  logPrefix = '[Tweet Analysis]',\n): Promise<void> {\n  try {\n    elizaLogger.info(\n      `${logPrefix} Starting to process tweet ${tweet.tweet_id}`,\n    );\n\n    // Store tweet in cache using Twitter's numeric ID\n    await twitterService.cacheTweet({\n      id: tweet.tweet_id, // Use Twitter's numeric ID here\n      text: tweet.text,\n      userId: tweet.userId,\n      username: tweet.username,\n      name: tweet.name,\n      timestamp: tweet.timestamp,\n      timeParsed: tweet.timeParsed,\n      likes: tweet.likes,\n      retweets: tweet.retweets,\n      replies: tweet.replies,\n      views: tweet.views,\n      bookmarkCount: tweet.bookmarkCount,\n      conversationId: tweet.conversationId,\n      permanentUrl: tweet.permanentUrl,\n      html: tweet.html,\n      inReplyToStatus: tweet.inReplyToStatus,\n      inReplyToStatusId: tweet.inReplyToStatusId,\n      quotedStatus: tweet.quotedStatus,\n      quotedStatusId: tweet.quotedStatusId,\n      retweetedStatus: tweet.retweetedStatus,\n      retweetedStatusId: tweet.retweetedStatusId,\n      thread: tweet.thread,\n      isQuoted: tweet.isQuoted,\n      isPin: tweet.isPin,\n      isReply: tweet.isReply,\n      isRetweet: tweet.isRetweet,\n      isSelfThread: tweet.isSelfThread,\n      sensitiveContent: tweet.sensitiveContent,\n      hashtags: tweet.hashtags,\n      mentions: tweet.mentions,\n      photos: tweet.photos,\n      urls: tweet.urls,\n      videos: tweet.videos,\n      place: tweet.place,\n      poll: tweet.poll,\n    });\n\n    const template = tweetAnalysisTemplate({\n      text: tweet.text, // This is the merged text\n      public_metrics: {\n        like_count: tweet.likes || 0,\n        retweet_count: tweet.retweets || 0,\n        reply_count: tweet.replies || 0,\n      },\n      topics: runtime.character.topics || [],\n      topicWeights: topicWeights.map((tw) => ({\n        topic: tw.topic,\n        weight: tw.weight,\n      })),\n      isThreadMerged: tweet.isThreadMerged,\n      threadSize: tweet.threadSize,\n      originalText: tweet.originalText,\n    });\n\n    // Convert Twitter user ID to a consistent UUID for the memory context\n    const memoryUserId = stringToUuid(`twitter-user-${tweet.userId}`);\n\n    try {\n      const state = await runtime.composeState(\n        {\n          content: {\n            text: tweet.text,\n            isThreadMerged: tweet.isThreadMerged,\n            threadSize: tweet.threadSize,\n            originalText: tweet.originalText,\n          },\n          userId: memoryUserId,\n          agentId: runtime.agentId,\n          roomId: uuidv4(),\n        } as Memory,\n        {\n          twitterService,\n          twitterUserName: runtime.getSetting('TWITTER_USERNAME') || '',\n          currentPost: tweet.text,\n        },\n      );\n\n      // Fetch and format knowledge context\n      const knowledgeContext = await fetchAndFormatKnowledge(\n        runtime,\n        tweet,\n        `${logPrefix} [Knowledge]`,\n      );\n\n      const context = composeContext({\n        state,\n        template: template.context + (knowledgeContext || ''),\n      });\n\n      try {\n        const { object } = await generateObject({\n          runtime,\n          context,\n          modelClass: ModelClass.SMALL,\n          schema: tweetAnalysisSchema,\n        });\n\n        const analysis = object as TweetAnalysis;\n        elizaLogger.info(`${logPrefix} Generated analysis`);\n        elizaLogger.debug({\n          contentType: analysis.contentAnalysis.type,\n          sentiment: analysis.contentAnalysis.sentiment,\n          isSpam: analysis.spamAnalysis.isSpam,\n        });\n\n        // Validate and process the analysis response\n        if (!analysis || typeof analysis !== 'object') {\n          elizaLogger.error(`${logPrefix} Invalid analysis response:`, {\n            analysis,\n            tweetId: tweet.tweet_id,\n          });\n          throw new Error('Invalid analysis response structure');\n        }\n\n        const parsedAnalysis = extractAndRepairAnalysis(analysis);\n\n        // Update spam user data regardless of spam status\n        await updateUserSpamData(\n          tweet.userId?.toString() || '',\n          parsedAnalysis.spamAnalysis.spamScore,\n          parsedAnalysis.spamAnalysis.reasons,\n          logPrefix,\n        );\n\n        // Check if tweet is spam\n        const isSpam =\n          parsedAnalysis.spamAnalysis.isSpam === true &&\n          parsedAnalysis.spamAnalysis.spamScore > 0.7;\n\n        if (isSpam) {\n          await tweetQueries.updateTweetStatus(tweet.tweet_id, 'spam');\n          elizaLogger.warn(\n            `${logPrefix} Tweet ${tweet.tweet_id} identified as spam - skipping analysis`,\n          );\n          elizaLogger.debug({\n            tweetId: tweet.tweet_id,\n            spamScore: parsedAnalysis.spamAnalysis.spamScore,\n            reasons: parsedAnalysis.spamAnalysis.reasons,\n            isThreadMerged: tweet.isThreadMerged,\n            threadSize: tweet.threadSize,\n          });\n          return;\n        }\n\n        // If tweet is not spam, add author to target accounts\n        if (tweet.username && tweet.userId) {\n          elizaLogger.info(\n            `${logPrefix} Upserting non-spam tweet author @${tweet.username} to target accounts`,\n          );\n        }\n\n        // Store analysis for non-spam tweets\n        const analysisId = stringToUuid(uuidv4());\n\n        // Process analysis in a transaction\n        try {\n          await tweetQueries.processTweetsInTransaction(async (client) => {\n            try {\n              elizaLogger.info(\n                `${logPrefix} Saving analysis for tweet ${tweet.tweet_id}`,\n              );\n              elizaLogger.debug({\n                analysisId: analysisId.toString(),\n                tweetId: tweet.tweet_id,\n                isThreadMerged: tweet.isThreadMerged,\n                threadSize: tweet.threadSize,\n                textLength: tweet.text.length,\n                originalTextLength: tweet.originalText.length,\n              });\n\n              // Insert the tweet analysis\n              await tweetQueries.insertTweetAnalysis(\n                analysisId,\n                tweet.tweet_id,\n                parsedAnalysis.contentAnalysis.type,\n                parsedAnalysis.contentAnalysis.sentiment,\n                parsedAnalysis.contentAnalysis.confidence,\n                {\n                  likes: tweet.likes || 0,\n                  retweets: tweet.retweets || 0,\n                  replies: tweet.replies || 0,\n                  spamScore: parsedAnalysis.spamAnalysis.spamScore,\n                  spamViolations: parsedAnalysis.spamAnalysis.reasons,\n                  isThreadMerged: tweet.isThreadMerged,\n                  threadSize: tweet.threadSize,\n                  originalTextLength: tweet.originalText.length,\n                  mergedTextLength: tweet.text.length,\n                  hashtagsUsed:\n                    parsedAnalysis.contentAnalysis.hashtagsUsed || [],\n                  engagementMetrics:\n                    parsedAnalysis.contentAnalysis.engagementAnalysis,\n                },\n                // Flatten entities into a single array\n                [\n                  ...(parsedAnalysis.contentAnalysis.entities.people || []),\n                  ...(parsedAnalysis.contentAnalysis.entities.organizations ||\n                    []),\n                  ...(parsedAnalysis.contentAnalysis.entities.products || []),\n                  ...(parsedAnalysis.contentAnalysis.entities.locations || []),\n                  ...(parsedAnalysis.contentAnalysis.entities.events || []),\n                ],\n                // Combine primary and secondary topics\n                [\n                  ...(parsedAnalysis.contentAnalysis.primaryTopics || []),\n                  ...(parsedAnalysis.contentAnalysis.secondaryTopics || []),\n                ],\n                parsedAnalysis.contentAnalysis.engagementAnalysis.overallScore,\n                new Date(tweet.timestamp * 1000),\n                tweet.userId?.toString() || '',\n                tweet.text || '', // Use merged text\n                {\n                  likes: tweet.likes || 0,\n                  retweets: tweet.retweets || 0,\n                  replies: tweet.replies || 0,\n                },\n                {\n                  hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n                  mentions: Array.isArray(tweet.mentions)\n                    ? tweet.mentions.map((mention) => ({\n                        username: mention.username || '',\n                        id: mention.id || '',\n                      }))\n                    : [],\n                  urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n                  topicWeights: topicWeights.map((tw) => ({\n                    topic: tw.topic,\n                    weight: tw.weight,\n                  })),\n                  entities: parsedAnalysis.contentAnalysis.entities, // Store full entity structure\n                },\n                parsedAnalysis.spamAnalysis,\n                {\n                  relevance:\n                    parsedAnalysis.contentAnalysis.qualityMetrics.relevance,\n                  quality:\n                    parsedAnalysis.contentAnalysis.qualityMetrics.clarity,\n                  engagement:\n                    parsedAnalysis.contentAnalysis.engagementAnalysis\n                      .overallScore,\n                  authenticity:\n                    parsedAnalysis.contentAnalysis.qualityMetrics.authenticity,\n                  valueAdd:\n                    parsedAnalysis.contentAnalysis.qualityMetrics.valueAdd,\n                  callToActionEffectiveness:\n                    parsedAnalysis.marketingInsights?.copywriting?.callToAction\n                      ?.effectiveness || 0,\n                  trendAlignmentScore:\n                    parsedAnalysis.marketingInsights?.trendAlignment\n                      ?.relevanceScore || 0,\n                },\n                parsedAnalysis.contentAnalysis.format,\n                // Store full marketing insights structure\n                {\n                  targetAudience:\n                    parsedAnalysis.marketingInsights?.targetAudience || [],\n                  keyTakeaways:\n                    parsedAnalysis.marketingInsights?.keyTakeaways || [],\n                  contentStrategies: {\n                    whatWorked:\n                      parsedAnalysis.marketingInsights?.contentStrategies\n                        ?.whatWorked || [],\n                    improvement:\n                      parsedAnalysis.marketingInsights?.contentStrategies\n                        ?.improvement || [],\n                  },\n                  trendAlignment: {\n                    currentTrends:\n                      parsedAnalysis.marketingInsights?.trendAlignment\n                        ?.currentTrends || [],\n                    emergingOpportunities:\n                      parsedAnalysis.marketingInsights?.trendAlignment\n                        ?.emergingOpportunities || [],\n                    relevanceScore:\n                      parsedAnalysis.marketingInsights?.trendAlignment\n                        ?.relevanceScore || 0,\n                  },\n                  copywriting: {\n                    effectiveElements:\n                      parsedAnalysis.marketingInsights?.copywriting\n                        ?.effectiveElements || [],\n                    hooks:\n                      parsedAnalysis.marketingInsights?.copywriting?.hooks ||\n                      [],\n                    callToAction: {\n                      present:\n                        parsedAnalysis.marketingInsights?.copywriting\n                          ?.callToAction?.present || false,\n                      type:\n                        parsedAnalysis.marketingInsights?.copywriting\n                          ?.callToAction?.type || 'none',\n                      effectiveness:\n                        parsedAnalysis.marketingInsights?.copywriting\n                          ?.callToAction?.effectiveness || 0,\n                    },\n                  },\n                },\n                client,\n              );\n\n              elizaLogger.info(\n                `${logPrefix} Successfully saved analysis for tweet ${tweet.tweet_id}`,\n              );\n\n              // Update tweet status to analyzed using Twitter's ID\n              await tweetQueries.updateTweetStatus(\n                tweet.tweet_id,\n                'analyzed',\n                undefined,\n                client,\n              );\n\n              // Update topic weights with the new analysis\n              const allTopics = [\n                ...(parsedAnalysis.contentAnalysis.primaryTopics || []),\n                ...(parsedAnalysis.contentAnalysis.secondaryTopics || []),\n              ];\n\n              await updateTopicWeights(\n                allTopics,\n                parsedAnalysis,\n                tweet,\n                logPrefix,\n              );\n\n              // Process mentions from the merged tweet and add to target accounts, including topic relationships\n              await storeAccountInfo(tweet, allTopics);\n\n              // Extract and store knowledge from tweet analysis\n              try {\n                await extractAndStoreKnowledge(\n                  runtime,\n                  tweet,\n                  parsedAnalysis,\n                  `${logPrefix} [Knowledge]`,\n                );\n                elizaLogger.info(\n                  `${logPrefix} Successfully extracted knowledge from tweet ${tweet.tweet_id}`,\n                );\n              } catch (knowledgeError) {\n                // Log but don't fail the whole process\n                elizaLogger.error(`${logPrefix} Error extracting knowledge:`, {\n                  error:\n                    knowledgeError instanceof Error\n                      ? knowledgeError.message\n                      : String(knowledgeError),\n                  tweetId: tweet.tweet_id,\n                });\n              }\n\n              elizaLogger.info(\n                `${logPrefix} Successfully processed tweet ${tweet.tweet_id}`,\n              );\n              elizaLogger.debug({\n                analysisId: analysisId.toString(),\n                tweetId: tweet.tweet_id,\n                isThreadMerged: tweet.isThreadMerged,\n                textLength: tweet.text.length,\n                originalTextLength: tweet.originalText.length,\n              });\n            } catch (innerError) {\n              elizaLogger.error(`${logPrefix} Error in transaction:`, {\n                error:\n                  innerError instanceof Error\n                    ? innerError.message\n                    : String(innerError),\n                tweetId: tweet.tweet_id,\n                phase: 'analysis_insertion',\n              });\n              throw innerError; // Rethrow to trigger rollback\n            }\n          });\n        } catch (txError) {\n          elizaLogger.error(`${logPrefix} Transaction failed:`, {\n            error: txError instanceof Error ? txError.message : String(txError),\n            tweetId: tweet.tweet_id,\n          });\n\n          // Try to update the status separately to indicate an error\n          try {\n            await tweetQueries.updateTweetStatus(\n              tweet.tweet_id,\n              'error',\n              `Analysis error: ${txError instanceof Error ? txError.message : String(txError)}`,\n            );\n          } catch (statusError) {\n            elizaLogger.error(\n              `${logPrefix} Could not update error status:`,\n              statusError,\n            );\n          }\n        }\n      } catch (aiError) {\n        elizaLogger.error(`${logPrefix} AI analysis error:`, {\n          error: aiError instanceof Error ? aiError.message : String(aiError),\n          tweetId: tweet.tweet_id,\n        });\n\n        // Update tweet status to indicate AI error\n        await tweetQueries.updateTweetStatus(\n          tweet.tweet_id,\n          'error',\n          `AI analysis error: ${aiError instanceof Error ? aiError.message : String(aiError)}`,\n        );\n      }\n    } catch (contextError) {\n      elizaLogger.error(`${logPrefix} Error preparing context:`, {\n        error:\n          contextError instanceof Error\n            ? contextError.message\n            : String(contextError),\n        tweetId: tweet.tweet_id,\n      });\n\n      // Update tweet status to indicate context error\n      await tweetQueries.updateTweetStatus(\n        tweet.tweet_id,\n        'error',\n        `Context error: ${contextError instanceof Error ? contextError.message : String(contextError)}`,\n      );\n    }\n  } catch (error) {\n    elizaLogger.error(\n      `${logPrefix} Error processing tweet:`,\n      error instanceof Error ? error.message : String(error),\n    );\n  }\n}\n","import { tweetQueries } from '@/extensions/src/db/queries.js';\nimport type { TweetAnalysis } from '@/types/analysis.js';\nimport type { EngagementMetrics, TopicWeightRow } from '@/types/topic.js';\nimport type { DatabaseTweet } from '@/types/twitter.js';\nimport { elizaLogger } from '@elizaos/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Calculates a sophisticated weight for a topic based on multiple factors\n */\nfunction calculateTopicWeight(\n  impactScore: number,\n  engagementMetrics: EngagementMetrics,\n  sentiment: string,\n  confidence: number,\n): number {\n  // Sigmoid function for smooth normalization without hard caps\n  // k controls the steepness of the curve (smaller = more gradual)\n  // x0 is the midpoint where sigmoid(x0) = 0.5\n  const sigmoid = (x: number, k: number, x0: number): number =>\n    1 / (1 + Math.exp(-k * (Math.log(x + 1) - Math.log(x0))));\n\n  // Calculate normalized engagement metrics using sigmoid\n  const normalizedEngagement = {\n    // Use logarithmic sigmoid to better handle order-of-magnitude differences\n    likes: sigmoid(engagementMetrics.likes, 1.5, 1000), // x0 = 1000 likes\n    retweets: sigmoid(engagementMetrics.retweets, 1.5, 500), // x0 = 500 retweets\n    replies: sigmoid(engagementMetrics.replies, 1.5, 200), // x0 = 200 replies\n    virality: engagementMetrics.virality,\n    conversionPotential: engagementMetrics.conversionPotential,\n    communityBuilding: engagementMetrics.communityBuilding,\n    thoughtLeadership: engagementMetrics.thoughtLeadership,\n  };\n\n  // Calculate engagement score (30% of total weight)\n  const engagementScore =\n    (normalizedEngagement.likes * 0.3 +\n      normalizedEngagement.retweets * 0.25 +\n      normalizedEngagement.replies * 0.2 +\n      normalizedEngagement.virality * 0.25) *\n    0.3;\n\n  // Calculate influence score (30% of total weight)\n  const influenceScore =\n    (normalizedEngagement.conversionPotential * 0.4 +\n      normalizedEngagement.communityBuilding * 0.3 +\n      normalizedEngagement.thoughtLeadership * 0.3) *\n    0.3;\n\n  // Calculate sentiment score (20% of total weight)\n  const sentimentMultiplier =\n    sentiment === 'positive' ? 1 : sentiment === 'neutral' ? 0.7 : 0.4;\n  const sentimentScore = sentimentMultiplier * 0.2;\n\n  // Impact score and confidence (20% of total weight)\n  const impactConfidenceScore = (impactScore * 0.6 + confidence * 0.4) * 0.2;\n\n  // Combine all scores and ensure it's between 0 and 1\n  return Math.max(\n    0,\n    Math.min(\n      1,\n      engagementScore + influenceScore + sentimentScore + impactConfidenceScore,\n    ),\n  );\n}\n\n/**\n * Updates topic weights based on tweet analysis\n * @param tweetTopics Topics found in the tweet\n * @param tweetAnalysis The full tweet analysis\n * @param tweet The original tweet data\n * @param context The logging context\n */\nexport async function updateTopicWeights(\n  tweetTopics: string[],\n  tweetAnalysis: TweetAnalysis,\n  tweet: DatabaseTweet,\n  context: string,\n): Promise<void> {\n  if (!tweetTopics || tweetTopics.length === 0) {\n    elizaLogger.debug(`${context} No topics to process, skipping`);\n    return;\n  }\n\n  try {\n    // Process each topic found in the tweet\n    for (const topic of tweetTopics) {\n      if (!topic || typeof topic !== 'string') {\n        elizaLogger.warn(`${context} Invalid topic found, skipping`);\n        continue;\n      }\n\n      // Calculate engagement metrics from content analysis\n      const engagementMetrics = {\n        likes: tweet.likes || 0,\n        retweets: tweet.retweets || 0,\n        replies: tweet.replies || 0,\n        virality: tweetAnalysis.contentAnalysis.engagementAnalysis.virality,\n        conversionPotential:\n          tweetAnalysis.contentAnalysis.engagementAnalysis.conversionPotential,\n        communityBuilding:\n          tweetAnalysis.contentAnalysis.engagementAnalysis.communityBuilding,\n        thoughtLeadership:\n          tweetAnalysis.contentAnalysis.engagementAnalysis.thoughtLeadership,\n      };\n\n      // Calculate new weight using our sophisticated formula\n      const weight = calculateTopicWeight(\n        tweetAnalysis.contentAnalysis.engagementAnalysis.overallScore,\n        engagementMetrics,\n        tweetAnalysis.contentAnalysis.sentiment,\n        tweetAnalysis.contentAnalysis.confidence,\n      );\n\n      try {\n        // Create a new topic weight entry\n        const topicWeight: TopicWeightRow = {\n          topic,\n          weight,\n          impact_score:\n            tweetAnalysis.contentAnalysis.engagementAnalysis.overallScore,\n          created_at: new Date(),\n          engagement_metrics: engagementMetrics,\n          sentiment: tweetAnalysis.contentAnalysis.sentiment,\n          confidence: tweetAnalysis.contentAnalysis.confidence,\n          tweet_id: tweet.tweet_id,\n          id: uuidv4(),\n        };\n\n        await tweetQueries.createTopicWeight(topicWeight);\n\n        elizaLogger.debug(\n          `${context} Created new topic weight entry for ${topic}`,\n          {\n            weight,\n            impactScore:\n              tweetAnalysis.contentAnalysis.engagementAnalysis.overallScore,\n            tweetId: tweet.tweet_id,\n          },\n        );\n      } catch (updateError) {\n        elizaLogger.error(\n          `${context} Error creating topic weight for ${topic}:`,\n          {\n            error:\n              updateError instanceof Error\n                ? updateError.message\n                : String(updateError),\n            topic,\n          },\n        );\n      }\n    }\n\n    elizaLogger.info(\n      `${context} Created weight entries for ${tweetTopics.length} topics`,\n    );\n  } catch (error) {\n    elizaLogger.error(`${context} Error processing topic weights:`, {\n      error: error instanceof Error ? error.message : String(error),\n      tweetTopics,\n    });\n  }\n}\n\n/**\n * Gets the most recent topic weights for analysis\n * @param timeframe Optional timeframe in hours to look back (default 24 hours)\n * @returns Array of the most recent topic weights\n */\nexport async function getRecentTopicWeights(\n  timeframe = 24,\n): Promise<TopicWeightRow[]> {\n  try {\n    return await tweetQueries.getRecentTopicWeights(timeframe);\n  } catch (error) {\n    elizaLogger.error(\n      '[Topic Processing] Error getting recent topic weights:',\n      {\n        error: error instanceof Error ? error.message : String(error),\n      },\n    );\n    return [];\n  }\n}\n\n/**\n * Gets aggregated topic weights suitable for search term selection\n * Combines recent engagement with historical data\n * @param timeframeHours Optional timeframe in hours to look back for recent weights\n * @returns Array of topic weights with aggregated scores\n */\nexport async function getAggregatedTopicWeights(\n  timeframeHours = 168, // Default to 1 week\n): Promise<TopicWeightRow[]> {\n  try {\n    elizaLogger.info(\n      `[TopicWeights] Getting aggregated weights for last ${timeframeHours} hours`,\n    );\n\n    // First check if we have any topic weights at all\n    const allWeights = await tweetQueries.getTopicWeights();\n    elizaLogger.info(\n      `[TopicWeights] Total topic weights in database: ${allWeights.length}`,\n    );\n\n    if (allWeights.length === 0) {\n      elizaLogger.warn('[TopicWeights] No topic weights found in database');\n      return [];\n    }\n\n    // Get topic trends to calculate momentum\n    const trends = await tweetQueries.getTopicTrends(timeframeHours);\n    elizaLogger.info(\n      `[TopicWeights] Found ${trends.length} topic trends in the last ${timeframeHours} hours`,\n    );\n\n    if (trends.length === 0) {\n      elizaLogger.warn(\n        `[TopicWeights] No topic trends found in the last ${timeframeHours} hours`,\n      );\n      // Fall back to using raw weights if no trends\n      return allWeights;\n    }\n\n    // Log some sample trend data for debugging\n    if (trends.length > 0) {\n      elizaLogger.debug('[TopicWeights] Sample trend data:', {\n        firstTrend: trends[0],\n        lastTrend: trends[trends.length - 1],\n        trendCount: trends.length,\n      });\n    }\n\n    // Create a map of topic trends\n    const trendMap = new Map(\n      trends.map((trend) => [\n        trend.topic,\n        {\n          avgWeight: trend.avgWeight,\n          totalEngagement: trend.totalEngagement,\n          mentionCount: trend.mentionCount,\n          // Calculate momentum as the rate of change in weight\n          momentum: trend.avgWeight / Math.max(1, trend.mentionCount),\n        },\n      ]),\n    );\n\n    // Get recent weights\n    const recentWeights =\n      await tweetQueries.getRecentTopicWeights(timeframeHours);\n    elizaLogger.info(\n      `[TopicWeights] Found ${recentWeights.length} recent weights in the last ${timeframeHours} hours`,\n    );\n\n    if (recentWeights.length === 0) {\n      elizaLogger.warn(\n        `[TopicWeights] No recent weights found in the last ${timeframeHours} hours`,\n      );\n      return allWeights;\n    }\n\n    // Aggregate weights by topic\n    const topicMap = new Map<string, TopicWeightRow>();\n\n    for (const weight of recentWeights) {\n      const trend = trendMap.get(weight.topic);\n      if (!topicMap.has(weight.topic)) {\n        topicMap.set(weight.topic, {\n          ...weight,\n          // Adjust weight based on trend data\n          weight: trend\n            ? weight.weight * 0.6 + trend.avgWeight * 0.2 + trend.momentum * 0.2\n            : weight.weight,\n        });\n      }\n    }\n\n    const result = Array.from(topicMap.values());\n    elizaLogger.info(\n      `[TopicWeights] Returning ${result.length} aggregated topic weights`,\n    );\n    return result;\n  } catch (error) {\n    elizaLogger.error('[Topic Processing] Error getting aggregated weights:', {\n      error: error instanceof Error ? error.message : String(error),\n    });\n    return [];\n  }\n}\n","import {\n  accountTopicQueries,\n  tweetQueries,\n  userMentionQueries,\n} from '@/extensions/src/db/queries';\nimport type { DatabaseTweet } from '@/types/twitter';\nimport { elizaLogger } from '@elizaos/core';\nimport { Scraper } from 'agent-twitter-client';\n\nfunction getMentionsFromText(text: string): string[] {\n  const mentionRegex = /@(\\w+)/g;\n  const matches = text.match(mentionRegex) || [];\n  return matches.map((match) => match.slice(1)); // Remove @ symbol\n}\n\nfunction getMentionsFromThread(thread: unknown[]): string[] {\n  const mentions = new Set<string>();\n\n  for (const tweet of thread) {\n    if (typeof tweet === 'object' && tweet && 'text' in tweet) {\n      const text = String(tweet.text || '');\n      for (const mention of getMentionsFromText(text)) {\n        mentions.add(mention);\n      }\n    }\n  }\n\n  return Array.from(mentions);\n}\n\nexport async function storeAccountInfo(\n  tweet: DatabaseTweet,\n  topics: string[] = [],\n): Promise<void> {\n  try {\n    // Skip if no username\n    if (!tweet.username) {\n      elizaLogger.warn(\n        '[Mentions Processing] Tweet has no username, skipping mentions',\n      );\n      return;\n    }\n\n    // Get unique mentions from all sources\n    const textMentions = getMentionsFromText(tweet.text || '');\n    const threadMentions = getMentionsFromThread(tweet.thread || []);\n    const metadataMentions = (tweet.mentions || [])\n      .map((m) => m.username)\n      .filter(Boolean);\n\n    const allMentions = new Set([\n      ...textMentions,\n      ...threadMentions,\n      ...metadataMentions,\n    ]);\n\n    elizaLogger.info('[Mentions Processing] Processing mentions:');\n    elizaLogger.debug({\n      textMentions,\n      threadMentions,\n      metadataMentions,\n      totalUnique: allMentions.size,\n      fromUsername: tweet.username,\n      hasIds: Array.from(allMentions),\n      topics,\n    });\n\n    // Initialize Twitter scraper for profile fetching\n    const scraper = new Scraper();\n\n    // First ensure both tweet author exists in target_accounts\n    const authorProfile = await scraper.getProfile(tweet.username);\n    await tweetQueries.insertTargetAccount({\n      username: tweet.username,\n      userId: tweet.userId?.toString() || authorProfile?.userId || '',\n      displayName: tweet.name || authorProfile?.name || tweet.username,\n      description: authorProfile?.biography || '',\n      followersCount: authorProfile?.followersCount || 0,\n      followingCount: authorProfile?.followingCount || 0,\n      friendsCount: authorProfile?.friendsCount || 0,\n      mediaCount: authorProfile?.mediaCount || 0,\n      statusesCount: authorProfile?.tweetsCount || 0,\n      likesCount: authorProfile?.likesCount || 0,\n      listedCount: authorProfile?.listedCount || 0,\n      tweetsCount: authorProfile?.tweetsCount || 0,\n      isPrivate: authorProfile?.isPrivate || false,\n      isVerified: authorProfile?.isVerified || false,\n      isBlueVerified: authorProfile?.isBlueVerified || false,\n      joinedAt: authorProfile?.joined || null,\n      location: authorProfile?.location || '',\n      avatarUrl: authorProfile?.avatar || null,\n      bannerUrl: authorProfile?.banner || null,\n      websiteUrl: authorProfile?.website || null,\n      canDm: authorProfile?.canDm || false,\n      createdAt: new Date(),\n      lastUpdated: new Date(),\n      isActive: true,\n      source: 'tweet_author',\n      avgLikes50: 0,\n      avgRetweets50: 0,\n      avgReplies50: 0,\n      avgViews50: 0,\n      engagementRate50: 0,\n      influenceScore: 0,\n      last50TweetsUpdatedAt: null,\n    });\n\n    // Update account-topic relationships for author\n    for (const topic of topics) {\n      try {\n        await accountTopicQueries.upsertAccountTopic(tweet.username, topic);\n      } catch (topicError) {\n        elizaLogger.error(\n          '[Mentions Processing] Error updating author account-topic relationship:',\n          {\n            error:\n              topicError instanceof Error\n                ? topicError.message\n                : String(topicError),\n            username: tweet.username,\n            topic,\n          },\n        );\n      }\n    }\n\n    // Process each unique mention\n    for (const mentionedUsername of allMentions) {\n      try {\n        // Skip if target username is missing\n        if (!mentionedUsername) {\n          continue;\n        }\n\n        // For mentioned user\n        const mentionedProfile = await scraper.getProfile(mentionedUsername);\n        await tweetQueries.insertTargetAccount({\n          username: mentionedUsername,\n          userId: mentionedProfile?.userId || '',\n          displayName: mentionedProfile?.name || mentionedUsername,\n          description: mentionedProfile?.biography || '',\n          followersCount: mentionedProfile?.followersCount || 0,\n          followingCount: mentionedProfile?.followingCount || 0,\n          friendsCount: mentionedProfile?.friendsCount || 0,\n          mediaCount: mentionedProfile?.mediaCount || 0,\n          statusesCount: mentionedProfile?.tweetsCount || 0,\n          likesCount: mentionedProfile?.likesCount || 0,\n          listedCount: mentionedProfile?.listedCount || 0,\n          tweetsCount: mentionedProfile?.tweetsCount || 0,\n          isPrivate: mentionedProfile?.isPrivate || false,\n          isVerified: mentionedProfile?.isVerified || false,\n          isBlueVerified: mentionedProfile?.isBlueVerified || false,\n          joinedAt: mentionedProfile?.joined || null,\n          location: mentionedProfile?.location || '',\n          avatarUrl: mentionedProfile?.avatar || null,\n          bannerUrl: mentionedProfile?.banner || null,\n          websiteUrl: mentionedProfile?.website || null,\n          canDm: mentionedProfile?.canDm || false,\n          createdAt: new Date(),\n          lastUpdated: new Date(),\n          isActive: true,\n          source: 'mention',\n          avgLikes50: 0,\n          avgRetweets50: 0,\n          avgReplies50: 0,\n          avgViews50: 0,\n          engagementRate50: 0,\n          influenceScore: 0,\n          last50TweetsUpdatedAt: null,\n        });\n\n        // Update account-topic relationships for mentioned user\n        for (const topic of topics) {\n          try {\n            await accountTopicQueries.upsertAccountTopic(\n              mentionedUsername,\n              topic,\n            );\n          } catch (topicError) {\n            elizaLogger.error(\n              '[Mentions Processing] Error updating mentioned user account-topic relationship:',\n              {\n                error:\n                  topicError instanceof Error\n                    ? topicError.message\n                    : String(topicError),\n                username: mentionedUsername,\n                topic,\n              },\n            );\n          }\n        }\n\n        // Now create the mention relationship\n        await userMentionQueries.upsertMentionRelationship(\n          tweet.username,\n          mentionedUsername,\n          tweet.tweet_id,\n          new Date(tweet.timestamp * 1000),\n        );\n      } catch (error) {\n        elizaLogger.error('[Mentions Processing] Error processing mention:', {\n          fromUsername: tweet.username,\n          toUsername: mentionedUsername,\n          error: error instanceof Error ? error.message : String(error),\n        });\n      }\n    }\n  } catch (error) {\n    elizaLogger.error('[Mentions Processing] Error processing mentions:', {\n      error: error instanceof Error ? error.message : String(error),\n      tweetId: tweet.tweet_id,\n    });\n  }\n}\n","import type { TweetAnalysis } from '@/types/analysis';\nimport type { DatabaseTweet } from '@/types/twitter';\nimport {\n  type IAgentRuntime,\n  type Memory,\n  type RAGKnowledgeItem,\n  elizaLogger,\n  stringToUuid,\n} from '@elizaos/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Extracts knowledge from a tweet analysis and stores it in the database\n * This function identifies facts, opinions, and other useful information from the analysis\n * and formats them for RAG retrieval\n */\nexport async function extractAndStoreKnowledge(\n  runtime: IAgentRuntime,\n  tweet: DatabaseTweet,\n  analysis: TweetAnalysis,\n  logPrefix = '[Knowledge Extraction]',\n): Promise<void> {\n  try {\n    elizaLogger.info(\n      `${logPrefix} Starting knowledge extraction for tweet ${tweet.tweet_id}`,\n    );\n\n    if (!analysis || !analysis.contentAnalysis) {\n      elizaLogger.warn(\n        `${logPrefix} No valid analysis found for tweet ${tweet.tweet_id}`,\n      );\n      return;\n    }\n\n    // Check if tweet is considered spam - don't extract knowledge from spam\n    if (\n      analysis.spamAnalysis.isSpam === true &&\n      analysis.spamAnalysis.spamScore > 0.7\n    ) {\n      elizaLogger.info(\n        `${logPrefix} Skipping knowledge extraction for spam tweet ${tweet.tweet_id}`,\n      );\n      return;\n    }\n\n    const topics = [\n      ...(analysis.contentAnalysis.primaryTopics || []),\n      ...(analysis.contentAnalysis.secondaryTopics || []),\n    ];\n    const tweetType = analysis.contentAnalysis.type;\n    const sentiment = analysis.contentAnalysis.sentiment;\n    const impactScore =\n      analysis.contentAnalysis.engagementAnalysis?.overallScore || 0.5;\n\n    // Create the base knowledge item for the tweet itself\n    const tweetKnowledgeId = stringToUuid(`tweet-knowledge-${tweet.tweet_id}`);\n\n    // Format analysis content for storage\n    const analysisContent = {\n      mainContent: analysis.contentAnalysis.summary || tweet.text,\n      keyPoints: analysis.contentAnalysis.keyPoints || [],\n      entities: analysis.contentAnalysis.entities || [],\n      sentiment: analysis.contentAnalysis.sentiment,\n      type: analysis.contentAnalysis.type,\n      topics: topics,\n      originalText: tweet.text,\n    };\n\n    // Create a knowledge entry for the analysis content with metadata\n    const tweetKnowledge: RAGKnowledgeItem = {\n      id: tweetKnowledgeId,\n      agentId: runtime.agentId,\n      content: {\n        text: JSON.stringify(analysisContent),\n        metadata: {\n          source: 'twitter',\n          sourceId: tweet.tweet_id,\n          sourceUrl: tweet.permanentUrl,\n          authorUsername: tweet.username,\n          authorUserId: tweet.userId?.toString(),\n          tweetType,\n          sentiment,\n          impactScore,\n          topics,\n          isOpinion: tweetType === 'opinion',\n          isFactual: tweetType === 'factual' || tweetType === 'informative',\n          hasQuestion: tweetType === 'question',\n          publicMetrics: {\n            likes: tweet.likes || 0,\n            retweets: tweet.retweets || 0,\n            replies: tweet.replies || 0,\n          },\n          timestamp: tweet.timestamp,\n          isMain: true,\n          isThreadMerged: tweet.isThreadMerged,\n          threadSize: tweet.threadSize || 1,\n          analysisVersion: '1.0', // Add version tracking for analysis format\n        },\n      },\n      embedding: undefined,\n      createdAt: Date.now(),\n    };\n\n    // Generate embedding for the analysis knowledge\n    const tweetMemory: Memory = {\n      id: tweetKnowledgeId,\n      content: {\n        text: JSON.stringify(analysisContent),\n      },\n      agentId: runtime.agentId,\n      userId: stringToUuid(`twitter-user-${tweet.userId}`),\n      // TODO Should we create a random room all the time?\n      roomId: stringToUuid(uuidv4()),\n    };\n\n    elizaLogger.info(\n      `${logPrefix} Generating embedding for analysis of tweet ${tweet.tweet_id}`,\n    );\n\n    await runtime.messageManager.addEmbeddingToMemory(tweetMemory);\n\n    if (tweetMemory.embedding) {\n      elizaLogger.debug(\n        `${logPrefix} Successfully generated embedding for tweet ${tweet.tweet_id}`,\n        {\n          embeddingSize:\n            tweetMemory.embedding instanceof Float32Array\n              ? tweetMemory.embedding.length\n              : tweetMemory.embedding.length,\n          embeddingType:\n            tweetMemory.embedding instanceof Float32Array\n              ? 'Float32Array'\n              : 'Array',\n        },\n      );\n\n      tweetKnowledge.embedding =\n        tweetMemory.embedding instanceof Float32Array\n          ? tweetMemory.embedding\n          : new Float32Array(tweetMemory.embedding);\n    } else {\n      elizaLogger.warn(\n        `${logPrefix} Failed to generate embedding for tweet ${tweet.tweet_id}`,\n      );\n    }\n\n    // Store the main tweet knowledge\n    await runtime.databaseAdapter.createKnowledge(tweetKnowledge);\n    elizaLogger.debug(\n      `${logPrefix} Stored main tweet analysis knowledge for ${tweet.tweet_id}`,\n    );\n  } catch (error) {\n    elizaLogger.error(`${logPrefix} Error extracting knowledge:`, {\n      error: error instanceof Error ? error.message : String(error),\n      tweetId: tweet.tweet_id,\n    });\n  }\n}\n\n/**\n * Fetches relevant knowledge for a tweet and formats it for analysis context\n * @param runtime The agent runtime\n * @param tweet The tweet to fetch knowledge for\n * @param logPrefix Optional log prefix for consistent logging\n * @returns Formatted knowledge context string\n */\nexport async function fetchAndFormatKnowledge(\n  runtime: IAgentRuntime,\n  tweet: DatabaseTweet,\n  logPrefix = '[Knowledge Retrieval]',\n): Promise<string> {\n  try {\n    elizaLogger.info(\n      `${logPrefix} Fetching knowledge for tweet ${tweet.tweet_id}`,\n    );\n\n    // Create a memory object for embedding generation\n    const tweetMemory: Memory = {\n      id: stringToUuid(`tweet-memory-${tweet.tweet_id}`),\n      content: {\n        text: tweet.text,\n      },\n      agentId: runtime.agentId,\n      userId: stringToUuid(`twitter-user-${tweet.userId}`),\n      roomId: stringToUuid(uuidv4()),\n    };\n\n    elizaLogger.info(\n      `${logPrefix} Generating embedding for tweet ${tweet.tweet_id} to search for relevant knowledge`,\n    );\n\n    // Generate embedding for the tweet text\n    await runtime.messageManager.addEmbeddingToMemory(tweetMemory);\n\n    // Ensure the embedding exists\n    if (!tweetMemory.embedding) {\n      elizaLogger.warn(\n        `${logPrefix} No embedding generated for tweet ${tweet.tweet_id}`,\n      );\n      return '';\n    }\n\n    elizaLogger.info(\n      `${logPrefix} Successfully generated search embedding for tweet ${tweet.tweet_id}`,\n    );\n    elizaLogger.debug({\n      embeddingSize:\n        tweetMemory.embedding instanceof Float32Array\n          ? tweetMemory.embedding.length\n          : tweetMemory.embedding.length,\n      embeddingType:\n        tweetMemory.embedding instanceof Float32Array\n          ? 'Float32Array'\n          : 'Array',\n    });\n\n    // Convert the embedding to Float32Array if needed\n    const embedding =\n      tweetMemory.embedding instanceof Float32Array\n        ? tweetMemory.embedding\n        : new Float32Array(tweetMemory.embedding);\n\n    // Fetch relevant knowledge\n    const relevantKnowledge = await runtime.databaseAdapter.searchKnowledge({\n      agentId: runtime.agentId,\n      embedding,\n      match_threshold: 0.7,\n      match_count: 5,\n      searchText: tweet.text,\n    });\n\n    if (relevantKnowledge.length === 0) {\n      elizaLogger.info(\n        `${logPrefix} No relevant knowledge found for tweet ${tweet.tweet_id}`,\n      );\n      return '';\n    }\n\n    elizaLogger.info(\n      `${logPrefix} Found ${relevantKnowledge.length} relevant knowledge items for tweet ${tweet.tweet_id}`,\n    );\n\n    // Format the knowledge context\n    const knowledgeContext = `\\n\\nRelevant Knowledge:\\n${relevantKnowledge\n      .map((k) => {\n        const metadata = k.content.metadata || {};\n        const topics = Array.isArray(metadata.topics) ? metadata.topics : [];\n        const metrics =\n          (metadata.publicMetrics as {\n            likes?: number;\n            retweets?: number;\n            replies?: number;\n          }) || {};\n\n        interface AnalysisContent {\n          mainContent: string;\n          keyPoints?: string[];\n        }\n\n        let analysisContent: AnalysisContent;\n        try {\n          analysisContent = JSON.parse(k.content.text) as AnalysisContent;\n        } catch {\n          // Handle legacy format or invalid JSON\n          analysisContent = { mainContent: k.content.text };\n        }\n\n        return `- ${analysisContent.mainContent}\n${analysisContent.keyPoints?.length ? `Key Points:\\n${analysisContent.keyPoints.map((point) => `  - ${point}`).join('\\n')}\\n` : ''}\nType: ${metadata.tweetType || 'unknown'}\nConfidence: ${metadata.confidence || 'unknown'}\nSimilarity: ${(k.similarity || 0).toFixed(2)}\nTopics: ${topics.join(', ') || 'none'}\nImpact Score: ${metadata.impactScore || 'unknown'}\nEngagement: ${\n          metrics\n            ? `Likes: ${metrics.likes || 0}, Retweets: ${metrics.retweets || 0}, Replies: ${metrics.replies || 0}`\n            : 'unknown'\n        }\nIs Opinion: ${metadata.isOpinion ? 'Yes' : 'No'}\nIs Factual: ${metadata.isFactual ? 'Yes' : 'No'}\nHas Question: ${metadata.hasQuestion ? 'Yes' : 'No'}`;\n      })\n      .join('\\n\\n')}`;\n\n    elizaLogger.info(\n      `${logPrefix} Successfully fetched and formatted knowledge for tweet ${tweet.tweet_id}`,\n    );\n    elizaLogger.debug({\n      knowledgeCount: relevantKnowledge.length,\n    });\n\n    return knowledgeContext;\n  } catch (error) {\n    elizaLogger.error(`${logPrefix} Error fetching knowledge:`, {\n      error: error instanceof Error ? error.message : String(error),\n      tweetId: tweet.tweet_id,\n    });\n    return '';\n  }\n}\n","import { tweetQueries } from '@/extensions/src/db/queries';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport type { TopicWeightRow } from '@/types/topic';\nimport { processTweets } from '@/utils/tweet-analysis/process-tweets';\nimport type { IAgentRuntime } from '@elizaos/core';\nimport { elizaLogger } from '@elizaos/core';\nimport type { Tweet } from 'agent-twitter-client';\n\ninterface QueuedTweet {\n  tweet: Tweet;\n  priority: number;\n  timestamp: number;\n  source: 'search' | 'account' | 'discovery';\n}\n\nexport class TweetQueueService {\n  private static instance: TweetQueueService | null = null;\n  private tweetQueue: QueuedTweet[] = [];\n  private processedTweetIds = new Set<string>();\n  private isProcessing = false;\n  private readonly maxQueueSize: number;\n  private readonly maxProcessedIdsSize: number;\n  private processingTimeout: ReturnType<typeof setTimeout> | null = null;\n  private readonly runtime: IAgentRuntime;\n  private readonly twitterService: TwitterService;\n\n  private constructor(\n    runtime: IAgentRuntime,\n    twitterService: TwitterService,\n    maxQueueSize = 1000,\n    maxProcessedIdsSize = 10000,\n  ) {\n    this.runtime = runtime;\n    this.twitterService = twitterService;\n    this.maxQueueSize = maxQueueSize;\n    this.maxProcessedIdsSize = maxProcessedIdsSize;\n  }\n\n  static getInstance(\n    runtime: IAgentRuntime,\n    twitterService: TwitterService,\n    maxQueueSize?: number,\n    maxProcessedIdsSize?: number,\n  ): TweetQueueService {\n    if (!TweetQueueService.instance) {\n      TweetQueueService.instance = new TweetQueueService(\n        runtime,\n        twitterService,\n        maxQueueSize,\n        maxProcessedIdsSize,\n      );\n    }\n    return TweetQueueService.instance;\n  }\n\n  /**\n   * Start the tweet processing loop\n   */\n  async start(): Promise<void> {\n    elizaLogger.info('[TweetQueueService] Starting tweet processing loop');\n    await this.processTweetsLoop();\n  }\n\n  /**\n   * Stop the tweet processing loop\n   */\n  async stop(): Promise<void> {\n    elizaLogger.info('[TweetQueueService] Stopping tweet processing loop');\n    if (this.processingTimeout) {\n      clearTimeout(this.processingTimeout);\n      this.processingTimeout = null;\n    }\n    this.isProcessing = false;\n  }\n\n  private async processTweetsLoop(): Promise<void> {\n    try {\n      // Get topic weights for processing\n      const topicWeights = await tweetQueries.getTopicWeights();\n      if (topicWeights.length === 0) {\n        elizaLogger.error(\n          '[TweetQueueService] No topic weights found - skipping processing',\n        );\n        return;\n      }\n\n      elizaLogger.debug(\n        `[TweetQueueService] Found ${topicWeights.length} topic weights for processing`,\n      );\n\n      // Get next batch of tweets\n      const tweets = await this.getNextBatch();\n      if (tweets.length > 0) {\n        this.setProcessing(true);\n        await this.processBatch(tweets, topicWeights);\n        this.setProcessing(false);\n      }\n    } catch (error) {\n      elizaLogger.error('[TweetQueueService] Error processing tweets:', error);\n      this.setProcessing(false);\n    }\n\n    // Schedule next processing cycle\n    this.processingTimeout = setTimeout(\n      () => void this.processTweetsLoop(),\n      5000, // 5 second delay between processing cycles\n    );\n  }\n\n  private async processBatch(\n    tweets: Tweet[],\n    topicWeights: TopicWeightRow[],\n  ): Promise<void> {\n    try {\n      elizaLogger.info(\n        `[TweetQueueService] Processing batch of ${tweets.length} tweets`,\n      );\n\n      await processTweets(\n        this.runtime,\n        this.twitterService,\n        tweets,\n        topicWeights,\n      );\n\n      elizaLogger.info(\n        `[TweetQueueService] Successfully processed ${tweets.length} tweets`,\n      );\n\n      // Verify topic weights were updated\n      const updatedWeights = await tweetQueries.getTopicWeights();\n      elizaLogger.info(\n        `[TweetQueueService] Topic weights after processing: ${updatedWeights.length}`,\n      );\n    } catch (error) {\n      elizaLogger.error(\n        '[TweetQueueService] Error in batch processing:',\n        error instanceof Error ? error.message : String(error),\n      );\n    }\n  }\n\n  /**\n   * Add tweets to the processing queue with specified priority and source\n   */\n  async addTweets(\n    tweets: Tweet[],\n    source: QueuedTweet['source'],\n    priority = 1,\n  ): Promise<void> {\n    const newTweets = tweets.filter((tweet) => {\n      if (!tweet.id || this.processedTweetIds.has(tweet.id)) {\n        elizaLogger.debug(\n          `[TweetQueueService] Skipping duplicate or invalid tweet: ${tweet.id}`,\n        );\n        return false;\n      }\n      return true;\n    });\n\n    const queuedTweets = newTweets.map((tweet) => ({\n      tweet,\n      priority,\n      timestamp: Date.now(),\n      source,\n    }));\n\n    this.tweetQueue.push(...queuedTweets);\n\n    // Sort by priority (higher first) and then by timestamp (older first)\n    this.tweetQueue.sort((a, b) => {\n      if (b.priority !== a.priority) {\n        return b.priority - a.priority;\n      }\n      return a.timestamp - b.timestamp;\n    });\n\n    // Trim queue if it gets too large\n    if (this.tweetQueue.length > this.maxQueueSize) {\n      const removed = this.tweetQueue.length - this.maxQueueSize;\n      this.tweetQueue = this.tweetQueue.slice(0, this.maxQueueSize);\n      elizaLogger.warn(\n        `[TweetQueueService] Queue exceeded max size. Removed ${removed} lowest priority tweets.`,\n      );\n    }\n\n    elizaLogger.info(\n      `[TweetQueueService] Added ${newTweets.length} tweets from ${source} to queue. Queue size: ${this.tweetQueue.length}`,\n    );\n  }\n\n  /**\n   * Get next batch of tweets for processing\n   */\n  private async getNextBatch(batchSize = 10): Promise<Tweet[]> {\n    if (this.isProcessing) {\n      elizaLogger.debug(\n        '[TweetQueueService] Queue is currently being processed, skipping batch',\n      );\n      return [];\n    }\n\n    const batch = this.tweetQueue.slice(0, batchSize);\n    this.tweetQueue = this.tweetQueue.slice(batchSize);\n\n    // Add to processed set\n    for (const item of batch) {\n      if (item.tweet.id) {\n        this.processedTweetIds.add(item.tweet.id);\n      }\n    }\n\n    // Trim processed set if it gets too large\n    if (this.processedTweetIds.size > this.maxProcessedIdsSize) {\n      const idsArray = Array.from(this.processedTweetIds);\n      this.processedTweetIds = new Set(\n        idsArray.slice(-this.maxProcessedIdsSize),\n      );\n      elizaLogger.info(\n        `[TweetQueueService] Trimmed processed tweets set to ${this.maxProcessedIdsSize} entries`,\n      );\n    }\n\n    if (batch.length > 0) {\n      elizaLogger.info(\n        `[TweetQueueService] Retrieved batch of ${batch.length} tweets for processing`,\n      );\n    }\n\n    return batch.map((item) => item.tweet);\n  }\n\n  /**\n   * Get current queue metrics\n   */\n  getMetrics() {\n    const sourceBreakdown = this.tweetQueue.reduce(\n      (acc, item) => {\n        acc[item.source]++;\n        return acc;\n      },\n      {\n        search: 0,\n        account: 0,\n        discovery: 0,\n      } as Record<QueuedTweet['source'], number>,\n    );\n\n    return {\n      queueSize: this.tweetQueue.length,\n      processedCount: this.processedTweetIds.size,\n      isProcessing: this.isProcessing,\n      sourceBreakdown,\n    };\n  }\n\n  /**\n   * Check if a tweet has been processed\n   */\n  hasBeenProcessed(tweetId: string): boolean {\n    return this.processedTweetIds.has(tweetId);\n  }\n\n  /**\n   * Set processing state\n   */\n  private setProcessing(isProcessing: boolean): void {\n    this.isProcessing = isProcessing;\n    elizaLogger.debug(\n      `[TweetQueueService] Processing state set to: ${isProcessing}`,\n    );\n  }\n\n  /**\n   * Clear the queue and processed tweets set\n   */\n  clear(): void {\n    this.tweetQueue = [];\n    this.processedTweetIds.clear();\n    this.isProcessing = false;\n    elizaLogger.info('[TweetQueueService] Queue and processed set cleared');\n  }\n}\n","import type {\n  TwitterEngagementThresholds,\n  TwitterProfile,\n  TwitterSearchParams,\n} from '@/types/twitter';\nimport { type IAgentRuntime, elizaLogger } from '@elizaos/core';\nimport { type Scraper, SearchMode, type Tweet } from 'agent-twitter-client';\nimport { TwitterAuthService } from './twitter-auth.service';\nimport { TwitterCacheService } from './twitter-cache.service';\nimport { TwitterRequestService } from './twitter-request.service';\nimport { TwitterSpamService } from './twitter-spam.service';\n\nexport class TwitterService {\n  private readonly authService: TwitterAuthService;\n  private readonly cacheService: TwitterCacheService;\n  private readonly spamService: TwitterSpamService;\n  private requestService: TwitterRequestService;\n  private targetUsers: string[] = [];\n\n  constructor(twitterClient: Scraper, runtime: IAgentRuntime) {\n    this.authService = new TwitterAuthService(twitterClient, runtime);\n    this.cacheService = new TwitterCacheService(runtime);\n    this.spamService = new TwitterSpamService();\n    // Initialize requestService with unauthenticated client, will update after auth\n    this.requestService = new TwitterRequestService(twitterClient);\n  }\n\n  public async initialize(): Promise<boolean> {\n    elizaLogger.info('[TwitterService] Initializing Twitter service');\n    const authenticated = await this.authService.initialize();\n    if (!authenticated) {\n      elizaLogger.error(\n        '[TwitterService] Failed to initialize Twitter service',\n      );\n      return false;\n    }\n\n    // Update requestService to use the authenticated client\n    this.requestService = new TwitterRequestService(\n      this.authService.getClient(),\n    );\n    return true;\n  }\n\n  public getProfile(): TwitterProfile | null {\n    return this.authService.getProfile();\n  }\n\n  public async searchTweets(\n    query: string,\n    maxTweets: number,\n    searchMode: SearchMode = SearchMode.Latest,\n    context = '[TwitterService]',\n    searchParams?: TwitterSearchParams,\n    engagementThresholds?: TwitterEngagementThresholds,\n  ): Promise<{\n    tweets: Tweet[];\n    spammedTweets: number;\n    spamUsers: Set<string>;\n  }> {\n    elizaLogger.info(`${context} Searching tweets for query: ${query}`);\n    elizaLogger.debug({\n      maxTweets,\n      searchMode,\n      searchParams,\n      engagementThresholds,\n    });\n\n    const searchResults = await this.requestService.fetchSearchTweets(\n      query,\n      maxTweets,\n      searchMode,\n      context,\n    );\n\n    if (!searchResults.tweets.length) {\n      elizaLogger.info(`${context} No tweets found for query`, {\n        context,\n        query,\n      });\n      return { tweets: [], spammedTweets: 0, spamUsers: new Set() };\n    }\n\n    // Apply search parameters\n    let filteredTweets = searchResults.tweets;\n    if (searchParams) {\n      filteredTweets = searchResults.tweets.filter((tweet) => {\n        if (searchParams.excludeReplies && tweet.inReplyToStatusId) {\n          return false;\n        }\n        if (searchParams.excludeRetweets && tweet.isRetweet) {\n          return false;\n        }\n        return true;\n      });\n    }\n\n    // Filter spam tweets\n    const {\n      filteredTweets: nonSpamTweets,\n      spammedTweets,\n      spamUsers,\n    } = await this.spamService.filterSpamTweets(filteredTweets, context);\n\n    // Cache filtered tweets\n    await Promise.all(\n      nonSpamTweets.map((tweet) => this.cacheService.cacheTweet(tweet)),\n    );\n\n    return {\n      tweets: nonSpamTweets,\n      spammedTweets,\n      spamUsers,\n    };\n  }\n\n  public async getTweet(tweetId: string): Promise<Tweet | undefined> {\n    // Try cache first\n    const cachedTweet = await this.cacheService.getCachedTweet(tweetId);\n    if (cachedTweet) {\n      return cachedTweet;\n    }\n\n    // Fetch from Twitter if not cached\n    const tweet = await this.requestService.getTweet(tweetId);\n    if (tweet) {\n      await this.cacheService.cacheTweet(tweet);\n    }\n    return tweet;\n  }\n\n  public async getUserTimeline(\n    username: string,\n    count: number,\n  ): Promise<{\n    tweets: Tweet[];\n    spammedTweets: number;\n  }> {\n    // Try cache first\n    const cachedTimeline = await this.cacheService.getCachedTimeline(username);\n    if (cachedTimeline) {\n      return { tweets: cachedTimeline, spammedTweets: 0 };\n    }\n\n    // Get user profile to get userId\n    const profile = await this.authService.getClient().getProfile(username);\n    if (!profile?.userId) {\n      elizaLogger.error(\n        `[TwitterService] Could not find user profile for ${username}`,\n      );\n      return { tweets: [], spammedTweets: 0 };\n    }\n\n    // Fetch timeline\n    const response = await this.requestService.getUserTweets(\n      profile.userId,\n      count,\n    );\n\n    if (!response.tweets.length) {\n      return { tweets: [], spammedTweets: 0 };\n    }\n\n    // Filter spam tweets\n    const { filteredTweets, spammedTweets } =\n      await this.spamService.filterSpamTweets(\n        response.tweets,\n        '[TwitterService]',\n      );\n\n    // Cache filtered timeline\n    await this.cacheService.cacheTimeline(username, filteredTweets);\n\n    return {\n      tweets: filteredTweets,\n      spammedTweets,\n    };\n  }\n\n  public async updateLatestCheckedTweetId(\n    username: string,\n    tweetId: bigint,\n  ): Promise<void> {\n    await this.cacheService.cacheLatestCheckedTweetId(username, tweetId);\n  }\n\n  public async getLatestCheckedTweetId(\n    username: string,\n  ): Promise<bigint | null> {\n    return await this.cacheService.getLatestCheckedTweetId(username);\n  }\n\n  public async cacheMentions(\n    username: string,\n    mentions: Tweet[],\n  ): Promise<void> {\n    await this.cacheService.cacheMentions(username, mentions);\n  }\n\n  public async getCachedMentions(\n    username: string,\n  ): Promise<Tweet[] | undefined> {\n    return await this.cacheService.getCachedMentions(username);\n  }\n\n  public async cacheResponseInfo(\n    tweetId: string,\n    context: string,\n    tweet: Tweet,\n    response: string,\n  ): Promise<void> {\n    const responseInfo = `Context:\\n\\n${context}\\n\\nSelected Post: ${tweetId} - ${tweet.username}: ${tweet.text}\\nAgent's Output:\\n${response}`;\n    await this.cacheService.cacheResponseInfo(\n      tweetId,\n      responseInfo,\n      tweet,\n      response,\n    );\n  }\n\n  public clearSpamCache(): void {\n    this.spamService.clearSpamCache();\n  }\n\n  public async cacheTweet(tweet: Tweet): Promise<void> {\n    await this.cacheService.cacheTweet(tweet);\n  }\n\n  setTargetUsers(users: string[]): void {\n    this.targetUsers = users;\n  }\n\n  getTargetUsers(): string[] {\n    return this.targetUsers;\n  }\n\n  async sendTweet(text: string, inReplyToId?: string): Promise<Tweet> {\n    return this.requestService.sendTweet(text, inReplyToId);\n  }\n}\n","import type { TwitterProfile } from '@/types/twitter';\nimport { type IAgentRuntime, elizaLogger } from '@elizaos/core';\nimport type { Scraper } from 'agent-twitter-client';\n\ninterface TwitterCookie {\n  key: string;\n  value: string;\n  domain: string;\n  path: string;\n  secure?: boolean;\n  httpOnly?: boolean;\n  sameSite?: string;\n}\n\nexport class TwitterAuthService {\n  private readonly twitterClient: Scraper;\n  private readonly runtime: IAgentRuntime;\n  private profile: TwitterProfile | null = null;\n\n  constructor(twitterClient: Scraper, runtime: IAgentRuntime) {\n    this.twitterClient = twitterClient;\n    this.runtime = runtime;\n  }\n\n  public async initialize(): Promise<boolean> {\n    elizaLogger.info('[TwitterAuthService] Initializing authentication');\n    const username = this.runtime.getSetting('TWITTER_USERNAME');\n    if (!username) {\n      elizaLogger.error('[TwitterAuthService] No Twitter username configured');\n      return false;\n    }\n\n    // Try to load cached cookies first\n    const cachedCookies = await this.getCachedCookies(username);\n    if (cachedCookies && cachedCookies.length > 0) {\n      elizaLogger.info(\n        `[TwitterAuthService] Found ${cachedCookies.length} cached cookies for ${username}`,\n      );\n      await this.setCookiesFromArray(cachedCookies);\n      elizaLogger.info('[TwitterAuthService] Successfully set cached cookies');\n\n      // Verify the cookies are still valid by trying to fetch profile\n      this.profile = await this.fetchProfile(username);\n      if (this.profile) {\n        elizaLogger.info(\n          '[TwitterAuthService] Successfully verified cached cookies',\n        );\n        return true;\n      }\n      elizaLogger.warn(\n        '[TwitterAuthService] Cached cookies appear to be invalid, will re-authenticate',\n      );\n    }\n\n    // If no valid cached cookies, authenticate\n    elizaLogger.info(\n      '[TwitterAuthService] No valid cached cookies found, will need to authenticate',\n    );\n    const authenticated = await this.authenticateWithCookies();\n    if (!authenticated) {\n      elizaLogger.error(\n        '[TwitterAuthService] Failed to authenticate with Twitter',\n      );\n      return false;\n    }\n\n    // Verify authentication by trying to fetch profile\n    this.profile = await this.fetchProfile(username);\n    if (!this.profile) {\n      elizaLogger.error('[TwitterAuthService] Failed to fetch Twitter profile');\n      return false;\n    }\n    elizaLogger.info(\n      '[TwitterAuthService] Successfully authenticated and fetched profile',\n    );\n    return true;\n  }\n\n  private async authenticateWithCookies(): Promise<boolean> {\n    try {\n      const username = this.runtime.getSetting('TWITTER_USERNAME');\n      if (!username) {\n        elizaLogger.error(\n          '[TwitterAuthService] No Twitter username configured for authentication',\n        );\n        return false;\n      }\n\n      elizaLogger.info('[TwitterAuthService] Attempting to get fresh cookies');\n      const password = this.runtime.getSetting('TWITTER_PASSWORD');\n      const email = this.runtime.getSetting('TWITTER_EMAIL');\n      if (!password || !email) {\n        elizaLogger.error(\n          '[TwitterAuthService] No Twitter password or email configured',\n        );\n        return false;\n      }\n\n      // Add a small delay before authentication attempt\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n\n      let retryCount = 0;\n      const maxRetries = 3;\n      const baseDelay = 3000; // 3 seconds\n\n      while (retryCount < maxRetries) {\n        try {\n          elizaLogger.info(\n            `[TwitterAuthService] Authentication attempt ${retryCount + 1}/${maxRetries}`,\n          );\n\n          await this.twitterClient.login(username, password, email);\n          elizaLogger.info('[TwitterAuthService] Successfully authenticated');\n\n          // Get the new cookies after successful authentication\n          const newCookies = await this.twitterClient.getCookies();\n          if (!newCookies || newCookies.length === 0) {\n            throw new Error('No cookies received after authentication');\n          }\n\n          elizaLogger.info(\n            `[TwitterAuthService] Successfully obtained ${newCookies.length} new cookies`,\n          );\n          await this.cacheCookies(username, newCookies);\n          elizaLogger.info(\n            '[TwitterAuthService] Successfully cached new cookies',\n          );\n          return true;\n        } catch (error) {\n          retryCount++;\n          const delay = baseDelay * 2 ** retryCount; // Exponential backoff\n          elizaLogger.warn(\n            `[TwitterAuthService] Authentication attempt ${retryCount} failed:`,\n            error instanceof Error ? error.message : String(error),\n            `Retrying in ${delay}ms...`,\n          );\n\n          if (retryCount < maxRetries) {\n            await new Promise((resolve) => setTimeout(resolve, delay));\n          }\n        }\n      }\n\n      elizaLogger.error(\n        '[TwitterAuthService] Failed to obtain cookies after maximum retries',\n      );\n      return false;\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterAuthService] Error during cookie authentication:',\n        error instanceof Error ? error.message : String(error),\n      );\n      return false;\n    }\n  }\n\n  private async setCookiesFromArray(\n    cookiesArray: TwitterCookie[],\n  ): Promise<void> {\n    elizaLogger.info(\n      `[TwitterAuthService] Setting ${cookiesArray.length} cookies`,\n    );\n    const cookieStrings = cookiesArray.map(\n      (cookie) =>\n        `${cookie.key}=${cookie.value}; Domain=${cookie.domain}; Path=${cookie.path}; ${\n          cookie.secure ? 'Secure; ' : ''\n        }${cookie.httpOnly ? 'HttpOnly; ' : ''}${\n          cookie.sameSite ? `SameSite=${cookie.sameSite}; ` : ''\n        }`,\n    );\n    await this.twitterClient.setCookies(cookieStrings);\n    elizaLogger.info(\n      '[TwitterAuthService] Successfully set cookies on Twitter client',\n    );\n  }\n\n  private async getCachedCookies(\n    username: string,\n  ): Promise<TwitterCookie[] | undefined> {\n    return await this.runtime.cacheManager.get<TwitterCookie[]>(\n      `twitter/${username}/cookies`,\n    );\n  }\n\n  private async cacheCookies(\n    username: string,\n    cookies: TwitterCookie[],\n  ): Promise<void> {\n    await this.runtime.cacheManager.set(`twitter/${username}/cookies`, cookies);\n  }\n\n  private async getCachedProfile(\n    username: string,\n  ): Promise<TwitterProfile | undefined> {\n    return await this.runtime.cacheManager.get<TwitterProfile>(\n      `twitter/${username}/profile`,\n    );\n  }\n\n  private async cacheProfile(profile: TwitterProfile): Promise<void> {\n    await this.runtime.cacheManager.set(\n      `twitter/${profile.username}/profile`,\n      profile,\n    );\n  }\n\n  private async fetchProfile(\n    username: string,\n  ): Promise<TwitterProfile | undefined> {\n    const cached = await this.getCachedProfile(username);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const twitterProfile = await this.twitterClient.getProfile(username);\n      const profile: TwitterProfile = {\n        userId: twitterProfile.userId,\n        username: username,\n        displayName: twitterProfile.name || this.runtime.character.name,\n        description:\n          twitterProfile.biography ||\n          (typeof this.runtime.character.bio === 'string'\n            ? this.runtime.character.bio\n            : this.runtime.character.bio?.length > 0\n              ? this.runtime.character.bio[0]\n              : ''),\n        followersCount: twitterProfile.followersCount || 0,\n        followingCount: twitterProfile.followingCount || 0,\n        friendsCount: twitterProfile.friendsCount || 0,\n        mediaCount: twitterProfile.mediaCount || 0,\n        statusesCount: twitterProfile.statusesCount || 0,\n        likesCount: twitterProfile.likesCount || 0,\n        listedCount: twitterProfile.listedCount || 0,\n        tweetsCount: twitterProfile.tweetsCount || 0,\n        isPrivate: twitterProfile.isPrivate || false,\n        isVerified: twitterProfile.isVerified || false,\n        isBlueVerified: twitterProfile.isBlueVerified || false,\n        joinedAt: twitterProfile.joined\n          ? new Date(twitterProfile.joined)\n          : null,\n        location: twitterProfile.location || '',\n        avatarUrl: twitterProfile.avatar || null,\n        bannerUrl: twitterProfile.banner || null,\n        websiteUrl: twitterProfile.website || null,\n        canDm: twitterProfile.canDm || false,\n      };\n\n      await this.cacheProfile(profile);\n      return profile;\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterAuthService] Error fetching Twitter profile:',\n        error,\n      );\n      return undefined;\n    }\n  }\n\n  public getProfile(): TwitterProfile | null {\n    return this.profile;\n  }\n\n  public getClient(): Scraper {\n    return this.twitterClient;\n  }\n}\n","import { type IAgentRuntime, elizaLogger } from '@elizaos/core';\nimport type { Tweet } from 'agent-twitter-client';\n\nexport class TwitterCacheService {\n  private readonly runtime: IAgentRuntime;\n\n  constructor(runtime: IAgentRuntime) {\n    this.runtime = runtime;\n  }\n\n  public async cacheTweet(tweet: Tweet): Promise<void> {\n    if (!tweet) {\n      elizaLogger.warn(\n        '[TwitterCacheService] Tweet is undefined, skipping cache',\n      );\n      return;\n    }\n    await this.runtime.cacheManager.set(`twitter/tweets/${tweet.id}`, tweet);\n  }\n\n  public async getCachedTweet(tweetId: string): Promise<Tweet | undefined> {\n    return await this.runtime.cacheManager.get<Tweet>(\n      `twitter/tweets/${tweetId}`,\n    );\n  }\n\n  public async getCachedTimeline(\n    username: string,\n  ): Promise<Tweet[] | undefined> {\n    if (!username) {\n      return undefined;\n    }\n    return await this.runtime.cacheManager.get<Tweet[]>(\n      `twitter/${username}/timeline`,\n    );\n  }\n\n  public async cacheTimeline(\n    username: string,\n    timeline: Tweet[],\n  ): Promise<void> {\n    if (!username) {\n      elizaLogger.warn(\n        '[TwitterCacheService] No username provided, skipping timeline cache',\n      );\n      return;\n    }\n    await this.runtime.cacheManager.set(\n      `twitter/${username}/timeline`,\n      timeline,\n    );\n  }\n\n  public async cacheLatestCheckedTweetId(\n    username: string,\n    tweetId: bigint,\n  ): Promise<void> {\n    if (!username || !tweetId) {\n      return;\n    }\n    await this.runtime.cacheManager.set(\n      `twitter/${username}/lastCheckedTweetId`,\n      tweetId.toString(),\n    );\n  }\n\n  public async getLatestCheckedTweetId(\n    username: string,\n  ): Promise<bigint | null> {\n    if (!username) {\n      return null;\n    }\n    const lastId = await this.runtime.cacheManager.get<string>(\n      `twitter/${username}/lastCheckedTweetId`,\n    );\n    return lastId ? BigInt(lastId) : null;\n  }\n\n  public async cacheMentions(\n    username: string,\n    mentions: Tweet[],\n  ): Promise<void> {\n    if (!username) {\n      return;\n    }\n    await this.runtime.cacheManager.set(\n      `twitter/${username}/mentions`,\n      mentions,\n      { expires: Date.now() + 10 * 1000 }, // 10 seconds expiry\n    );\n  }\n\n  public async getCachedMentions(\n    username: string,\n  ): Promise<Tweet[] | undefined> {\n    if (!username) {\n      return undefined;\n    }\n    return await this.runtime.cacheManager.get<Tweet[]>(\n      `twitter/${username}/mentions`,\n    );\n  }\n\n  public async cacheResponseInfo(\n    tweetId: string,\n    context: string,\n    tweet: Tweet,\n    response: string,\n  ): Promise<void> {\n    const responseInfo = `Context:\\n\\n${context}\\n\\nSelected Post: ${tweet.id} - ${tweet.username}: ${tweet.text}\\nAgent's Output:\\n${response}`;\n    await this.runtime.cacheManager.set(\n      `twitter/tweet_generation_${tweetId}.txt`,\n      responseInfo,\n    );\n  }\n}\n","import { elizaLogger } from '@elizaos/core';\nimport {\n  type QueryTweetsResponse,\n  type Scraper,\n  SearchMode,\n  type Tweet,\n} from 'agent-twitter-client';\n\nexport class TwitterRequestService {\n  private readonly twitterClient: Scraper;\n  private requestQueue: Array<() => Promise<void>> = [];\n  private isProcessingQueue = false;\n\n  constructor(twitterClient: Scraper) {\n    this.twitterClient = twitterClient;\n  }\n\n  private async enqueueRequest<T>(\n    request: () => Promise<T>,\n    context: string,\n  ): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.requestQueue.push(async () => {\n        try {\n          const result = await request();\n          resolve(result);\n        } catch (error) {\n          elizaLogger.error(`${context} Error executing request:`, error);\n          reject(error);\n        }\n      });\n\n      if (!this.isProcessingQueue) {\n        void this.processRequestQueue();\n      }\n    });\n  }\n\n  private async processRequestQueue(): Promise<void> {\n    if (this.isProcessingQueue) {\n      return;\n    }\n\n    this.isProcessingQueue = true;\n    while (this.requestQueue.length > 0) {\n      const request = this.requestQueue.shift();\n      if (request) {\n        try {\n          await request();\n          // Add a delay between requests to respect rate limits\n          await new Promise((resolve) => setTimeout(resolve, 1000));\n        } catch (error) {\n          elizaLogger.error('Error processing request:', error);\n        }\n      }\n    }\n    this.isProcessingQueue = false;\n  }\n\n  async fetchSearchTweets(\n    query: string,\n    limit: number,\n    mode: SearchMode,\n    context: string,\n  ): Promise<QueryTweetsResponse> {\n    return this.enqueueRequest(async () => {\n      elizaLogger.info(`${context} Fetching search tweets for query: ${query}`);\n      try {\n        const searchResults = await this.twitterClient.fetchSearchTweets(\n          query,\n          limit,\n          mode,\n        );\n\n        if (!searchResults.tweets.length) {\n          elizaLogger.info(`${context} No tweets found for query: ${query}`);\n          return searchResults;\n        }\n\n        elizaLogger.info(`${context} Found ${searchResults.tweets.length}`);\n        elizaLogger.debug('tweets:', {\n          tweets: searchResults.tweets.map((t) => ({\n            id: t.id,\n            username: t.username,\n            text: `${t.text?.slice(0, 50)}...`,\n            likes: t.likes,\n            retweets: t.retweets,\n            replies: t.replies,\n            conversationId: t.conversationId,\n            threadSize: t.thread?.length || 0,\n          })),\n        });\n\n        return searchResults;\n      } catch (error) {\n        elizaLogger.error(`${context} Error fetching search tweets:`, error);\n        throw error;\n      }\n    }, context);\n  }\n\n  async getTweet(tweetId: string): Promise<Tweet | null> {\n    return this.enqueueRequest(async () => {\n      elizaLogger.info(`Fetching tweet: ${tweetId}`);\n      try {\n        return await this.twitterClient.getTweet(tweetId);\n      } catch (error) {\n        elizaLogger.error('Error fetching tweet:', error);\n        return null;\n      }\n    }, 'getTweet');\n  }\n\n  async getUserTweets(\n    username: string,\n    limit: number,\n  ): Promise<QueryTweetsResponse> {\n    return this.enqueueRequest(async () => {\n      elizaLogger.info(`Fetching user tweets for: ${username}`);\n      try {\n        return await this.twitterClient.fetchSearchTweets(\n          `from:${username}`,\n          limit,\n          SearchMode.Latest,\n        );\n      } catch (error) {\n        elizaLogger.error('Error fetching user tweets:', error);\n        throw error;\n      }\n    }, 'getUserTweets');\n  }\n\n  async sendTweet(text: string, inReplyToId?: string): Promise<Tweet> {\n    return this.enqueueRequest(async () => {\n      elizaLogger.info('Sending tweet:', { text, inReplyToId });\n      try {\n        const response = await this.twitterClient.sendTweet(text, inReplyToId);\n        const tweetId = (\n          response as unknown as { id: string | number }\n        ).id.toString();\n        const timestamp = Math.floor(Date.now() / 1000);\n\n        // Create a Tweet object from the response\n        const tweet: Tweet = {\n          id: tweetId,\n          text: text,\n          userId: 'unknown', // Will be updated by the TwitterAuthService\n          username: 'unknown', // Will be updated by the TwitterAuthService\n          name: 'unknown', // Will be updated by the TwitterAuthService\n          timestamp: timestamp,\n          isReply: !!inReplyToId,\n          isRetweet: false,\n          inReplyToStatusId: inReplyToId,\n          conversationId: tweetId,\n          permanentUrl: `https://twitter.com/unknown/status/${tweetId}`, // Will be updated by the TwitterAuthService\n          hashtags: [],\n          mentions: [],\n          photos: [],\n          thread: [],\n          urls: [],\n          videos: [],\n        };\n        return tweet;\n      } catch (error) {\n        elizaLogger.error('Error sending tweet:', error);\n        throw error;\n      }\n    }, 'sendTweet');\n  }\n}\n","import { getUserSpamData } from '@/helpers/spam-helper';\nimport { elizaLogger } from '@elizaos/core';\nimport type { Tweet } from 'agent-twitter-client';\n\nexport interface SpamData {\n  spamScore: number;\n  tweetCount: number;\n  violations: string[];\n}\n\n// TODO Use the runtime cache?\nexport class TwitterSpamService {\n  private readonly spamCache = new Map<string, SpamData>();\n  private readonly spamThreshold = 0.7;\n\n  public async filterSpamTweets(\n    tweets: Tweet[],\n    context: string,\n  ): Promise<{\n    filteredTweets: Tweet[];\n    spammedTweets: number;\n    spamUsers: Set<string>;\n  }> {\n    const uniqueAuthors = [...new Set(tweets.map((t) => t.userId))];\n    elizaLogger.info(\n      `${context} Fetching spam data for ${uniqueAuthors.length} unique authors`,\n    );\n\n    const spamUsers = new Set<string>();\n    await Promise.all(\n      uniqueAuthors.map(async (authorId) => {\n        try {\n          const spamData = await this.getSpamData(authorId);\n          if (spamData && spamData.spamScore > this.spamThreshold) {\n            spamUsers.add(authorId);\n            elizaLogger.debug(`${context} Filtered out spam user ${authorId}`, {\n              spamScore: spamData.spamScore,\n              tweetCount: spamData.tweetCount,\n              violations: spamData.violations,\n            });\n          }\n        } catch (error) {\n          elizaLogger.error(\n            `${context} Error fetching spam data for user ${authorId}:`,\n            error,\n          );\n        }\n      }),\n    );\n\n    // Filter out tweets from known spam users\n    const filteredTweets = tweets.filter(\n      (tweet) => !spamUsers.has(tweet.userId),\n    );\n    const spammedTweets = tweets.length - filteredTweets.length;\n\n    elizaLogger.info(\n      `${context} Filtered ${spammedTweets} tweets from ${spamUsers.size} spam users`,\n    );\n    elizaLogger.debug({\n      totalTweets: tweets.length,\n      spammedTweets,\n      spamUsers: spamUsers.size,\n      remainingTweets: filteredTweets.length,\n    });\n\n    return {\n      filteredTweets,\n      spammedTweets,\n      spamUsers,\n    };\n  }\n\n  private async getSpamData(authorId: string): Promise<SpamData | undefined> {\n    // Check cache first\n    const cached = this.spamCache.get(authorId);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const spamData = await getUserSpamData(authorId);\n      if (spamData) {\n        // Cache the result\n        this.spamCache.set(authorId, spamData);\n        return spamData;\n      }\n    } catch (error) {\n      elizaLogger.error(\n        `[TwitterSpamService] Error getting spam data for user ${authorId}:`,\n        error,\n      );\n    }\n\n    return undefined;\n  }\n\n  public clearSpamCache(): void {\n    this.spamCache.clear();\n  }\n}\n","import { cleanupPool } from '@/extensions/src/db';\nimport { TweetQueueService } from '@/services/twitter/tweet-queue.service';\nimport { TwitterService } from '@/services/twitter/twitter-service';\nimport {\n  type ClientInstance,\n  type IAgentRuntime,\n  elizaLogger,\n} from '@elizaos/core';\nimport { Scraper } from 'agent-twitter-client';\nimport { TwitterAccountDiscoveryClient } from './account-discovery';\nimport { TwitterAccountsClient } from './accounts';\nimport { TwitterInteractionClient } from './interactions';\nimport { TwitterSearchClient } from './search';\n\nexport class TwitterClient implements ClientInstance {\n  private readonly runtime: IAgentRuntime;\n  private twitterService: TwitterService | null = null;\n  private accountsClient: TwitterAccountsClient | null = null;\n  private searchClient: TwitterSearchClient | null = null;\n  private interactionClient: TwitterInteractionClient | null = null;\n  private discoveryClient: TwitterAccountDiscoveryClient | null = null;\n  private tweetQueueService: TweetQueueService | null = null;\n\n  constructor(runtime: IAgentRuntime) {\n    this.runtime = runtime;\n  }\n\n  async start(): Promise<void> {\n    elizaLogger.info('[TwitterClient] Starting Twitter client');\n\n    const twitterUsername = this.runtime.getSetting('TWITTER_USERNAME');\n    const twitterPassword = this.runtime.getSetting('TWITTER_PASSWORD');\n    const twitterEmail = this.runtime.getSetting('TWITTER_EMAIL');\n\n    if (!twitterUsername || !twitterPassword || !twitterEmail) {\n      elizaLogger.error(\n        '[TwitterClient] Twitter credentials not found in settings',\n      );\n      return;\n    }\n\n    try {\n      elizaLogger.info('[TwitterClient] Creating Twitter client');\n      const twitterClient = new Scraper();\n\n      // Initialize the Twitter service with the unauthenticated client\n      // TwitterAuthService will handle authentication\n      this.twitterService = new TwitterService(twitterClient, this.runtime);\n      const initialized = await this.twitterService.initialize();\n\n      if (!initialized) {\n        throw new Error('Failed to initialize Twitter service');\n      }\n\n      elizaLogger.info('[TwitterClient] Initialized Twitter service');\n\n      // Set target users if configured\n      const targetUsers = this.runtime.getSetting('TWITTER_TARGET_USERS');\n      if (targetUsers) {\n        this.twitterService.setTargetUsers(\n          targetUsers.split(',').map((u) => u.trim()),\n        );\n      }\n\n      // Initialize tweet queue service first\n      this.tweetQueueService = TweetQueueService.getInstance(\n        this.runtime,\n        this.twitterService,\n      );\n      await this.tweetQueueService.start();\n      elizaLogger.info('[TwitterClient] Started tweet queue service');\n\n      elizaLogger.info('[TwitterClient] Initializing clients');\n      // Initialize and start all clients\n      this.accountsClient = new TwitterAccountsClient(\n        this.twitterService,\n        this.runtime,\n        this.tweetQueueService,\n      );\n      this.searchClient = new TwitterSearchClient(\n        this.twitterService,\n        this.runtime,\n        this.tweetQueueService,\n      );\n      this.interactionClient = new TwitterInteractionClient(\n        this.twitterService,\n        this.runtime,\n      );\n      this.discoveryClient = new TwitterAccountDiscoveryClient(\n        this.runtime,\n        this.twitterService,\n      );\n\n      // Start clients concurrently\n      await Promise.all([\n        // this.accountsClient.start(),\n        this.searchClient.start(),\n        // this.interactionClient.start(),\n        // this.discoveryClient.start(),\n      ]);\n\n      elizaLogger.info('[TwitterClient] Twitter client started successfully');\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterClient] Error starting Twitter client:',\n        error,\n      );\n      throw error;\n    }\n  }\n\n  async stop(): Promise<void> {\n    elizaLogger.info('[TwitterClient] Stopping Twitter client');\n    try {\n      // Stop all clients in reverse order\n      if (this.discoveryClient) {\n        await this.discoveryClient.stop();\n      }\n      if (this.interactionClient) {\n        await this.interactionClient.stop();\n      }\n      if (this.searchClient) {\n        await this.searchClient.stop();\n      }\n      if (this.accountsClient) {\n        await this.accountsClient.stop();\n      }\n      if (this.tweetQueueService) {\n        await this.tweetQueueService.stop();\n      }\n\n      // Clean up the database pool used by the bork-extensions\n      try {\n        await cleanupPool();\n        elizaLogger.info('[TwitterClient] Database connections cleaned up');\n      } catch (dbError) {\n        elizaLogger.error(\n          '[TwitterClient] Error cleaning up database connections:',\n          dbError,\n        );\n      }\n\n      elizaLogger.info('[TwitterClient] Twitter client stopped successfully');\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterClient] Error stopping Twitter client:',\n        error,\n      );\n      throw error;\n    }\n  }\n}\n\nexport async function startTwitterClient(\n  runtime: IAgentRuntime,\n): Promise<ClientInstance> {\n  const client = new TwitterClient(runtime);\n  await client.start();\n  return client;\n}\n","import { elizaLogger } from '@elizaos/core';\nimport type { Tweet } from 'agent-twitter-client';\nimport type { TwitterConfigService } from './twitter-config-service';\nimport type { TwitterService } from './twitter-service';\n\ninterface AccountScore {\n  username: string;\n  relevanceScore: number;\n  qualityScore: number;\n  lastUpdated: Date;\n  totalTweetsAnalyzed: number;\n  relevantTweetsCount: number;\n  topicsMatch: Record<string, number>; // Topic -> match count\n  interactionScore: number; // Based on RTs, likes, etc.\n}\n\nexport class TwitterAccountDiscoveryService {\n  private readonly twitterService: TwitterService;\n  private readonly configService: TwitterConfigService;\n  private accountScores: Map<string, AccountScore> = new Map();\n  // TODO Should be in config?\n  // Thresholds for account management\n  private readonly MIN_RELEVANCE_SCORE = 0.6;\n  private readonly MIN_QUALITY_SCORE = 0.5;\n  private readonly SCORE_DECAY_FACTOR = 0.95; // 5% decay per check\n  private readonly MAX_ACCOUNTS = 100; // Maximum number of accounts to track\n\n  constructor(\n    twitterService: TwitterService,\n    configService: TwitterConfigService,\n  ) {\n    this.twitterService = twitterService;\n    this.configService = configService;\n  }\n\n  public async discoverAccountsFromTimeline(\n    username: string,\n  ): Promise<string[]> {\n    try {\n      elizaLogger.info(\n        `[TwitterAccountDiscoveryService] Discovering accounts from ${username}'s timeline`,\n      );\n\n      const timeline = await this.twitterService.getUserTimeline(username, 50);\n      const discoveredAccounts = new Set<string>();\n      for (const tweet of timeline.tweets) {\n        // Add retweeted accounts\n        if (tweet.retweetedStatus) {\n          discoveredAccounts.add(tweet.retweetedStatus.username);\n        }\n\n        // Add quoted accounts\n        if (tweet.quotedStatus) {\n          discoveredAccounts.add(tweet.quotedStatus.username);\n        }\n\n        // Add mentioned accounts\n        if (tweet.mentions) {\n          for (const mention of tweet.mentions) {\n            discoveredAccounts.add(mention.username);\n          }\n        }\n      }\n\n      // Remove the source account from discovered accounts\n      discoveredAccounts.delete(username);\n\n      elizaLogger.info(\n        `[TwitterAccountDiscoveryService] Discovered ${discoveredAccounts.size} potential accounts from ${username}'s timeline`,\n      );\n\n      return Array.from(discoveredAccounts);\n    } catch (error) {\n      elizaLogger.error(\n        `[TwitterAccountDiscoveryService] Error discovering accounts from ${username}'s timeline:`,\n        error instanceof Error ? error.message : String(error),\n      );\n      return [];\n    }\n  }\n\n  public async evaluateAccount(username: string): Promise<void> {\n    try {\n      const timeline = await this.twitterService.getUserTimeline(username, 50);\n      if (!timeline.tweets.length) {\n        return;\n      }\n\n      let relevantTweetsCount = 0;\n      let totalQualityScore = 0;\n      const topicsMatch: Record<string, number> = {};\n      let totalInteractionScore = 0;\n\n      for (const tweet of timeline.tweets) {\n        // Calculate tweet quality based on engagement\n        const engagementScore =\n          (tweet.likes || 0) * 1 +\n          (tweet.retweets || 0) * 2 +\n          (tweet.replies || 0) * 1.5;\n\n        // Analyze tweet content for relevance\n        const analysis = await this.analyzeTweetRelevance(tweet);\n        if (analysis.isRelevant) {\n          relevantTweetsCount++;\n          // Update topic matches\n          for (const topic of analysis.matchedTopics) {\n            topicsMatch[topic] = (topicsMatch[topic] || 0) + 1;\n          }\n        }\n\n        totalQualityScore += engagementScore;\n        totalInteractionScore += tweet.likes || 0;\n      }\n\n      const relevanceScore = relevantTweetsCount / timeline.tweets.length;\n      const qualityScore = totalQualityScore / timeline.tweets.length;\n\n      this.updateAccountScore(username, {\n        username,\n        relevanceScore,\n        qualityScore,\n        lastUpdated: new Date(),\n        totalTweetsAnalyzed: timeline.tweets.length,\n        relevantTweetsCount,\n        topicsMatch,\n        interactionScore: totalInteractionScore / timeline.tweets.length,\n      });\n\n      elizaLogger.info(\n        `[TwitterAccountDiscoveryService] Evaluated ${username}: relevance=${relevanceScore.toFixed(2)}, quality=${qualityScore.toFixed(2)}`,\n      );\n    } catch (error) {\n      elizaLogger.error(\n        `[TwitterAccountDiscoveryService] Error evaluating account ${username}:`,\n        error instanceof Error ? error.message : String(error),\n      );\n    }\n  }\n\n  private async analyzeTweetRelevance(tweet: Tweet): Promise<{\n    isRelevant: boolean;\n    matchedTopics: string[];\n  }> {\n    // TODO: Implement more sophisticated relevance analysis\n    // For now, using a simple keyword match\n    const relevantTopics = [\n      'blockchain',\n      'crypto',\n      'web3',\n      'defi',\n      'nft',\n      'dao',\n      'ethereum',\n      'bitcoin',\n      'solana',\n      'injective',\n    ];\n\n    const matchedTopics = relevantTopics.filter((topic) =>\n      tweet.text.toLowerCase().includes(topic.toLowerCase()),\n    );\n\n    return {\n      isRelevant: matchedTopics.length > 0,\n      matchedTopics,\n    };\n  }\n\n  private updateAccountScore(username: string, newScore: AccountScore): void {\n    const existingScore = this.accountScores.get(username);\n    if (existingScore) {\n      // Apply decay to old scores\n      existingScore.relevanceScore *= this.SCORE_DECAY_FACTOR;\n      existingScore.qualityScore *= this.SCORE_DECAY_FACTOR;\n\n      // Update with new scores\n      this.accountScores.set(username, {\n        ...existingScore,\n        ...newScore,\n        // Weighted average of old and new scores\n        relevanceScore:\n          (existingScore.relevanceScore + newScore.relevanceScore) / 2,\n        qualityScore: (existingScore.qualityScore + newScore.qualityScore) / 2,\n      });\n    } else {\n      this.accountScores.set(username, newScore);\n    }\n  }\n\n  public async updateTargetAccounts(): Promise<void> {\n    try {\n      const config = await this.configService.getConfig();\n      const currentAccounts = new Set(config.targetAccounts);\n      const accountsToRemove = new Set<string>();\n      const accountsToAdd = new Set<string>();\n\n      // Check existing accounts for removal\n      for (const username of currentAccounts) {\n        const score = this.accountScores.get(username);\n        if (\n          score &&\n          (score.relevanceScore < this.MIN_RELEVANCE_SCORE ||\n            score.qualityScore < this.MIN_QUALITY_SCORE)\n        ) {\n          accountsToRemove.add(username);\n        }\n      }\n\n      // Find new accounts to add\n      const sortedAccounts = Array.from(this.accountScores.entries())\n        .filter(\n          ([username, score]) =>\n            !currentAccounts.has(username) &&\n            score.relevanceScore >= this.MIN_RELEVANCE_SCORE &&\n            score.qualityScore >= this.MIN_QUALITY_SCORE,\n        )\n        .sort(\n          (a, b) =>\n            b[1].relevanceScore +\n            b[1].qualityScore -\n            (a[1].relevanceScore + a[1].qualityScore),\n        );\n\n      // Add top accounts up to MAX_ACCOUNTS limit\n      const availableSlots =\n        this.MAX_ACCOUNTS - (currentAccounts.size - accountsToRemove.size);\n\n      for (const [username] of sortedAccounts.slice(0, availableSlots)) {\n        accountsToAdd.add(username);\n      }\n\n      if (accountsToRemove.size > 0 || accountsToAdd.size > 0) {\n        const updatedAccounts = Array.from(currentAccounts)\n          .filter((username) => !accountsToRemove.has(username))\n          .concat(Array.from(accountsToAdd));\n\n        await this.configService.updateConfig({\n          targetAccounts: updatedAccounts,\n        });\n\n        elizaLogger.info(\n          `[TwitterAccountDiscoveryService] Updated target accounts: removed ${accountsToRemove.size}, added ${accountsToAdd.size}`,\n        );\n      }\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterAccountDiscoveryService] Error updating target accounts:',\n        error instanceof Error ? error.message : String(error),\n      );\n    }\n  }\n\n  public getAccountScores(): Map<string, AccountScore> {\n    return new Map(this.accountScores);\n  }\n}\n","import { twitterConfigQueries } from '@/extensions/src/db/queries';\nimport type { TwitterConfig } from '@/types/twitter-config';\nimport { type IAgentRuntime, elizaLogger } from '@elizaos/core';\n\n// TODO Only works for 1 account right now\nexport class TwitterConfigService {\n  private readonly twitterUsername: string;\n\n  constructor(runtime: IAgentRuntime) {\n    const username = runtime.getSetting('TWITTER_USERNAME');\n    if (!username) {\n      throw new Error('TWITTER_USERNAME is not set');\n    }\n    this.twitterUsername = username;\n  }\n  // Should use cache here\n  public async getConfig(): Promise<TwitterConfig> {\n    try {\n      const config = await twitterConfigQueries.getConfig(this.twitterUsername);\n      return config;\n    } catch (error) {\n      elizaLogger.error(\n        `[TwitterConfigService] Error fetching config for ${this.twitterUsername}:`,\n        error instanceof Error ? error.message : String(error),\n      );\n      throw error;\n    }\n  }\n\n  public async updateConfig(config: Partial<TwitterConfig>): Promise<void> {\n    try {\n      const updatedConfig = await twitterConfigQueries.updateConfig(\n        this.twitterUsername,\n        config,\n      );\n      return updatedConfig;\n    } catch (error) {\n      elizaLogger.error(\n        `[TwitterConfigService] Error updating config for ${this.twitterUsername}:`,\n        error instanceof Error ? error.message : String(error),\n      );\n      throw error;\n    }\n  }\n}\n","import { TwitterAccountDiscoveryService } from '@/services/twitter/twitter-account-discovery-service';\nimport { TwitterConfigService } from '@/services/twitter/twitter-config-service';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport { type IAgentRuntime, elizaLogger } from '@elizaos/core';\n\nexport class TwitterAccountDiscoveryClient {\n  private readonly configService: TwitterConfigService;\n  private readonly discoveryService: TwitterAccountDiscoveryService;\n  private discoveryInterval: Timer | null = null;\n  private evaluationInterval: Timer | null = null;\n\n  // Configuration\n  private readonly DISCOVERY_INTERVAL = 12 * 60 * 60 * 1000; // 12 hours\n  private readonly EVALUATION_INTERVAL = 24 * 60 * 60 * 1000; // 24 hours\n  private readonly ACCOUNTS_PER_DISCOVERY = 5; // Number of accounts to process in each discovery cycle\n\n  constructor(runtime: IAgentRuntime, twitterService: TwitterService) {\n    this.configService = new TwitterConfigService(runtime);\n    this.discoveryService = new TwitterAccountDiscoveryService(\n      twitterService,\n      this.configService,\n    );\n  }\n\n  public async start(): Promise<void> {\n    elizaLogger.info(\n      '[TwitterAccountDiscoveryClient] Starting account discovery client',\n    );\n\n    // Initial discovery and evaluation\n    await this.runDiscoveryCycle();\n    await this.runEvaluationCycle();\n\n    // Set up periodic discovery\n    this.discoveryInterval = setInterval(\n      () => this.runDiscoveryCycle(),\n      this.DISCOVERY_INTERVAL,\n    );\n\n    // Set up periodic evaluation\n    this.evaluationInterval = setInterval(\n      () => this.runEvaluationCycle(),\n      this.EVALUATION_INTERVAL,\n    );\n\n    elizaLogger.info(\n      '[TwitterAccountDiscoveryClient] Account discovery client started',\n    );\n  }\n\n  public async stop(): Promise<void> {\n    elizaLogger.info(\n      '[TwitterAccountDiscoveryClient] Stopping account discovery client',\n    );\n\n    if (this.discoveryInterval) {\n      clearInterval(this.discoveryInterval);\n      this.discoveryInterval = null;\n    }\n\n    if (this.evaluationInterval) {\n      clearInterval(this.evaluationInterval);\n      this.evaluationInterval = null;\n    }\n\n    elizaLogger.info(\n      '[TwitterAccountDiscoveryClient] Account discovery client stopped',\n    );\n  }\n\n  private async runDiscoveryCycle(): Promise<void> {\n    try {\n      elizaLogger.info(\n        '[TwitterAccountDiscoveryClient] Starting discovery cycle',\n      );\n\n      const config = await this.configService.getConfig();\n      const currentAccounts = config.targetAccounts;\n\n      // Randomly select accounts to process\n      const accountsToProcess = this.selectRandomAccounts(\n        currentAccounts,\n        this.ACCOUNTS_PER_DISCOVERY,\n      );\n\n      for (const account of accountsToProcess) {\n        const discoveredAccounts =\n          await this.discoveryService.discoverAccountsFromTimeline(account);\n\n        // Evaluate each discovered account\n        for (const discoveredAccount of discoveredAccounts) {\n          await this.discoveryService.evaluateAccount(discoveredAccount);\n        }\n      }\n\n      // Update target accounts based on evaluations\n      await this.discoveryService.updateTargetAccounts();\n\n      elizaLogger.info(\n        '[TwitterAccountDiscoveryClient] Completed discovery cycle',\n      );\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterAccountDiscoveryClient] Error in discovery cycle:',\n        error instanceof Error ? error.message : String(error),\n      );\n    }\n  }\n\n  private async runEvaluationCycle(): Promise<void> {\n    try {\n      elizaLogger.info(\n        '[TwitterAccountDiscoveryClient] Starting evaluation cycle',\n      );\n\n      const config = await this.configService.getConfig();\n\n      // Evaluate all current target accounts\n      for (const account of config.targetAccounts) {\n        await this.discoveryService.evaluateAccount(account);\n      }\n\n      // Update target accounts based on new evaluations\n      await this.discoveryService.updateTargetAccounts();\n\n      elizaLogger.info(\n        '[TwitterAccountDiscoveryClient] Completed evaluation cycle',\n      );\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterAccountDiscoveryClient] Error in evaluation cycle:',\n        error instanceof Error ? error.message : String(error),\n      );\n    }\n  }\n\n  private selectRandomAccounts(accounts: string[], count: number): string[] {\n    const shuffled = [...accounts].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  }\n\n  public getDiscoveryService(): TwitterAccountDiscoveryService {\n    return this.discoveryService;\n  }\n}\n","import { tweetQueries } from '@/extensions/src/db/queries';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport type { TwitterConfig } from '@/types/config';\nimport { elizaLogger } from '@elizaos/core';\nimport { SearchMode } from 'agent-twitter-client';\n\nexport async function initializeTargetAccounts(\n  twitterService: TwitterService,\n  config: TwitterConfig,\n): Promise<void> {\n  try {\n    elizaLogger.info(\n      '[TwitterAccounts] Checking target accounts initialization',\n    );\n\n    // Check if accounts already exist\n    const existingAccounts = await tweetQueries.getTargetAccounts();\n    if (existingAccounts.length > 0) {\n      elizaLogger.info('[TwitterAccounts] Target accounts already initialized');\n      return;\n    }\n\n    elizaLogger.info(\n      '[TwitterAccounts] Initializing target accounts from config',\n    );\n\n    // Get target accounts from config\n    const targetAccounts = config.targetAccounts;\n\n    // Initialize each account with basic metadata\n    for (const username of targetAccounts) {\n      try {\n        // Fetch basic profile info for the account using TwitterService\n        const { tweets } = await twitterService.searchTweets(\n          `from:${username}`,\n          1,\n          SearchMode.Latest,\n          '[TwitterAccounts]',\n        );\n\n        const profile = tweets[0];\n        if (!profile) {\n          elizaLogger.error(\n            `[TwitterAccounts] Could not fetch profile for ${username}`,\n          );\n          continue;\n        }\n\n        await tweetQueries.insertTargetAccount({\n          username,\n          userId: profile.userId || '',\n          displayName: profile.name || username,\n          description: '', // We don't have access to this through tweets\n          followersCount: 0, // We don't have access to this through tweets\n          followingCount: 0, // We don't have access to this through tweets\n          friendsCount: 0,\n          mediaCount: 0,\n          statusesCount: 0,\n          likesCount: 0,\n          listedCount: 0,\n          tweetsCount: 0,\n          isPrivate: false,\n          isVerified: false,\n          isBlueVerified: false,\n          joinedAt: null,\n          location: '',\n          avatarUrl: null,\n          bannerUrl: null,\n          websiteUrl: null,\n          canDm: false,\n          createdAt: new Date(),\n          lastUpdated: new Date(),\n          isActive: true,\n          source: 'config',\n          // Initialize influence metrics with default values\n          avgLikes50: 0,\n          avgRetweets50: 0,\n          avgReplies50: 0,\n          avgViews50: 0,\n          engagementRate50: 0,\n          influenceScore: 0,\n          last50TweetsUpdatedAt: null,\n        });\n\n        elizaLogger.debug(\n          `[TwitterAccounts] Initialized target account: ${username}`,\n        );\n      } catch (error) {\n        elizaLogger.error(\n          `[TwitterAccounts] Error initializing target account ${username}:`,\n          error,\n        );\n      }\n    }\n\n    elizaLogger.info(\n      '[TwitterAccounts] Completed target accounts initialization',\n    );\n  } catch (error) {\n    elizaLogger.error(\n      '[TwitterAccounts] Error initializing target accounts:',\n      error,\n    );\n    throw error;\n  }\n}\n","import { tweetQueries } from '@/extensions/src/db/queries.js';\nimport type { TopicWeightRow } from '@/types/topic.js';\nimport { type IAgentRuntime, elizaLogger } from '@elizaos/core';\n\nexport async function initializeTopicWeights(\n  runtime: IAgentRuntime,\n): Promise<TopicWeightRow[]> {\n  try {\n    const topicWeights = await tweetQueries.getTopicWeights();\n\n    if (topicWeights.length) {\n      elizaLogger.info(\n        `[TwitterAccounts] Found ${topicWeights.length} existing topic weights`,\n      );\n      return topicWeights;\n    }\n\n    const defaultTopics = runtime.character.topics || [\n      'injective protocol',\n      'DeFi',\n      'cryptocurrency',\n      'blockchain',\n      'market analysis',\n    ];\n\n    await tweetQueries.initializeTopicWeights(defaultTopics);\n    elizaLogger.info(\n      `[TwitterAccounts] Initialized ${defaultTopics.length} default topics`,\n    );\n\n    // Reload the topic weights\n    const newTopicWeights = await tweetQueries.getTopicWeights();\n\n    if (!newTopicWeights.length) {\n      elizaLogger.error('[TwitterAccounts] Failed to initialize topic weights');\n      throw new Error('Failed to initialize topic weights');\n    }\n\n    return newTopicWeights;\n  } catch (error) {\n    elizaLogger.error(\n      '[TwitterAccounts] Error initializing topic weights:',\n      error,\n    );\n    throw error;\n  }\n}\n","import { accountTopicQueries, tweetQueries } from '@/extensions/src/db/queries';\nimport type { TargetAccount, WeightedAccount } from '@/types/account';\nimport type { TwitterConfig } from '@/types/config';\nimport { type IAgentRuntime, elizaLogger } from '@elizaos/core';\nimport { updateYapsData } from '../account-metrics/yaps';\nimport { getAggregatedTopicWeights } from '../topic-weights/topics';\nimport { analyzeTopicRelationships } from './analyze-topic-relationships';\n\n/**\n * Performs weighted random selection of accounts from a pool\n * @param accounts Array of weighted accounts to select from\n * @param count Number of accounts to select\n * @returns Array of selected target accounts\n */\nfunction selectAccountsWithWeights(\n  accounts: WeightedAccount[],\n  count: number,\n): TargetAccount[] {\n  const selected: TargetAccount[] = [];\n  const available = [...accounts];\n  const totalWeight = accounts.reduce((sum, { weight }) => sum + weight, 0);\n\n  for (let i = 0; i < count && available.length > 0; i++) {\n    let randomWeight = Math.random() * totalWeight;\n    let selectedIndex = 0;\n\n    // Find the account that corresponds to the random weight\n    for (let j = 0; j < available.length; j++) {\n      randomWeight -= available[j].weight;\n      if (randomWeight <= 0) {\n        selectedIndex = j;\n        break;\n      }\n    }\n\n    // Add selected account and remove it from available pool\n    selected.push(available[selectedIndex].account);\n    available.splice(selectedIndex, 1);\n  }\n\n  return selected;\n}\n\n/**\n * Selects target accounts based on topics, yaps data, and influence scores\n * @param runtime - Agent runtime for AI operations\n * @param config - Twitter configuration\n * @param timeframeHours - Number of hours to look back for topic weights\n * @param preferredTopic - Optional topic to bias selection towards related topics\n * @returns Array of selected target accounts\n */\nexport async function selectTargetAccounts(\n  runtime: IAgentRuntime,\n  config: TwitterConfig,\n  timeframeHours = 24,\n  preferredTopic?: string,\n): Promise<TargetAccount[]> {\n  try {\n    // Check if target accounts exist\n    const targetAccounts = await tweetQueries.getTargetAccounts();\n    if (!targetAccounts.length) {\n      elizaLogger.warn('[TwitterAccounts] No target accounts found');\n      return [];\n    }\n\n    // Get topic weights and analyze relationships\n    const topicWeights = await getAggregatedTopicWeights(timeframeHours);\n    let relevantTopics = topicWeights;\n\n    if (preferredTopic && topicWeights.length > 0) {\n      try {\n        const analysis = await analyzeTopicRelationships(\n          runtime,\n          topicWeights.map((tw) => tw.topic),\n          preferredTopic,\n        );\n\n        // Filter and adjust topic weights based on relationships\n        relevantTopics = topicWeights\n          .map((tw) => {\n            const relationship = analysis.relatedTopics.find(\n              (r) => r.topic === tw.topic,\n            );\n\n            if (\n              !relationship ||\n              relationship.relevanceScore < 0.4 ||\n              relationship.relationshipType === 'none'\n            ) {\n              return { ...tw, weight: 0 };\n            }\n\n            return {\n              ...tw,\n              weight:\n                tw.weight * 0.3 +\n                relationship.relevanceScore * 0.5 +\n                analysis.analysisMetadata.confidence * 0.2,\n            };\n          })\n          .filter((tw) => tw.weight > 0);\n      } catch (error) {\n        elizaLogger.warn(\n          '[TwitterAccounts] Error in topic relationship analysis, using original weights:',\n          {\n            error: error instanceof Error ? error.message : String(error),\n          },\n        );\n      }\n    }\n\n    // Get accounts associated with relevant topics and build a map of account weights\n    const topicBasedAccounts = new Map<string, number>(); // username -> weight\n    const accountTopicMentions = new Map<string, number>(); // username -> total mentions across topics\n\n    for (const topic of relevantTopics) {\n      const accounts = await accountTopicQueries.getTopicAccounts(topic.topic);\n      for (const account of accounts) {\n        const currentWeight = topicBasedAccounts.get(account.username) || 0;\n        const currentMentions = accountTopicMentions.get(account.username) || 0;\n\n        topicBasedAccounts.set(\n          account.username,\n          currentWeight + (topic.weight * account.mentionCount) / 10,\n        );\n        accountTopicMentions.set(\n          account.username,\n          currentMentions + account.mentionCount,\n        );\n      }\n    }\n\n    // Filter target accounts to only those with topic relationships\n    const accountsWithTopics = targetAccounts.filter((account) =>\n      accountTopicMentions.has(account.username),\n    );\n\n    if (accountsWithTopics.length === 0) {\n      elizaLogger.warn(\n        '[TwitterAccounts] No accounts found with relevant topic relationships',\n      );\n      return [];\n    }\n\n    // Get yaps data for filtered accounts\n    const userIds = accountsWithTopics.map((account) => account.userId);\n    const yapsData = await tweetQueries.getYapsForAccounts(userIds);\n\n    // Calculate total accounts to process\n    const totalAccountsToProcess = Math.min(\n      config.search.tweetLimits.accountsToProcess,\n      accountsWithTopics.length,\n    );\n\n    // Split selection between yaps-based and influence-based\n    const yapsBasedCount = Math.ceil(totalAccountsToProcess * 0.5); // 50%\n    const influenceBasedCount = totalAccountsToProcess - yapsBasedCount; // 50%\n\n    // Create weighted arrays for selection methods\n    const yapsWeighted: WeightedAccount[] = accountsWithTopics.map(\n      (account) => {\n        const accountYaps = yapsData.find(\n          (yaps) => yaps.userId === account.userId,\n        );\n        const topicWeight = topicBasedAccounts.get(account.username) || 0;\n        const yapsWeight = 1 + (accountYaps?.yapsL24h || 0);\n        // Combine yaps weight with topic weight\n        return {\n          account,\n          weight: yapsWeight * (0.7 + topicWeight * 0.3), // Scale yaps weight by topic relevance\n        };\n      },\n    );\n\n    const influenceWeighted: WeightedAccount[] = accountsWithTopics.map(\n      (account) => {\n        const topicWeight = topicBasedAccounts.get(account.username) || 0;\n        const influenceWeight = 1 + account.influenceScore / 100;\n        // Combine influence weight with topic weight\n        return {\n          account,\n          weight: influenceWeight * (0.7 + topicWeight * 0.3), // Scale influence weight by topic relevance\n        };\n      },\n    );\n\n    // Select accounts using both methods\n    const yapsSelected = selectAccountsWithWeights(\n      yapsWeighted,\n      yapsBasedCount,\n    );\n\n    const influenceSelected = selectAccountsWithWeights(\n      // Filter out accounts already selected by yaps\n      influenceWeighted.filter(\n        (weighted) =>\n          !yapsSelected.some(\n            (selected) => selected.userId === weighted.account.userId,\n          ),\n      ),\n      influenceBasedCount,\n    );\n\n    // Combine selections\n    const accountsToProcess = [...yapsSelected, ...influenceSelected];\n\n    elizaLogger.info(\n      `[TwitterAccounts] Selected ${accountsToProcess.length} accounts ` +\n        `(${yapsSelected.length} by yaps, ${influenceSelected.length} by influence) ` +\n        `from ${accountsWithTopics.length} topic-relevant accounts out of ${targetAccounts.length} total accounts. ` +\n        `Config limit: ${config.search.tweetLimits.accountsToProcess}. ` +\n        `Selected: ${accountsToProcess.map((a) => a.username).join(', ')}`,\n    );\n\n    // Update Yaps data for selected accounts\n    await updateYapsData(accountsToProcess);\n\n    return accountsToProcess;\n  } catch (error) {\n    elizaLogger.error(\n      '[TwitterAccounts] Error selecting target accounts:',\n      error instanceof Error ? error.stack || error.message : String(error),\n    );\n    throw error;\n  }\n}\n","import { elizaLogger } from '@elizaos/core';\nimport axios from 'axios';\nimport type { YapsResponse } from '../../types/yaps';\n\nexport class KaitoService {\n  private readonly baseUrl = 'https://api.kaito.ai/api/v1';\n  private readonly rateLimitCalls = 100;\n  private readonly rateLimitWindow = 5 * 60 * 1000; // 5 minutes in milliseconds\n  private callCount = 0;\n  private lastResetTime = Date.now();\n\n  constructor() {\n    // Reset call count every rate limit window\n    setInterval(() => {\n      this.callCount = 0;\n      this.lastResetTime = Date.now();\n    }, this.rateLimitWindow);\n  }\n\n  private async checkRateLimit(): Promise<boolean> {\n    if (Date.now() - this.lastResetTime >= this.rateLimitWindow) {\n      this.callCount = 0;\n      this.lastResetTime = Date.now();\n    }\n\n    if (this.callCount >= this.rateLimitCalls) {\n      elizaLogger.warn('[KaitoService] Rate limit reached, waiting for reset');\n      return false;\n    }\n\n    this.callCount++;\n    return true;\n  }\n\n  public async getYaps(params: {\n    userId?: string;\n    username?: string;\n  }): Promise<YapsResponse | null> {\n    try {\n      if (!params.userId && !params.username) {\n        throw new Error('Either userId or username must be provided');\n      }\n\n      if (!(await this.checkRateLimit())) {\n        return null;\n      }\n\n      const queryParams = new URLSearchParams();\n      if (params.userId) {\n        queryParams.append('user_id', params.userId);\n      }\n      if (params.username) {\n        queryParams.append('username', params.username);\n      }\n\n      const response = await axios.get<YapsResponse>(\n        `${this.baseUrl}/yaps?${queryParams.toString()}`,\n      );\n\n      elizaLogger.info('[KaitoService] Successfully fetched Yaps data', {\n        userId: params.userId,\n        username: params.username,\n      });\n\n      return response.data;\n    } catch (error) {\n      elizaLogger.error('[KaitoService] Error fetching Yaps data:', {\n        error: error instanceof Error ? error.message : String(error),\n        userId: params.userId,\n        username: params.username,\n      });\n      return null;\n    }\n  }\n\n  public async getYapsForAccounts(\n    accounts: Array<{ userId?: string; username: string }>,\n  ): Promise<Map<string, YapsResponse>> {\n    const results = new Map<string, YapsResponse>();\n\n    for (const account of accounts) {\n      try {\n        const yaps = await this.getYaps({\n          userId: account.userId,\n          username: account.username,\n        });\n\n        if (yaps) {\n          results.set(account.username, yaps);\n        }\n      } catch (error) {\n        elizaLogger.error('[KaitoService] Error fetching Yaps for account:', {\n          error: error instanceof Error ? error.message : String(error),\n          account,\n        });\n      }\n    }\n\n    return results;\n  }\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","import FormData from 'form-data';\n\nexport default FormData;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import crypto from 'crypto';\nimport URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  const randomValues = new Uint32Array(size);\n  crypto.randomFillSync(randomValues);\n  for (let i = 0; i < size; i++) {\n    str += alphabet[randomValues[i] % length];\n  }\n\n  return str;\n}\n\n\nexport default {\n  isNode: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob: typeof Blob !== 'undefined' && Blob || null\n  },\n  ALPHABET,\n  generateString,\n  protocols: [ 'http', 'https', 'file', 'data' ]\n};\n","'use strict';\n\nimport url from 'url';\nexport default url.URLSearchParams;\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && isRelativeUrl || allowAbsoluteUrls == false) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport buildURL from './../helpers/buildURL.js';\nimport proxyFromEnv from 'proxy-from-env';\nimport http from 'http';\nimport https from 'https';\nimport util from 'util';\nimport followRedirects from 'follow-redirects';\nimport zlib from 'zlib';\nimport {VERSION} from '../env/data.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport platform from '../platform/index.js';\nimport fromDataURI from '../helpers/fromDataURI.js';\nimport stream from 'stream';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport AxiosTransformStream from '../helpers/AxiosTransformStream.js';\nimport {EventEmitter} from 'events';\nimport formDataToStream from \"../helpers/formDataToStream.js\";\nimport readBlob from \"../helpers/readBlob.js\";\nimport ZlibHeaderTransformStream from '../helpers/ZlibHeaderTransformStream.js';\nimport callbackify from \"../helpers/callbackify.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\n\nconst zlibOptions = {\n  flush: zlib.constants.Z_SYNC_FLUSH,\n  finishFlush: zlib.constants.Z_SYNC_FLUSH\n};\n\nconst brotliOptions = {\n  flush: zlib.constants.BROTLI_OPERATION_FLUSH,\n  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH\n}\n\nconst isBrotliSupported = utils.isFunction(zlib.createBrotliDecompress);\n\nconst {http: httpFollow, https: httpsFollow} = followRedirects;\n\nconst isHttps = /https:?/;\n\nconst supportedProtocols = platform.protocols.map(protocol => {\n  return protocol + ':';\n});\n\nconst flushOnFinish = (stream, [throttled, flush]) => {\n  stream\n    .on('end', flush)\n    .on('error', flush);\n\n  return throttled;\n}\n\n/**\n * If the proxy or config beforeRedirects functions are defined, call them with the options\n * object.\n *\n * @param {Object<string, any>} options - The options object that was passed to the request.\n *\n * @returns {Object<string, any>}\n */\nfunction dispatchBeforeRedirect(options, responseDetails) {\n  if (options.beforeRedirects.proxy) {\n    options.beforeRedirects.proxy(options);\n  }\n  if (options.beforeRedirects.config) {\n    options.beforeRedirects.config(options, responseDetails);\n  }\n}\n\n/**\n * If the proxy or config afterRedirects functions are defined, call them with the options\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} configProxy configuration from Axios options object\n * @param {string} location\n *\n * @returns {http.ClientRequestArgs}\n */\nfunction setProxy(options, configProxy, location) {\n  let proxy = configProxy;\n  if (!proxy && proxy !== false) {\n    const proxyUrl = proxyFromEnv.getProxyForUrl(location);\n    if (proxyUrl) {\n      proxy = new URL(proxyUrl);\n    }\n  }\n  if (proxy) {\n    // Basic proxy authorization\n    if (proxy.username) {\n      proxy.auth = (proxy.username || '') + ':' + (proxy.password || '');\n    }\n\n    if (proxy.auth) {\n      // Support proxy auth object form\n      if (proxy.auth.username || proxy.auth.password) {\n        proxy.auth = (proxy.auth.username || '') + ':' + (proxy.auth.password || '');\n      }\n      const base64 = Buffer\n        .from(proxy.auth, 'utf8')\n        .toString('base64');\n      options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n    }\n\n    options.headers.host = options.hostname + (options.port ? ':' + options.port : '');\n    const proxyHost = proxy.hostname || proxy.host;\n    options.hostname = proxyHost;\n    // Replace 'host' since options is not a URL object\n    options.host = proxyHost;\n    options.port = proxy.port;\n    options.path = location;\n    if (proxy.protocol) {\n      options.protocol = proxy.protocol.includes(':') ? proxy.protocol : `${proxy.protocol}:`;\n    }\n  }\n\n  options.beforeRedirects.proxy = function beforeRedirect(redirectOptions) {\n    // Configure proxy for redirected request, passing the original config proxy to apply\n    // the exact same logic as if the redirected request was performed by axios directly.\n    setProxy(redirectOptions, configProxy, redirectOptions.href);\n  };\n}\n\nconst isHttpAdapterSupported = typeof process !== 'undefined' && utils.kindOf(process) === 'process';\n\n// temporary hotfix\n\nconst wrapAsync = (asyncExecutor) => {\n  return new Promise((resolve, reject) => {\n    let onDone;\n    let isDone;\n\n    const done = (value, isRejected) => {\n      if (isDone) return;\n      isDone = true;\n      onDone && onDone(value, isRejected);\n    }\n\n    const _resolve = (value) => {\n      done(value);\n      resolve(value);\n    };\n\n    const _reject = (reason) => {\n      done(reason, true);\n      reject(reason);\n    }\n\n    asyncExecutor(_resolve, _reject, (onDoneHandler) => (onDone = onDoneHandler)).catch(_reject);\n  })\n};\n\nconst resolveFamily = ({address, family}) => {\n  if (!utils.isString(address)) {\n    throw TypeError('address must be a string');\n  }\n  return ({\n    address,\n    family: family || (address.indexOf('.') < 0 ? 6 : 4)\n  });\n}\n\nconst buildAddressEntry = (address, family) => resolveFamily(utils.isObject(address) ? address : {address, family});\n\n/*eslint consistent-return:0*/\nexport default isHttpAdapterSupported && function httpAdapter(config) {\n  return wrapAsync(async function dispatchHttpRequest(resolve, reject, onDone) {\n    let {data, lookup, family} = config;\n    const {responseType, responseEncoding} = config;\n    const method = config.method.toUpperCase();\n    let isDone;\n    let rejected = false;\n    let req;\n\n    if (lookup) {\n      const _lookup = callbackify(lookup, (value) => utils.isArray(value) ? value : [value]);\n      // hotfix to support opt.all option which is required for node 20.x\n      lookup = (hostname, opt, cb) => {\n        _lookup(hostname, opt, (err, arg0, arg1) => {\n          if (err) {\n            return cb(err);\n          }\n\n          const addresses = utils.isArray(arg0) ? arg0.map(addr => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];\n\n          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);\n        });\n      }\n    }\n\n    // temporary internal emitter until the AxiosRequest class will be implemented\n    const emitter = new EventEmitter();\n\n    const onFinished = () => {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(abort);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', abort);\n      }\n\n      emitter.removeAllListeners();\n    }\n\n    onDone((value, isRejected) => {\n      isDone = true;\n      if (isRejected) {\n        rejected = true;\n        onFinished();\n      }\n    });\n\n    function abort(reason) {\n      emitter.emit('abort', !reason || reason.type ? new CanceledError(null, config, req) : reason);\n    }\n\n    emitter.once('abort', reject);\n\n    if (config.cancelToken || config.signal) {\n      config.cancelToken && config.cancelToken.subscribe(abort);\n      if (config.signal) {\n        config.signal.aborted ? abort() : config.signal.addEventListener('abort', abort);\n      }\n    }\n\n    // Parse url\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    const parsed = new URL(fullPath, platform.hasBrowserEnv ? platform.origin : undefined);\n    const protocol = parsed.protocol || supportedProtocols[0];\n\n    if (protocol === 'data:') {\n      let convertedData;\n\n      if (method !== 'GET') {\n        return settle(resolve, reject, {\n          status: 405,\n          statusText: 'method not allowed',\n          headers: {},\n          config\n        });\n      }\n\n      try {\n        convertedData = fromDataURI(config.url, responseType === 'blob', {\n          Blob: config.env && config.env.Blob\n        });\n      } catch (err) {\n        throw AxiosError.from(err, AxiosError.ERR_BAD_REQUEST, config);\n      }\n\n      if (responseType === 'text') {\n        convertedData = convertedData.toString(responseEncoding);\n\n        if (!responseEncoding || responseEncoding === 'utf8') {\n          convertedData = utils.stripBOM(convertedData);\n        }\n      } else if (responseType === 'stream') {\n        convertedData = stream.Readable.from(convertedData);\n      }\n\n      return settle(resolve, reject, {\n        data: convertedData,\n        status: 200,\n        statusText: 'OK',\n        headers: new AxiosHeaders(),\n        config\n      });\n    }\n\n    if (supportedProtocols.indexOf(protocol) === -1) {\n      return reject(new AxiosError(\n        'Unsupported protocol ' + protocol,\n        AxiosError.ERR_BAD_REQUEST,\n        config\n      ));\n    }\n\n    const headers = AxiosHeaders.from(config.headers).normalize();\n\n    // Set User-Agent (required by some servers)\n    // See https://github.com/axios/axios/issues/69\n    // User-Agent is specified; handle case where no UA header is desired\n    // Only set header if it hasn't been set in config\n    headers.set('User-Agent', 'axios/' + VERSION, false);\n\n    const {onUploadProgress, onDownloadProgress} = config;\n    const maxRate = config.maxRate;\n    let maxUploadRate = undefined;\n    let maxDownloadRate = undefined;\n\n    // support for spec compliant FormData objects\n    if (utils.isSpecCompliantForm(data)) {\n      const userBoundary = headers.getContentType(/boundary=([-_\\w\\d]{10,70})/i);\n\n      data = formDataToStream(data, (formHeaders) => {\n        headers.set(formHeaders);\n      }, {\n        tag: `axios-${VERSION}-boundary`,\n        boundary: userBoundary && userBoundary[1] || undefined\n      });\n      // support for https://www.npmjs.com/package/form-data api\n    } else if (utils.isFormData(data) && utils.isFunction(data.getHeaders)) {\n      headers.set(data.getHeaders());\n\n      if (!headers.hasContentLength()) {\n        try {\n          const knownLength = await util.promisify(data.getLength).call(data);\n          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);\n          /*eslint no-empty:0*/\n        } catch (e) {\n        }\n      }\n    } else if (utils.isBlob(data) || utils.isFile(data)) {\n      data.size && headers.setContentType(data.type || 'application/octet-stream');\n      headers.setContentLength(data.size || 0);\n      data = stream.Readable.from(readBlob(data));\n    } else if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(new AxiosError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers.setContentLength(data.length, false);\n\n      if (config.maxBodyLength > -1 && data.length > config.maxBodyLength) {\n        return reject(new AxiosError(\n          'Request body larger than maxBodyLength limit',\n          AxiosError.ERR_BAD_REQUEST,\n          config\n        ));\n      }\n    }\n\n    const contentLength = utils.toFiniteNumber(headers.getContentLength());\n\n    if (utils.isArray(maxRate)) {\n      maxUploadRate = maxRate[0];\n      maxDownloadRate = maxRate[1];\n    } else {\n      maxUploadRate = maxDownloadRate = maxRate;\n    }\n\n    if (data && (onUploadProgress || maxUploadRate)) {\n      if (!utils.isStream(data)) {\n        data = stream.Readable.from(data, {objectMode: false});\n      }\n\n      data = stream.pipeline([data, new AxiosTransformStream({\n        maxRate: utils.toFiniteNumber(maxUploadRate)\n      })], utils.noop);\n\n      onUploadProgress && data.on('progress', flushOnFinish(\n        data,\n        progressEventDecorator(\n          contentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress), false, 3)\n        )\n      ));\n    }\n\n    // HTTP basic authentication\n    let auth = undefined;\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    if (!auth && parsed.username) {\n      const urlUsername = parsed.username;\n      const urlPassword = parsed.password;\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    auth && headers.delete('authorization');\n\n    let path;\n\n    try {\n      path = buildURL(\n        parsed.pathname + parsed.search,\n        config.params,\n        config.paramsSerializer\n      ).replace(/^\\?/, '');\n    } catch (err) {\n      const customErr = new Error(err.message);\n      customErr.config = config;\n      customErr.url = config.url;\n      customErr.exists = true;\n      return reject(customErr);\n    }\n\n    headers.set(\n      'Accept-Encoding',\n      'gzip, compress, deflate' + (isBrotliSupported ? ', br' : ''), false\n      );\n\n    const options = {\n      path,\n      method: method,\n      headers: headers.toJSON(),\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth,\n      protocol,\n      family,\n      beforeRedirect: dispatchBeforeRedirect,\n      beforeRedirects: {}\n    };\n\n    // cacheable-lookup integration hotfix\n    !utils.isUndefined(lookup) && (options.lookup = lookup);\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname.startsWith(\"[\") ? parsed.hostname.slice(1, -1) : parsed.hostname;\n      options.port = parsed.port;\n      setProxy(options, config.proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    let transport;\n    const isHttpsRequest = isHttps.test(options.protocol);\n    options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsRequest ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      if (config.beforeRedirect) {\n        options.beforeRedirects.config = config.beforeRedirect;\n      }\n      transport = isHttpsRequest ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    } else {\n      // follow-redirects does not skip comparison, so it should always succeed for axios -1 unlimited\n      options.maxBodyLength = Infinity;\n    }\n\n    if (config.insecureHTTPParser) {\n      options.insecureHTTPParser = config.insecureHTTPParser;\n    }\n\n    // Create the request\n    req = transport.request(options, function handleResponse(res) {\n      if (req.destroyed) return;\n\n      const streams = [res];\n\n      const responseLength = +res.headers['content-length'];\n\n      if (onDownloadProgress || maxDownloadRate) {\n        const transformStream = new AxiosTransformStream({\n          maxRate: utils.toFiniteNumber(maxDownloadRate)\n        });\n\n        onDownloadProgress && transformStream.on('progress', flushOnFinish(\n          transformStream,\n          progressEventDecorator(\n            responseLength,\n            progressEventReducer(asyncDecorator(onDownloadProgress), true, 3)\n          )\n        ));\n\n        streams.push(transformStream);\n      }\n\n      // decompress the response body transparently if required\n      let responseStream = res;\n\n      // return the last request in case of redirects\n      const lastRequest = res.req || req;\n\n      // if decompress disabled we should not decompress\n      if (config.decompress !== false && res.headers['content-encoding']) {\n        // if no content, but headers still say that it is encoded,\n        // remove the header not confuse downstream operations\n        if (method === 'HEAD' || res.statusCode === 204) {\n          delete res.headers['content-encoding'];\n        }\n\n        switch ((res.headers['content-encoding'] || '').toLowerCase()) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'x-gzip':\n        case 'compress':\n        case 'x-compress':\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'deflate':\n          streams.push(new ZlibHeaderTransformStream());\n\n          // add the unzipper to the body stream processing pipeline\n          streams.push(zlib.createUnzip(zlibOptions));\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        case 'br':\n          if (isBrotliSupported) {\n            streams.push(zlib.createBrotliDecompress(brotliOptions));\n            delete res.headers['content-encoding'];\n          }\n        }\n      }\n\n      responseStream = streams.length > 1 ? stream.pipeline(streams, utils.noop) : streams[0];\n\n      const offListeners = stream.finished(responseStream, () => {\n        offListeners();\n        onFinished();\n      });\n\n      const response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: new AxiosHeaders(res.headers),\n        config,\n        request: lastRequest\n      };\n\n      if (responseType === 'stream') {\n        response.data = responseStream;\n        settle(resolve, reject, response);\n      } else {\n        const responseBuffer = [];\n        let totalResponseBytes = 0;\n\n        responseStream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n          totalResponseBytes += chunk.length;\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {\n            // stream.destroy() emit aborted event before calling reject() on Node.js v16\n            rejected = true;\n            responseStream.destroy();\n            reject(new AxiosError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              AxiosError.ERR_BAD_RESPONSE, config, lastRequest));\n          }\n        });\n\n        responseStream.on('aborted', function handlerStreamAborted() {\n          if (rejected) {\n            return;\n          }\n\n          const err = new AxiosError(\n            'stream has been aborted',\n            AxiosError.ERR_BAD_RESPONSE,\n            config,\n            lastRequest\n          );\n          responseStream.destroy(err);\n          reject(err);\n        });\n\n        responseStream.on('error', function handleStreamError(err) {\n          if (req.destroyed) return;\n          reject(AxiosError.from(err, null, config, lastRequest));\n        });\n\n        responseStream.on('end', function handleStreamEnd() {\n          try {\n            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);\n            if (responseType !== 'arraybuffer') {\n              responseData = responseData.toString(responseEncoding);\n              if (!responseEncoding || responseEncoding === 'utf8') {\n                responseData = utils.stripBOM(responseData);\n              }\n            }\n            response.data = responseData;\n          } catch (err) {\n            return reject(AxiosError.from(err, null, config, response.request, response));\n          }\n          settle(resolve, reject, response);\n        });\n      }\n\n      emitter.once('abort', err => {\n        if (!responseStream.destroyed) {\n          responseStream.emit('error', err);\n          responseStream.destroy();\n        }\n      });\n    });\n\n    emitter.once('abort', err => {\n      reject(err);\n      req.destroy(err);\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      // @todo remove\n      // if (req.aborted && err.code !== AxiosError.ERR_FR_TOO_MANY_REDIRECTS) return;\n      reject(AxiosError.from(err, null, config, req));\n    });\n\n    // set tcp keep alive to prevent drop connection by peer\n    req.on('socket', function handleRequestSocket(socket) {\n      // default interval of sending ack packet is 1 minute\n      socket.setKeepAlive(true, 1000 * 60);\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // This is forcing a int timeout to avoid problems if the `req` interface doesn't handle other types.\n      const timeout = parseInt(config.timeout, 10);\n\n      if (Number.isNaN(timeout)) {\n        reject(new AxiosError(\n          'error trying to parse `config.timeout` to int',\n          AxiosError.ERR_BAD_OPTION_VALUE,\n          config,\n          req\n        ));\n\n        return;\n      }\n\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devouring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(timeout, function handleRequestTimeout() {\n        if (isDone) return;\n        let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n        const transitional = config.transitional || transitionalDefaults;\n        if (config.timeoutErrorMessage) {\n          timeoutErrorMessage = config.timeoutErrorMessage;\n        }\n        reject(new AxiosError(\n          timeoutErrorMessage,\n          transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n          config,\n          req\n        ));\n        abort();\n      });\n    }\n\n\n    // Send the request\n    if (utils.isStream(data)) {\n      let ended = false;\n      let errored = false;\n\n      data.on('end', () => {\n        ended = true;\n      });\n\n      data.once('error', err => {\n        errored = true;\n        req.destroy(err);\n      });\n\n      data.on('close', () => {\n        if (!ended && !errored) {\n          abort(new CanceledError('Request stream has been aborted', config, req));\n        }\n      });\n\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n}\n\nexport const __setProxy = setProxy;\n","export const VERSION = \"1.8.3\";","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport parseProtocol from './parseProtocol.js';\nimport platform from '../platform/index.js';\n\nconst DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\\s\\S]*)$/;\n\n/**\n * Parse data uri to a Buffer or Blob\n *\n * @param {String} uri\n * @param {?Boolean} asBlob\n * @param {?Object} options\n * @param {?Function} options.Blob\n *\n * @returns {Buffer|Blob}\n */\nexport default function fromDataURI(uri, asBlob, options) {\n  const _Blob = options && options.Blob || platform.classes.Blob;\n  const protocol = parseProtocol(uri);\n\n  if (asBlob === undefined && _Blob) {\n    asBlob = true;\n  }\n\n  if (protocol === 'data') {\n    uri = protocol.length ? uri.slice(protocol.length + 1) : uri;\n\n    const match = DATA_URL_PATTERN.exec(uri);\n\n    if (!match) {\n      throw new AxiosError('Invalid URL', AxiosError.ERR_INVALID_URL);\n    }\n\n    const mime = match[1];\n    const isBase64 = match[2];\n    const body = match[3];\n    const buffer = Buffer.from(decodeURIComponent(body), isBase64 ? 'base64' : 'utf8');\n\n    if (asBlob) {\n      if (!_Blob) {\n        throw new AxiosError('Blob is not supported', AxiosError.ERR_NOT_SUPPORT);\n      }\n\n      return new _Blob([buffer], {type: mime});\n    }\n\n    return buffer;\n  }\n\n  throw new AxiosError('Unsupported protocol ' + protocol, AxiosError.ERR_NOT_SUPPORT);\n}\n","'use strict';\n\nimport stream from 'stream';\nimport utils from '../utils.js';\n\nconst kInternals = Symbol('internals');\n\nclass AxiosTransformStream extends stream.Transform{\n  constructor(options) {\n    options = utils.toFlatObject(options, {\n      maxRate: 0,\n      chunkSize: 64 * 1024,\n      minChunkSize: 100,\n      timeWindow: 500,\n      ticksRate: 2,\n      samplesCount: 15\n    }, null, (prop, source) => {\n      return !utils.isUndefined(source[prop]);\n    });\n\n    super({\n      readableHighWaterMark: options.chunkSize\n    });\n\n    const internals = this[kInternals] = {\n      timeWindow: options.timeWindow,\n      chunkSize: options.chunkSize,\n      maxRate: options.maxRate,\n      minChunkSize: options.minChunkSize,\n      bytesSeen: 0,\n      isCaptured: false,\n      notifiedBytesLoaded: 0,\n      ts: Date.now(),\n      bytes: 0,\n      onReadCallback: null\n    };\n\n    this.on('newListener', event => {\n      if (event === 'progress') {\n        if (!internals.isCaptured) {\n          internals.isCaptured = true;\n        }\n      }\n    });\n  }\n\n  _read(size) {\n    const internals = this[kInternals];\n\n    if (internals.onReadCallback) {\n      internals.onReadCallback();\n    }\n\n    return super._read(size);\n  }\n\n  _transform(chunk, encoding, callback) {\n    const internals = this[kInternals];\n    const maxRate = internals.maxRate;\n\n    const readableHighWaterMark = this.readableHighWaterMark;\n\n    const timeWindow = internals.timeWindow;\n\n    const divider = 1000 / timeWindow;\n    const bytesThreshold = (maxRate / divider);\n    const minChunkSize = internals.minChunkSize !== false ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;\n\n    const pushChunk = (_chunk, _callback) => {\n      const bytes = Buffer.byteLength(_chunk);\n      internals.bytesSeen += bytes;\n      internals.bytes += bytes;\n\n      internals.isCaptured && this.emit('progress', internals.bytesSeen);\n\n      if (this.push(_chunk)) {\n        process.nextTick(_callback);\n      } else {\n        internals.onReadCallback = () => {\n          internals.onReadCallback = null;\n          process.nextTick(_callback);\n        };\n      }\n    }\n\n    const transformChunk = (_chunk, _callback) => {\n      const chunkSize = Buffer.byteLength(_chunk);\n      let chunkRemainder = null;\n      let maxChunkSize = readableHighWaterMark;\n      let bytesLeft;\n      let passed = 0;\n\n      if (maxRate) {\n        const now = Date.now();\n\n        if (!internals.ts || (passed = (now - internals.ts)) >= timeWindow) {\n          internals.ts = now;\n          bytesLeft = bytesThreshold - internals.bytes;\n          internals.bytes = bytesLeft < 0 ? -bytesLeft : 0;\n          passed = 0;\n        }\n\n        bytesLeft = bytesThreshold - internals.bytes;\n      }\n\n      if (maxRate) {\n        if (bytesLeft <= 0) {\n          // next time window\n          return setTimeout(() => {\n            _callback(null, _chunk);\n          }, timeWindow - passed);\n        }\n\n        if (bytesLeft < maxChunkSize) {\n          maxChunkSize = bytesLeft;\n        }\n      }\n\n      if (maxChunkSize && chunkSize > maxChunkSize && (chunkSize - maxChunkSize) > minChunkSize) {\n        chunkRemainder = _chunk.subarray(maxChunkSize);\n        _chunk = _chunk.subarray(0, maxChunkSize);\n      }\n\n      pushChunk(_chunk, chunkRemainder ? () => {\n        process.nextTick(_callback, null, chunkRemainder);\n      } : _callback);\n    };\n\n    transformChunk(chunk, function transformNextChunk(err, _chunk) {\n      if (err) {\n        return callback(err);\n      }\n\n      if (_chunk) {\n        transformChunk(_chunk, transformNextChunk);\n      } else {\n        callback(null);\n      }\n    });\n  }\n}\n\nexport default AxiosTransformStream;\n","import util from 'util';\nimport {Readable} from 'stream';\nimport utils from \"../utils.js\";\nimport readBlob from \"./readBlob.js\";\nimport platform from \"../platform/index.js\";\n\nconst BOUNDARY_ALPHABET = platform.ALPHABET.ALPHA_DIGIT + '-_';\n\nconst textEncoder = typeof TextEncoder === 'function' ? new TextEncoder() : new util.TextEncoder();\n\nconst CRLF = '\\r\\n';\nconst CRLF_BYTES = textEncoder.encode(CRLF);\nconst CRLF_BYTES_COUNT = 2;\n\nclass FormDataPart {\n  constructor(name, value) {\n    const {escapeName} = this.constructor;\n    const isStringValue = utils.isString(value);\n\n    let headers = `Content-Disposition: form-data; name=\"${escapeName(name)}\"${\n      !isStringValue && value.name ? `; filename=\"${escapeName(value.name)}\"` : ''\n    }${CRLF}`;\n\n    if (isStringValue) {\n      value = textEncoder.encode(String(value).replace(/\\r?\\n|\\r\\n?/g, CRLF));\n    } else {\n      headers += `Content-Type: ${value.type || \"application/octet-stream\"}${CRLF}`\n    }\n\n    this.headers = textEncoder.encode(headers + CRLF);\n\n    this.contentLength = isStringValue ? value.byteLength : value.size;\n\n    this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT;\n\n    this.name = name;\n    this.value = value;\n  }\n\n  async *encode(){\n    yield this.headers;\n\n    const {value} = this;\n\n    if(utils.isTypedArray(value)) {\n      yield value;\n    } else {\n      yield* readBlob(value);\n    }\n\n    yield CRLF_BYTES;\n  }\n\n  static escapeName(name) {\n      return String(name).replace(/[\\r\\n\"]/g, (match) => ({\n        '\\r' : '%0D',\n        '\\n' : '%0A',\n        '\"' : '%22',\n      }[match]));\n  }\n}\n\nconst formDataToStream = (form, headersHandler, options) => {\n  const {\n    tag = 'form-data-boundary',\n    size = 25,\n    boundary = tag + '-' + platform.generateString(size, BOUNDARY_ALPHABET)\n  } = options || {};\n\n  if(!utils.isFormData(form)) {\n    throw TypeError('FormData instance required');\n  }\n\n  if (boundary.length < 1 || boundary.length > 70) {\n    throw Error('boundary must be 10-70 characters long')\n  }\n\n  const boundaryBytes = textEncoder.encode('--' + boundary + CRLF);\n  const footerBytes = textEncoder.encode('--' + boundary + '--' + CRLF + CRLF);\n  let contentLength = footerBytes.byteLength;\n\n  const parts = Array.from(form.entries()).map(([name, value]) => {\n    const part = new FormDataPart(name, value);\n    contentLength += part.size;\n    return part;\n  });\n\n  contentLength += boundaryBytes.byteLength * parts.length;\n\n  contentLength = utils.toFiniteNumber(contentLength);\n\n  const computedHeaders = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`\n  }\n\n  if (Number.isFinite(contentLength)) {\n    computedHeaders['Content-Length'] = contentLength;\n  }\n\n  headersHandler && headersHandler(computedHeaders);\n\n  return Readable.from((async function *() {\n    for(const part of parts) {\n      yield boundaryBytes;\n      yield* part.encode();\n    }\n\n    yield footerBytes;\n  })());\n};\n\nexport default formDataToStream;\n","const {asyncIterator} = Symbol;\n\nconst readBlob = async function* (blob) {\n  if (blob.stream) {\n    yield* blob.stream()\n  } else if (blob.arrayBuffer) {\n    yield await blob.arrayBuffer()\n  } else if (blob[asyncIterator]) {\n    yield* blob[asyncIterator]();\n  } else {\n    yield blob;\n  }\n}\n\nexport default readBlob;\n","\"use strict\";\n\nimport stream from \"stream\";\n\nclass ZlibHeaderTransformStream extends stream.Transform {\n  __transform(chunk, encoding, callback) {\n    this.push(chunk);\n    callback();\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (chunk.length !== 0) {\n      this._transform = this.__transform;\n\n      // Add Default Compression headers if no zlib headers are present\n      if (chunk[0] !== 120) { // Hex: 78\n        const header = Buffer.alloc(2);\n        header[0] = 120; // Hex: 78\n        header[1] = 156; // Hex: 9C \n        this.push(header, encoding);\n      }\n    }\n\n    this.__transform(chunk, encoding, callback);\n  }\n}\n\nexport default ZlibHeaderTransformStream;\n","import utils from \"../utils.js\";\n\nconst callbackify = (fn, reducer) => {\n  return utils.isAsyncFn(fn) ? function (...args) {\n    const cb = args.pop();\n    fn.apply(this, args).then((value) => {\n      try {\n        reducer ? cb(null, ...reducer(value)) : cb(null, value);\n      } catch (err) {\n        cb(err);\n      }\n    }, cb);\n  } : fn;\n}\n\nexport default callbackify;\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) {\n      // do nothing\n    } else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  getAdapter,\n  mergeConfig\n}\n","import { tweetQueries } from '@/extensions/src/db/queries.js';\nimport { KaitoService } from '@/services/kaito/kaito-service.js';\nimport { elizaLogger } from '@elizaos/core';\n\nconst kaitoService = new KaitoService();\n\nexport async function updateYapsData(\n  accounts: Array<{ userId: string; username: string }>,\n): Promise<void> {\n  elizaLogger.info('[Yaps Processing] Updating Yaps data for target accounts');\n\n  try {\n    const yapsData = await kaitoService.getYapsForAccounts(accounts);\n\n    for (const [username, yaps] of yapsData.entries()) {\n      await tweetQueries.upsertYapsData({\n        userId: yaps.user_id,\n        username: yaps.username,\n        yapsAll: yaps.yaps_all,\n        yapsL24h: yaps.yaps_l24h,\n        yapsL48h: yaps.yaps_l48h,\n        yapsL7d: yaps.yaps_l7d,\n        yapsL30d: yaps.yaps_l30d,\n        yapsL3m: yaps.yaps_l3m,\n        yapsL6m: yaps.yaps_l6m,\n        yapsL12m: yaps.yaps_l12m,\n        lastUpdated: new Date(),\n      });\n\n      elizaLogger.debug(`[Yaps Processing] Updated Yaps data for ${username}`, {\n        yapsAll: yaps.yaps_all,\n        yapsL30d: yaps.yaps_l30d,\n      });\n    }\n  } catch (error) {\n    elizaLogger.error('[Yaps Processing] Error updating Yaps data:', error);\n  }\n}\n","/**\n * Template for topic relationship analysis\n */\nexport function topicRelationshipTemplate(params: {\n  preferredTopic: string;\n  availableTopics: string[];\n}) {\n  return {\n    context: `You are analyzing the relationship between \"${params.preferredTopic}\" and a list of available topics.\nFor each topic, determine how closely it relates to \"${params.preferredTopic}\" on a scale of 0-1.\nConsider semantic relationships, domain overlaps, and typical co-occurrence patterns.\n\nAvailable topics to analyze:\n${params.availableTopics.join(', ')}\n\nProvide relevance scores where:\n1.0 = Direct relationship/same domain (relationshipType: direct)\n0.7-0.9 = Strong relationship/overlapping domain (relationshipType: strong)\n0.4-0.6 = Moderate relationship/related domain (relationshipType: moderate)\n0.1-0.3 = Weak relationship/tangentially related (relationshipType: weak)\n0.0 = No meaningful relationship (relationshipType: none)\n\nFor each topic, also provide:\n1. A brief explanation of the relationship\n2. Specific examples of how the topics relate\n3. Potential synergies or conflicts between the topics\n\nYour analysis should consider:\n- Semantic overlap\n- Domain relationships\n- Common use cases\n- Typical co-occurrence in content\n- Industry or field relationships\n- Hierarchical relationships (if any)\n\nFormat the response as a JSON object with:\n- relatedTopics: array of topic relationships\n- analysisMetadata: containing confidence and timestamp`,\n  };\n}\n","import { z } from 'zod';\n\n/**\n * Schema for topic relationship analysis\n */\nexport const topicRelationshipSchema = z.object({\n  relatedTopics: z.array(\n    z.object({\n      topic: z.string().min(1),\n      relevanceScore: z.number().min(0).max(1),\n      relationshipType: z.enum([\n        'direct',\n        'strong',\n        'moderate',\n        'weak',\n        'none',\n      ]),\n      explanation: z.string().min(1),\n      examples: z.array(z.string()).min(1),\n      synergiesAndConflicts: z.object({\n        synergies: z.array(z.string()),\n        conflicts: z.array(z.string()),\n      }),\n    }),\n  ),\n  analysisMetadata: z.object({\n    confidence: z.number().min(0).max(1),\n    analysisTimestamp: z.string(),\n    analysisFactors: z.array(z.string()),\n    limitations: z.array(z.string()).optional(),\n  }),\n});\n\nexport type TopicRelationshipAnalysis = z.infer<typeof topicRelationshipSchema>;\n\n/**\n * Relationship types and their score ranges\n */\nexport const RELATIONSHIP_TYPES = {\n  direct: { min: 1.0, max: 1.0 },\n  strong: { min: 0.7, max: 0.9 },\n  moderate: { min: 0.4, max: 0.6 },\n  weak: { min: 0.1, max: 0.3 },\n  none: { min: 0.0, max: 0.0 },\n} as const;\n\n/**\n * Helper function to determine relationship type from score\n */\nexport function getRelationshipType(\n  score: number,\n): keyof typeof RELATIONSHIP_TYPES {\n  if (score >= 1.0) {\n    return 'direct';\n  }\n  if (score >= 0.7) {\n    return 'strong';\n  }\n  if (score >= 0.4) {\n    return 'moderate';\n  }\n  if (score >= 0.1) {\n    return 'weak';\n  }\n  return 'none';\n}\n","import { topicRelationshipTemplate } from '@/templates/topic-relationship';\nimport {\n  type TopicRelationshipAnalysis,\n  topicRelationshipSchema,\n} from '@/types/response/topic-relationship';\nimport {\n  type IAgentRuntime,\n  type Memory,\n  ModelClass,\n  composeContext,\n  elizaLogger,\n  generateObject,\n} from '@elizaos/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Analyzes a list of topics to find relationships with a preferred topic\n * Uses a small model to determine semantic relationships and relevance scores\n */\nexport async function analyzeTopicRelationships(\n  runtime: IAgentRuntime,\n  availableTopics: string[],\n  preferredTopic: string,\n): Promise<TopicRelationshipAnalysis> {\n  try {\n    const template = topicRelationshipTemplate({\n      preferredTopic,\n      availableTopics,\n    });\n\n    const state = await runtime.composeState(\n      {\n        content: {\n          text: `Analyzing relationship between ${preferredTopic} and ${availableTopics.length} topics`,\n          preferredTopic,\n          availableTopics,\n        },\n        agentId: runtime.agentId,\n        userId: uuidv4(),\n        roomId: uuidv4(),\n      } as Memory,\n      {\n        currentAnalysis: {\n          preferredTopic,\n          topicCount: availableTopics.length,\n        },\n      },\n    );\n\n    const context = composeContext({\n      state,\n      template: template.context,\n    });\n\n    const { object } = await generateObject({\n      runtime,\n      context,\n      modelClass: ModelClass.SMALL,\n      schema: topicRelationshipSchema,\n    });\n\n    const analysis = object as TopicRelationshipAnalysis;\n\n    elizaLogger.info('[Topic Analysis] Analyzed topic relationships:');\n    elizaLogger.debug({\n      preferredTopic,\n      topicCount: analysis.relatedTopics.length,\n      confidence: analysis.analysisMetadata.confidence,\n      factors: analysis.analysisMetadata.analysisFactors,\n    });\n\n    return analysis;\n  } catch (error) {\n    elizaLogger.error('[Topic Analysis] Error analyzing topic relationships:', {\n      error: error instanceof Error ? error.message : String(error),\n      preferredTopic,\n    });\n    throw error;\n  }\n}\n","import type { Tweet as AgentTweet } from 'agent-twitter-client';\nimport { v4 as uuidv4 } from 'uuid';\nimport type { DatabaseTweet } from '../types/twitter';\n\n/**\n * Normalizes a tweet by ensuring all fields have default values\n * Maps from AgentTweet to our DatabaseTweet type\n */\nexport function mapTweet(tweet: AgentTweet): DatabaseTweet {\n  return {\n    // Core tweet data from AgentTweet\n    id: uuidv4(), // Generate a UUID for our database\n    tweet_id: tweet.id || '', // Twitter's ID\n    text: tweet.text || '',\n    userId: tweet.userId || '',\n    name: tweet.name || '',\n    username: tweet.username || '',\n    timestamp: tweet.timestamp || Math.floor(Date.now() / 1000),\n    timeParsed: tweet.timeParsed || new Date(),\n\n    // Tweet metrics\n    likes: tweet.likes || 0,\n    retweets: tweet.retweets || 0,\n    replies: tweet.replies || 0,\n    views: tweet.views || 0,\n    bookmarkCount: tweet.bookmarkCount || 0,\n\n    // Tweet metadata\n    conversationId: tweet.conversationId || '',\n    permanentUrl: tweet.permanentUrl || '',\n    html: tweet.html || '',\n    inReplyToStatus: tweet.inReplyToStatus,\n    inReplyToStatusId: tweet.inReplyToStatusId,\n    quotedStatus: tweet.quotedStatus,\n    quotedStatusId: tweet.quotedStatusId,\n    retweetedStatus: tweet.retweetedStatus,\n    retweetedStatusId: tweet.retweetedStatusId,\n    thread: Array.isArray(tweet.thread) ? tweet.thread.map(mapTweet) : [],\n\n    // Tweet flags\n    isQuoted: tweet.isQuoted || false,\n    isPin: tweet.isPin || false,\n    isReply: tweet.isReply || false,\n    isRetweet: tweet.isRetweet || false,\n    isSelfThread: tweet.isSelfThread || false,\n    sensitiveContent: tweet.sensitiveContent || false,\n\n    // Media and entities\n    hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n    mentions: Array.isArray(tweet.mentions) ? tweet.mentions : [],\n    photos: Array.isArray(tweet.photos) ? tweet.photos : [],\n    urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n    videos: Array.isArray(tweet.videos) ? tweet.videos : [],\n    place: tweet.place,\n    poll: tweet.poll,\n\n    // Our additional fields with defaults\n    status: 'pending',\n    createdAt: new Date(),\n    mediaType: 'text',\n    isThreadMerged: false,\n    threadSize: 0,\n    originalText: tweet.text || '',\n    homeTimeline: {\n      publicMetrics: {\n        likes: tweet.likes || 0,\n        retweets: tweet.retweets || 0,\n        replies: tweet.replies || 0,\n      },\n      entities: {\n        hashtags: Array.isArray(tweet.hashtags) ? tweet.hashtags : [],\n        mentions: Array.isArray(tweet.mentions)\n          ? tweet.mentions.map((m) => ({\n              username: m.username || '',\n              id: m.id || '',\n            }))\n          : [],\n        urls: Array.isArray(tweet.urls) ? tweet.urls : [],\n      },\n    },\n  };\n}\n","import { tweetQueries } from '@/extensions/src/db/queries';\nimport { mapTweet } from '@/mappers/tweet-mapper';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport type { TargetAccount } from '@/types/account';\nimport type { TwitterConfig } from '@/types/config';\nimport type { TweetSelectionResult } from '@/types/twitter';\nimport { elizaLogger } from '@elizaos/core';\nimport { SearchMode, type Tweet } from 'agent-twitter-client';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Selects tweets from target accounts based on engagement criteria\n * @param twitterService - Twitter service instance for making API calls\n * @param accounts - List of target accounts to fetch tweets from\n * @param config - Twitter configuration containing search parameters and thresholds\n * @returns Object containing selected tweets and metadata\n */\nexport async function selectTweetsFromAccounts(\n  twitterService: TwitterService,\n  accounts: TargetAccount[],\n  config: TwitterConfig,\n): Promise<TweetSelectionResult[]> {\n  const results: TweetSelectionResult[] = [];\n\n  for (const account of accounts) {\n    try {\n      // 1. Search latest tweets from account\n      const { tweets: accountTweets, spammedTweets } =\n        await twitterService.searchTweets(\n          `from:${account.username}`,\n          config.search.tweetLimits.targetAccounts,\n          SearchMode.Latest,\n          '[TwitterAccounts]',\n          {\n            excludeReplies: config.search.parameters.excludeReplies,\n            excludeRetweets: config.search.parameters.excludeRetweets,\n            filterLevel: 'none',\n          },\n          config.search.engagementThresholds,\n        );\n\n      elizaLogger.debug(\n        `[TwitterAccounts] Fetched ${accountTweets.length} tweets from ${account.username}`,\n        { spammedTweets },\n      );\n\n      // Filter out tweets without IDs first\n      const validTweets = accountTweets.filter((tweet) => {\n        if (!tweet.id) {\n          elizaLogger.warn(\n            `[TwitterAccounts] Tweet from ${account.username} missing ID:`,\n            {\n              text: tweet.text?.substring(0, 100),\n            },\n          );\n          return false;\n        }\n        return true;\n      });\n\n      // Check which tweets have already been processed\n      const existingTweetIds = new Set(\n        (\n          await Promise.all(\n            validTweets.map((tweet) =>\n              tweetQueries.findTweetByTweetId(tweet.id),\n            ),\n          )\n        )\n          .filter(Boolean)\n          .map((tweet) => tweet.tweet_id),\n      );\n\n      // Filter out already processed tweets\n      const unprocessedTweets = validTweets.filter(\n        (tweet) => !existingTweetIds.has(tweet.id),\n      );\n\n      if (validTweets.length > unprocessedTweets.length) {\n        elizaLogger.debug(\n          `[TwitterAccounts] Filtered out ${\n            validTweets.length - unprocessedTweets.length\n          } already processed tweets from ${account.username}`,\n        );\n      }\n\n      // Map tweets to ensure all fields have default values\n      const mappedTweets = unprocessedTweets.map((tweet) => ({\n        ...mapTweet(tweet),\n        id: uuidv4(), // Generate a UUID for our database\n        tweet_id: tweet.id, // Keep Twitter's ID\n      }));\n\n      // Collect most recent tweets that meet engagement criteria\n      let processedCount = 0;\n      const selectedTweets: Tweet[] = [];\n      const thresholds = config.search.engagementThresholds;\n\n      for (const tweet of mappedTweets) {\n        if (meetsCriteria(tweet, thresholds)) {\n          selectedTweets.push(tweet);\n          processedCount++;\n\n          if (\n            processedCount >= config.search.tweetLimits.qualityTweetsPerAccount\n          ) {\n            break;\n          }\n        }\n      }\n\n      elizaLogger.info(\n        `[TwitterAccounts] Selected ${selectedTweets.length} tweets meeting criteria from ${mappedTweets.length} unprocessed tweets for ${account.username}`,\n      );\n      elizaLogger.debug({\n        minLikes: thresholds.minLikes,\n        minRetweets: thresholds.minRetweets,\n        minReplies: thresholds.minReplies,\n        maxQualityTweets: config.search.tweetLimits.qualityTweetsPerAccount,\n      });\n\n      results.push({\n        tweets: selectedTweets,\n        spammedTweets: spammedTweets || 0,\n        processedCount,\n      });\n    } catch (error) {\n      elizaLogger.error(\n        `[TwitterAccounts] Error fetching tweets from ${account.username}:`,\n        error instanceof Error ? error.message : String(error),\n      );\n\n      // Add empty result for failed account\n      results.push({\n        tweets: [],\n        spammedTweets: 0,\n        processedCount: 0,\n      });\n    }\n  }\n\n  return results;\n}\n\n/**\n * Checks if a tweet meets the engagement criteria thresholds\n */\nfunction meetsCriteria(\n  tweet: Tweet,\n  thresholds: TwitterConfig['search']['engagementThresholds'],\n): boolean {\n  return (\n    (tweet.likes || 0) >= thresholds.minLikes &&\n    (tweet.retweets || 0) >= thresholds.minRetweets &&\n    (tweet.replies || 0) >= thresholds.minReplies\n  );\n}\n","import type { TweetQueueService } from '@/services/twitter/tweet-queue.service';\nimport { TwitterConfigService } from '@/services/twitter/twitter-config-service';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport { initializeTargetAccounts } from '@/utils/initialize-db/accounts';\nimport { initializeTopicWeights } from '@/utils/initialize-db/topics';\nimport { selectTargetAccounts } from '@/utils/selection/select-account';\nimport { selectTweetsFromAccounts } from '@/utils/selection/select-tweets-from-account';\nimport type { IAgentRuntime } from '@elizaos/core';\nimport { elizaLogger } from '@elizaos/core';\nimport { getEnv } from '../../../config/env';\n\nexport class TwitterAccountsClient {\n  private twitterConfigService: TwitterConfigService;\n  private twitterService: TwitterService;\n  private readonly runtime: IAgentRuntime;\n  private readonly tweetQueueService: TweetQueueService;\n  private monitoringTimeout: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(\n    twitterService: TwitterService,\n    runtime: IAgentRuntime,\n    tweetQueueService: TweetQueueService,\n  ) {\n    this.twitterService = twitterService;\n    this.twitterConfigService = new TwitterConfigService(runtime);\n    this.runtime = runtime;\n    this.tweetQueueService = tweetQueueService;\n  }\n\n  async start(): Promise<void> {\n    elizaLogger.info('[TwitterAccounts] Starting accounts client');\n\n    // Initialize topic weights if they don't exist\n    try {\n      await initializeTopicWeights(this.runtime);\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterAccounts] Error initializing topic weights:',\n        error,\n      );\n    }\n\n    await this.initializeTargetAccounts();\n    await this.onReady();\n  }\n\n  async stop(): Promise<void> {\n    elizaLogger.info('[TwitterAccounts] Stopping accounts client');\n    if (this.monitoringTimeout) {\n      clearTimeout(this.monitoringTimeout);\n      this.monitoringTimeout = null;\n    }\n  }\n\n  private async onReady() {\n    await this.monitorTargetAccountsLoop();\n  }\n\n  private async monitorTargetAccountsLoop() {\n    try {\n      await this.monitorTargetAccounts();\n    } catch (error) {\n      elizaLogger.error('[TwitterAccounts] Error in monitoring loop:', error);\n    }\n\n    // Schedule next run only after current one completes\n    this.monitoringTimeout = setTimeout(\n      () => this.monitorTargetAccountsLoop(),\n      Number(this.runtime.getSetting('TWITTER_POLL_INTERVAL') || 60) * 1000,\n    );\n  }\n\n  private async monitorTargetAccounts() {\n    elizaLogger.info('[TwitterAccounts] Starting target account monitoring');\n\n    try {\n      // Get config and env first\n      const config = await this.twitterConfigService.getConfig();\n      const env = getEnv();\n\n      // Select accounts to process using weighted randomization\n      const accountsToProcess = await selectTargetAccounts(\n        this.runtime,\n        config,\n        env.SEARCH_TIMEFRAME_HOURS,\n        env.SEARCH_PREFERRED_TOPIC,\n      );\n\n      if (!accountsToProcess.length) {\n        return;\n      }\n\n      // Select tweets from accounts based on engagement criteria\n      const selectionResults = await selectTweetsFromAccounts(\n        this.twitterService,\n        accountsToProcess,\n        config,\n      );\n\n      // Collect all tweets that meet criteria\n      const allTweets = selectionResults.flatMap((result) => result.tweets);\n\n      if (allTweets.length === 0) {\n        elizaLogger.warn(\n          '[TwitterAccounts] No tweets found from any target accounts',\n        );\n        return;\n      }\n\n      // Add tweets to the queue instead of processing them directly\n      await this.tweetQueueService.addTweets(allTweets, 'account', 2);\n\n      elizaLogger.info(\n        '[TwitterAccounts] Successfully queued tweets from target accounts',\n      );\n    } catch (error) {\n      // Catch-all error handler to prevent process crashes\n      elizaLogger.error(\n        '[TwitterAccounts] Error monitoring target accounts:',\n        error instanceof Error ? error.stack || error.message : String(error),\n      );\n    } finally {\n      // Log completion of monitoring cycle whether successful or not\n      elizaLogger.info(\n        '[TwitterAccounts] Target account monitoring cycle completed',\n      );\n    }\n  }\n\n  private async initializeTargetAccounts(): Promise<void> {\n    const config = await this.twitterConfigService.getConfig();\n    await initializeTargetAccounts(this.twitterService, config);\n  }\n}\n\nexport default TwitterAccountsClient;\n","import { messageCompletionFooter } from '@elizaos/core';\n\nexport const twitterMessageHandlerTemplate = `\n# Areas of Expertise\n{{knowledge}}\n\n# About {{agentName}} (@{{twitterUserName}}):\n{{bio}}\n{{lore}}\n{{topics}}\n\n{{providers}}\n\n{{characterPostExamples}}\n\n{{postDirections}}\n\nRecent interactions between {{agentName}} and other users:\n{{recentPostInteractions}}\n\n{{recentPosts}}\n\n# Task: Generate a post/reply in the voice, style and perspective of {{agentName}} (@{{twitterUserName}}) while using the thread of tweets as additional context:\nCurrent Post:\n{{currentPost}}\n\nThread of Tweets You Are Replying To:\n{{formattedConversation}}\n\n{{actions}}\n\n# Task: Generate a post in the voice, style and perspective of {{agentName}} (@{{twitterUserName}}). You MUST include an action if the current post text includes a prompt that is similar to one of the available actions mentioned here:\n{{actionNames}}\n\nHere is the current post text again. Remember to include an action if the current post text includes a prompt that asks for one of the available actions mentioned above (does not need to be exact):\n{{currentPost}}\n${messageCompletionFooter}`;\n\nexport const twitterShouldRespondTemplate = `# INSTRUCTIONS: Determine if {{agentName}} (@{{twitterUserName}}) should respond to the message and participate in the conversation.\n\n# Areas of Expertise\n{{knowledge}}\n\n# About {{agentName}} (@{{twitterUserName}}):\n{{bio}}\n{{lore}}\n{{topics}}\n\n{{providers}}\n\n{{characterPostExamples}}\n\n{{postDirections}}\n\nRecent interactions between {{agentName}} and other users:\n{{recentPostInteractions}}\n\n{{recentPosts}}\n\nCurrent Post:\n{{currentPost}}\n\nThread of Tweets You Are Replying To:\n{{formattedConversation}}\n\n# Task: Determine if {{agentName}} (@{{twitterUserName}}) should respond to this message. Consider:\n1. Is the message relevant to {{agentName}}'s expertise and interests?\n2. Would a response add value to the conversation?\n3. Is the message spam or low quality?\n4. Has {{agentName}} already responded to this thread?\n5. Is the message directed at {{agentName}}?\n\nSpam Detection Guidelines:\n1. Primary Spam Indicators (Must have at least one):\n   - Promotional Content:\n     * Aggressive sales language (\"Buy now!\", \"Don't miss out!\")\n     * Get-rich-quick promises\n     * Multiple promotional links\n   - Engagement Farming:\n     * Follow-for-follow schemes\n     * Giveaway spam (\"RT & Follow to win!\")\n     * Mass-copied engagement bait\n\n2. Secondary Spam Signals (Multiple required):\n   - Hashtag Abuse:\n     * More than 7 hashtags\n     * Completely unrelated trending hashtags\n   - Suspicious Patterns:\n     * Exact duplicate tweets\n     * Automated-looking content\n     * Coordinated spam campaigns\n   - Deceptive Tactics:\n     * Fake celebrity endorsements\n     * Obviously false claims\n     * Phishing attempts\n\n3. NOT Spam:\n   - Normal Conversations:\n     * Personal opinions\n     * Questions and responses\n     * Casual discussions\n     * Emotional expressions\n   - Regular Marketing:\n     * Product announcements\n     * Company updates\n     * Professional promotions\n   - Community Engagement:\n     * Genuine discussions\n     * Topic-specific hashtags\n     * Industry news sharing\n\nReturn one of these responses:\n- \"RESPOND\" - If the message is relevant, valuable, and not spam\n- \"IGNORE\" - If the message is irrelevant or we've already responded\n- \"SPAM\" - If the message matches spam criteria above (include JSON after SPAM with reasons)\n\nExample SPAM response:\nSPAM {\"spamScore\":0.95,\"reasons\":[\"engagement farming giveaway\",\"follow-for-follow scheme\",\"automated content\"]}\n\n${messageCompletionFooter}`;\n","import type { TwitterService } from '@/services/twitter/twitter-service';\nimport {\n  type Content,\n  type IAgentRuntime,\n  type Memory,\n  type UUID,\n  elizaLogger,\n  stringToUuid,\n} from '@elizaos/core';\nimport type { Tweet } from 'agent-twitter-client';\n\nconst MAX_TWEET_LENGTH = 280; // Updated to Twitter's current character limit\n\nexport const wait = (minTime = 1000, maxTime = 3000) => {\n  const waitTime =\n    Math.floor(Math.random() * (maxTime - minTime + 1)) + minTime;\n  return new Promise((resolve) => setTimeout(resolve, waitTime));\n};\n\nexport const isValidTweet = (tweet: Tweet): boolean => {\n  // Filter out tweets with too many hashtags, @s, or $ signs, probably spam or garbage\n  const hashtagCount = (tweet.text?.match(/#/g) || []).length;\n  const atCount = (tweet.text?.match(/@/g) || []).length;\n  const dollarSignCount = (tweet.text?.match(/\\$/g) || []).length;\n  const totalCount = hashtagCount + atCount + dollarSignCount;\n\n  return (\n    hashtagCount <= 1 && atCount <= 2 && dollarSignCount <= 1 && totalCount <= 3\n  );\n};\n\nexport async function sendTweet(\n  twitterService: TwitterService,\n  runtime: IAgentRuntime,\n  content: Content,\n  roomId: UUID,\n  agentId: UUID,\n  inReplyTo?: string,\n): Promise<Memory[]> {\n  const tweetChunks = splitTweetContent(content.text);\n  const sentTweets: Tweet[] = [];\n  let previousTweetId = inReplyTo;\n\n  for (const chunk of tweetChunks) {\n    const tweet = await twitterService.sendTweet(chunk.trim(), previousTweetId);\n    sentTweets.push(tweet);\n    previousTweetId = tweet.id;\n\n    // Wait a bit between tweets to avoid rate limiting issues\n    await wait(1000, 2000);\n  }\n\n  const memories: Memory[] = [];\n\n  for (const tweet of sentTweets) {\n    const memory: Memory = {\n      id: stringToUuid(`${tweet.id}-${agentId}`),\n      agentId,\n      userId: agentId,\n      content: {\n        text: tweet.text,\n        source: 'twitter',\n        url: tweet.permanentUrl,\n        inReplyTo: tweet.inReplyToStatusId\n          ? stringToUuid(`${tweet.inReplyToStatusId}-${agentId}`)\n          : undefined,\n      },\n      roomId,\n      createdAt: tweet.timestamp * 1000,\n    };\n\n    // Generate embedding for the tweet memory\n    await runtime.messageManager.addEmbeddingToMemory(memory);\n    memories.push(memory);\n  }\n\n  return memories;\n}\n\nfunction splitTweetContent(content: string): string[] {\n  const maxLength = MAX_TWEET_LENGTH;\n  const paragraphs = content.split('\\n\\n').map((p) => p.trim());\n  const tweets: string[] = [];\n  let currentTweet = '';\n\n  for (const paragraph of paragraphs) {\n    if (!paragraph) {\n      continue;\n    }\n\n    if ((currentTweet + paragraph).trim().length <= maxLength) {\n      if (currentTweet) {\n        currentTweet = `${currentTweet}\\n\\n${paragraph}`;\n      } else {\n        currentTweet = paragraph;\n      }\n    } else {\n      if (currentTweet) {\n        tweets.push(currentTweet.trim());\n      }\n      if (paragraph.length <= maxLength) {\n        currentTweet = paragraph;\n      } else {\n        // Split long paragraph into smaller chunks\n        const chunks = splitParagraph(paragraph, maxLength);\n        tweets.push(...chunks.slice(0, -1));\n        currentTweet = chunks[chunks.length - 1];\n      }\n    }\n  }\n\n  if (currentTweet) {\n    tweets.push(currentTweet.trim());\n  }\n\n  return tweets;\n}\n\nfunction splitParagraph(paragraph: string, maxLength: number): string[] {\n  // eslint-disable-next-line\n  const sentences = paragraph.match(/[^\\.!\\?]+[\\.!\\?]+|[^\\.!\\?]+$/g) || [\n    paragraph,\n  ];\n  const chunks: string[] = [];\n  let currentChunk = '';\n\n  for (const sentence of sentences) {\n    if ((currentChunk + sentence).trim().length <= maxLength) {\n      if (currentChunk) {\n        currentChunk = `${currentChunk} ${sentence}`;\n      } else {\n        currentChunk = sentence;\n      }\n    } else {\n      if (currentChunk) {\n        chunks.push(currentChunk.trim());\n      }\n      if (sentence.length <= maxLength) {\n        currentChunk = sentence;\n      } else {\n        // Split long sentence into smaller pieces\n        const words = sentence.split(' ');\n        currentChunk = '';\n        for (const word of words) {\n          if ((currentChunk + word).trim().length <= maxLength) {\n            if (currentChunk) {\n              currentChunk = `${currentChunk} ${word}`;\n            } else {\n              currentChunk = word;\n            }\n          } else {\n            if (currentChunk) {\n              chunks.push(currentChunk.trim());\n            }\n            currentChunk = word;\n          }\n        }\n      }\n    }\n  }\n\n  if (currentChunk) {\n    chunks.push(currentChunk.trim());\n  }\n\n  return chunks;\n}\n\nexport async function sendTweetAndCreateMemory(\n  twitterService: TwitterService,\n  response: Content,\n  roomId: UUID,\n  agentId: UUID,\n  userId: UUID,\n  inReplyToId?: string,\n): Promise<Memory[]> {\n  const memories: Memory[] = [];\n  const text = response.text;\n\n  if (!text) {\n    elizaLogger.error('[Twitter Client] No text to send');\n    return memories;\n  }\n\n  try {\n    const tweet = await twitterService.sendTweet(text, inReplyToId);\n    const memory: Memory = {\n      id: stringToUuid(`${tweet.id}-${agentId}`),\n      agentId,\n      content: {\n        text: tweet.text,\n        source: 'twitter',\n        url: tweet.permanentUrl,\n        inReplyTo: inReplyToId ? stringToUuid(inReplyToId) : undefined,\n      },\n      createdAt: tweet.timestamp * 1000,\n      roomId,\n      userId,\n    };\n    memories.push(memory);\n  } catch (error) {\n    elizaLogger.error('[Twitter Client] Error sending tweet:', error);\n  }\n\n  return memories;\n}\n","import { tweetQueries } from '@/extensions/src/db/queries';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport {\n  twitterMessageHandlerTemplate,\n  twitterShouldRespondTemplate,\n} from '@/templates/interaction';\nimport { sendTweetAndCreateMemory, wait } from '@/utils/active-tweeting/tweet';\nimport {\n  type IAgentRuntime,\n  type Memory,\n  ModelClass,\n  type State,\n  composeContext,\n  elizaLogger,\n  generateMessageResponse,\n  generateShouldRespond,\n  stringToUuid,\n} from '@elizaos/core';\nimport { SearchMode, type Tweet } from 'agent-twitter-client';\n\nexport class TwitterInteractionClient {\n  private readonly twitterService: TwitterService;\n  private readonly runtime: IAgentRuntime;\n  private interactionLoopTimeout: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(twitterService: TwitterService, runtime: IAgentRuntime) {\n    this.twitterService = twitterService;\n    this.runtime = runtime;\n  }\n\n  async start(): Promise<void> {\n    elizaLogger.info('[TwitterInteraction] Twitter interactions starting');\n\n    // Check if service and profile are properly initialized\n    if (!this.twitterService || !this.twitterService.getProfile()) {\n      elizaLogger.error(\n        '[TwitterInteraction] Service or profile not initialized',\n      );\n      return;\n    }\n\n    const handleTwitterInteractionsLoop = () => {\n      void this.handleTwitterInteractions();\n      this.interactionLoopTimeout = setTimeout(\n        handleTwitterInteractionsLoop,\n        Number(this.runtime.getSetting('TWITTER_POLL_INTERVAL') || 60) * 1000,\n      );\n    };\n    handleTwitterInteractionsLoop();\n  }\n\n  async stop(): Promise<void> {\n    if (this.interactionLoopTimeout) {\n      clearTimeout(this.interactionLoopTimeout);\n      this.interactionLoopTimeout = null;\n    }\n  }\n\n  async handleTwitterInteractions(): Promise<void> {\n    elizaLogger.info('[TwitterInteraction] Checking Twitter interactions');\n\n    // Check if service and profile are properly initialized\n    const profile = this.twitterService.getProfile();\n    if (!profile?.username) {\n      elizaLogger.error(\n        '[TwitterInteraction] Twitter profile not properly initialized',\n      );\n      return;\n    }\n\n    const twitterUsername = profile.username;\n    try {\n      // Fetch mentions\n      const { tweets: mentionCandidates, spammedTweets } =\n        await this.twitterService.searchTweets(\n          `@${twitterUsername}`,\n          20,\n          SearchMode.Latest,\n          '[TwitterInteraction]',\n        );\n      elizaLogger.info(\n        `[TwitterInteraction] Found ${mentionCandidates.length} mention candidates for ${twitterUsername} (filtered ${spammedTweets} spam tweets)`,\n      );\n\n      let uniqueTweetCandidates = [...new Set(mentionCandidates)];\n\n      uniqueTweetCandidates = uniqueTweetCandidates\n        .sort((a, b) => a.id.localeCompare(b.id))\n        .filter((tweet) => tweet.userId !== profile.userId);\n\n      const lastCheckedId = await this.twitterService.getLatestCheckedTweetId(\n        profile.username,\n      );\n      for (const tweet of uniqueTweetCandidates) {\n        if (!lastCheckedId || BigInt(tweet.id) > lastCheckedId) {\n          const tweetId = stringToUuid(`${tweet.id}-${this.runtime.agentId}`);\n          const existingResponse =\n            await this.runtime.messageManager.getMemoryById(tweetId);\n\n          if (existingResponse) {\n            elizaLogger.info(\n              `[TwitterInteraction] Already responded to tweet ${tweet.id}, skipping`,\n            );\n            continue;\n          }\n\n          elizaLogger.info(\n            `[TwitterInteraction] New Tweet found: ${tweet.permanentUrl}`,\n          );\n\n          const roomId = stringToUuid(\n            `${tweet.conversationId}-${this.runtime.agentId}`,\n          );\n          const userIdUUID = tweet.userId\n            ? tweet.userId === profile.userId\n              ? this.runtime.agentId\n              : stringToUuid(tweet.userId)\n            : stringToUuid('unknown-user');\n\n          await this.runtime.ensureConnection(\n            userIdUUID,\n            roomId,\n            tweet.username,\n            tweet.name,\n            'twitter',\n          );\n\n          const thread = await this.buildConversationThread(tweet);\n          const message = {\n            content: { text: tweet.text },\n            agentId: this.runtime.agentId,\n            userId: userIdUUID,\n            roomId,\n          };\n\n          await this.handleTweet({\n            tweet,\n            message,\n            thread,\n          });\n\n          await this.twitterService.updateLatestCheckedTweetId(\n            profile.username,\n            BigInt(tweet.id),\n          );\n        }\n      }\n\n      elizaLogger.info(\n        '[TwitterInteraction] Finished checking Twitter interactions',\n      );\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterInteraction] Error handling Twitter interactions:',\n        error,\n      );\n    }\n  }\n\n  private async handleTweet({\n    tweet,\n    message,\n    thread,\n  }: {\n    tweet: Tweet;\n    message: Memory;\n    thread: Tweet[];\n  }): Promise<void> {\n    const profile = this.twitterService.getProfile();\n    if (!profile || tweet.userId === profile.userId) {\n      return;\n    }\n\n    if (!message.content.text) {\n      elizaLogger.info(\n        `[TwitterInteraction] Skipping Tweet with no text: ${tweet.id}`,\n      );\n      return;\n    }\n\n    elizaLogger.info(`[TwitterInteraction] Processing Tweet: ${tweet.id}`);\n\n    const formatTweet = (tweet: Tweet) => `ID: ${tweet.id}\nFrom: ${tweet.name} (@${tweet.username})\nText: ${tweet.text}`;\n\n    const currentPost = formatTweet(tweet);\n    elizaLogger.debug(`[TwitterInteraction] Thread: ${thread}`);\n\n    const formattedConversation = thread\n      .map(\n        (tweet) => `@${tweet.username} (${new Date(\n          tweet.timestamp * 1000,\n        ).toLocaleString('en-US', {\n          hour: '2-digit',\n          minute: '2-digit',\n          month: 'short',\n          day: 'numeric',\n        })}):\n      ${tweet.text}`,\n      )\n      .join('\\n\\n');\n\n    elizaLogger.debug(\n      `[TwitterInteraction] formattedConversation: ${formattedConversation}`,\n    );\n\n    let homeTimeline: Tweet[] = [];\n    const cachedTimeline = await this.twitterService.getUserTimeline(\n      profile.username,\n      50,\n    );\n    if (cachedTimeline.tweets.length > 0) {\n      homeTimeline = cachedTimeline.tweets;\n    }\n\n    const formattedTimeline = homeTimeline\n      .map(\n        (tweet) => `ID: ${tweet.id}\nFrom: ${tweet.name} (@${tweet.username})${tweet.inReplyToStatusId ? `\\nIn reply to: ${tweet.inReplyToStatusId}` : ''}\nText: ${tweet.text}\n---`,\n      )\n      .join('\\n');\n\n    let state = await this.runtime.composeState(message, {\n      twitterService: this.twitterService,\n      twitterUserName: this.runtime.getSetting('TWITTER_USERNAME'),\n      currentPost,\n      formattedConversation,\n      timeline: formattedTimeline,\n    });\n\n    const shouldRespondContext = composeContext({\n      state,\n      template:\n        this.runtime.character.templates?.twitterShouldRespondTemplate ||\n        this.runtime.character?.templates?.shouldRespondTemplate ||\n        twitterShouldRespondTemplate,\n    });\n\n    const shouldRespond = await generateShouldRespond({\n      runtime: this.runtime,\n      context: shouldRespondContext,\n      modelClass: ModelClass.SMALL,\n    });\n\n    // Handle spam detection from shouldRespond\n    if (shouldRespond.startsWith('SPAM')) {\n      try {\n        const spamJson = shouldRespond.substring(4).trim(); // Remove 'SPAM' prefix\n        const spamData = JSON.parse(spamJson);\n\n        elizaLogger.info(\n          `[TwitterInteraction] Tweet ${tweet.id} identified as spam`,\n          {\n            spamScore: spamData.spamScore,\n            reasons: spamData.reasons,\n            userId: tweet.userId,\n            username: tweet.username,\n          },\n        );\n\n        // Update spam user data in the database\n        await tweetQueries.updateSpamUser(\n          tweet.userId,\n          spamData.spamScore,\n          spamData.reasons,\n        );\n\n        return; // Exit without responding\n      } catch (error) {\n        elizaLogger.error(\n          '[TwitterInteraction] Error processing spam response:',\n          error,\n        );\n      }\n    }\n\n    if (shouldRespond !== 'RESPOND') {\n      elizaLogger.info('[TwitterInteraction] Not responding to message');\n      return;\n    }\n\n    const context = composeContext({\n      state,\n      template:\n        this.runtime.character.templates?.twitterMessageHandlerTemplate ||\n        this.runtime.character?.templates?.messageHandlerTemplate ||\n        twitterMessageHandlerTemplate,\n    });\n\n    elizaLogger.debug(`[TwitterInteraction] Interactions prompt:\\n${context}`);\n\n    const response = await generateMessageResponse({\n      runtime: this.runtime,\n      context,\n      modelClass: ModelClass.MEDIUM,\n    });\n\n    const removeQuotes = (str: string) => str.replace(/^['\"](.*)['\"]$/, '$1');\n    response.text = removeQuotes(response.text);\n\n    if (response.text) {\n      try {\n        const responseMessages = await sendTweetAndCreateMemory(\n          this.twitterService,\n          response,\n          message.roomId,\n          message.agentId,\n          message.userId,\n          tweet.id,\n        );\n\n        state = (await this.runtime.updateRecentMessageState(state)) as State;\n\n        for (const responseMessage of responseMessages) {\n          if (\n            responseMessage === responseMessages[responseMessages.length - 1]\n          ) {\n            responseMessage.content.action = response.action;\n          } else {\n            responseMessage.content.action = 'CONTINUE';\n          }\n          await this.runtime.messageManager.createMemory(responseMessage);\n        }\n\n        await this.runtime.evaluate(message, state);\n        await this.runtime.processActions(message, responseMessages, state);\n\n        await this.twitterService.cacheResponseInfo(\n          tweet.id,\n          context,\n          tweet,\n          response.text,\n        );\n        await wait();\n      } catch (error) {\n        elizaLogger.error(\n          `[TwitterInteraction] Error sending response tweet: ${error}`,\n        );\n      }\n    }\n  }\n\n  private async buildConversationThread(\n    tweet: Tweet,\n    maxReplies = 10,\n  ): Promise<Tweet[]> {\n    const thread: Tweet[] = [];\n    const visited: Set<string> = new Set();\n\n    const processThread = async (currentTweet: Tweet, depth = 0) => {\n      elizaLogger.info(\n        `[TwitterInteraction] Processing tweet: ${currentTweet.id}`,\n        {\n          id: currentTweet.id,\n          inReplyToStatusId: currentTweet.inReplyToStatusId,\n          depth: depth,\n        },\n      );\n\n      if (!currentTweet) {\n        elizaLogger.info(\n          '[TwitterInteraction] No current tweet found for thread building',\n        );\n        return;\n      }\n\n      if (depth >= maxReplies) {\n        elizaLogger.info(\n          '[TwitterInteraction] Reached maximum reply depth',\n          depth,\n        );\n        return;\n      }\n\n      // Handle memory storage\n      const memory = await this.runtime.messageManager.getMemoryById(\n        stringToUuid(`${currentTweet.id}-${this.runtime.agentId}`),\n      );\n      if (!memory) {\n        const roomId = stringToUuid(\n          `${currentTweet.conversationId}-${this.runtime.agentId}`,\n        );\n        const userId = stringToUuid(currentTweet.userId);\n\n        await this.runtime.ensureConnection(\n          userId,\n          roomId,\n          currentTweet.username,\n          currentTweet.name,\n          'twitter',\n        );\n\n        const memory: Memory = {\n          id: stringToUuid(`${currentTweet.id}-${this.runtime.agentId}`),\n          agentId: this.runtime.agentId,\n          content: {\n            text: currentTweet.text,\n            source: 'twitter',\n            url: currentTweet.permanentUrl,\n            inReplyTo: currentTweet.inReplyToStatusId\n              ? stringToUuid(\n                  `${currentTweet.inReplyToStatusId}-${this.runtime.agentId}`,\n                )\n              : undefined,\n          },\n          createdAt: currentTweet.timestamp * 1000,\n          roomId,\n          userId:\n            currentTweet.userId === this.twitterService.getProfile()?.userId\n              ? this.runtime.agentId\n              : stringToUuid(currentTweet.userId),\n        };\n\n        // Generate embedding before creating memory\n        await this.runtime.messageManager.addEmbeddingToMemory(memory);\n        await this.runtime.messageManager.createMemory(memory);\n      }\n\n      if (visited.has(currentTweet.id)) {\n        elizaLogger.info(\n          '[TwitterInteraction] Already visited tweet:',\n          currentTweet.id,\n        );\n        return;\n      }\n\n      visited.add(currentTweet.id);\n      thread.unshift(currentTweet);\n\n      elizaLogger.debug('[TwitterInteraction] Current thread state:', {\n        length: thread.length,\n        currentDepth: depth,\n        tweetId: currentTweet.id,\n      });\n\n      if (currentTweet.inReplyToStatusId) {\n        elizaLogger.info(\n          'Fetching parent tweet:',\n          currentTweet.inReplyToStatusId,\n        );\n        try {\n          const parentTweet = await this.twitterService.getTweet(\n            currentTweet.inReplyToStatusId,\n          );\n\n          if (parentTweet) {\n            elizaLogger.info('[TwitterInteraction] Found parent tweet:', {\n              id: parentTweet.id,\n              text: parentTweet.text?.slice(0, 50),\n            });\n            await processThread(parentTweet, depth + 1);\n          } else {\n            elizaLogger.info(\n              '[TwitterInteraction] No parent tweet found for:',\n              currentTweet.inReplyToStatusId,\n            );\n          }\n        } catch (error) {\n          elizaLogger.info(\n            '[TwitterInteraction] Error fetching parent tweet:',\n            {\n              tweetId: currentTweet.inReplyToStatusId,\n              error,\n            },\n          );\n        }\n      } else {\n        elizaLogger.info(\n          '[TwitterInteraction] Reached end of reply chain at:',\n          currentTweet.id,\n        );\n      }\n    };\n\n    await processThread(tweet, 0);\n\n    elizaLogger.debug(\n      '[TwitterInteraction] Final thread built:',\n      thread.length,\n      thread.map((t) => ({\n        id: t.id,\n        text: t.text?.slice(0, 50),\n      })),\n    );\n\n    return thread;\n  }\n}\n","import type { TopicWeightRow } from '@/types/topic';\nimport { type IAgentRuntime, elizaLogger } from '@elizaos/core';\nimport { getAggregatedTopicWeights } from '../topic-weights/topics';\nimport { analyzeTopicRelationships } from './analyze-topic-relationships';\n\n/**\n * Selects a topic based on weighted probabilities, optionally considering a preferred topic\n * @param runtime - Agent runtime for AI operations\n * @param timeframeHours - Number of hours to look back for topic weights\n * @param preferredTopic - Optional topic to bias selection towards related topics\n * @returns Selected topic and weight\n */\nexport async function selectTopic(\n  runtime: IAgentRuntime,\n  timeframeHours = 24,\n  preferredTopic?: string,\n): Promise<TopicWeightRow> {\n  // Get aggregated topic weights from recent data\n  const topicWeights = await getAggregatedTopicWeights(timeframeHours);\n\n  if (topicWeights.length === 0) {\n    throw new Error('No topics available for selection');\n  }\n\n  // If no preferred topic, just do regular weighted selection\n  if (!preferredTopic) {\n    return performWeightedSelection(topicWeights);\n  }\n\n  try {\n    // Analyze relationships between available topics and preferred topic\n    const analysis = await analyzeTopicRelationships(\n      runtime,\n      topicWeights.map((tw) => tw.topic),\n      preferredTopic,\n    );\n\n    // Adjust weights based on topic relationships and confidence\n    const adjustedWeights = topicWeights.map((tw) => {\n      const relationship = analysis.relatedTopics.find(\n        (r) => r.topic === tw.topic,\n      );\n\n      // Filter out topics with low relevance or unrelated topics\n      if (\n        !relationship ||\n        relationship.relevanceScore < 0.4 ||\n        relationship.relationshipType === 'none'\n      ) {\n        return {\n          ...tw,\n          weight: 0, // Zero weight means it won't be selected\n        };\n      }\n\n      // Weight adjustment factors:\n      // - Base weight: 30%\n      // - Relationship score: 50%\n      // - Analysis confidence: 20%\n      const baseWeight = tw.weight * 0.3;\n      const relationshipWeight = relationship.relevanceScore * 0.5;\n      const confidenceWeight = analysis.analysisMetadata.confidence * 0.2;\n\n      return {\n        ...tw,\n        weight: baseWeight + relationshipWeight + confidenceWeight,\n      };\n    });\n\n    // Filter out topics with zero weight\n    const validWeights = adjustedWeights.filter((tw) => tw.weight > 0);\n\n    if (validWeights.length === 0) {\n      elizaLogger.warn(\n        '[TopicSelection] No sufficiently related topics found, using preferred topic',\n        { preferredTopic },\n      );\n      // If no related topics meet the threshold, use the preferred topic\n      return {\n        ...topicWeights[0],\n        topic: preferredTopic,\n        weight: 1,\n      };\n    }\n\n    elizaLogger.debug('[TopicSelection] Adjusted weights:', {\n      adjustments: validWeights.map((w) => ({\n        topic: w.topic,\n        originalWeight: topicWeights.find((tw) => tw.topic === w.topic)?.weight,\n        adjustedWeight: w.weight,\n        relationship: analysis.relatedTopics.find((r) => r.topic === w.topic)\n          ?.relationshipType,\n      })),\n    });\n\n    return performWeightedSelection(validWeights);\n  } catch (error) {\n    elizaLogger.warn(\n      '[TopicSelection] Error in relationship analysis, falling back to basic selection:',\n      {\n        error: error instanceof Error ? error.message : String(error),\n      },\n    );\n    return performWeightedSelection(topicWeights);\n  }\n}\n\n/**\n * Performs weighted random selection from a list of topics\n */\nfunction performWeightedSelection(\n  topicWeights: TopicWeightRow[],\n): TopicWeightRow {\n  const totalWeight = topicWeights.reduce((sum, tw) => sum + tw.weight, 0);\n  const randomValue = Math.random() * totalWeight;\n  let accumWeight = 0;\n\n  const selectedTopic =\n    topicWeights.find((tw) => {\n      accumWeight += tw.weight;\n      return randomValue <= accumWeight;\n    }) || topicWeights[0];\n\n  elizaLogger.debug('[TopicSelection] Selected topic based on weights', {\n    selectedTopic: selectedTopic.topic,\n    weight: selectedTopic.weight,\n    allWeights: topicWeights.map((tw) => ({\n      topic: tw.topic,\n      weight: tw.weight,\n    })),\n  });\n\n  return selectedTopic;\n}\n","import type { TweetQueueService } from '@/services/twitter/tweet-queue.service';\nimport { TwitterConfigService } from '@/services/twitter/twitter-config-service';\nimport type { TwitterService } from '@/services/twitter/twitter-service';\nimport { initializeTopicWeights } from '@/utils/initialize-db/topics';\nimport { selectTopic } from '@/utils/selection/select-topic';\nimport type { IAgentRuntime } from '@elizaos/core';\nimport { elizaLogger } from '@elizaos/core';\nimport { SearchMode } from 'agent-twitter-client';\nimport { getEnv } from '../../../config/env';\n\nexport class TwitterSearchClient {\n  private twitterConfigService: TwitterConfigService;\n  private twitterService: TwitterService;\n  private readonly runtime: IAgentRuntime;\n  private readonly tweetQueueService: TweetQueueService;\n  private searchTimeout: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(\n    twitterService: TwitterService,\n    runtime: IAgentRuntime,\n    tweetQueueService: TweetQueueService,\n  ) {\n    this.twitterService = twitterService;\n    this.twitterConfigService = new TwitterConfigService(runtime);\n    this.runtime = runtime;\n    this.tweetQueueService = tweetQueueService;\n  }\n\n  async start(): Promise<void> {\n    elizaLogger.info('[TwitterSearch] Starting search client');\n\n    // Initialize topic weights if they don't exist\n    try {\n      await initializeTopicWeights(this.runtime);\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterAccounts] Error initializing topic weights:',\n        error,\n      );\n    }\n\n    await this.onReady();\n  }\n\n  async stop(): Promise<void> {\n    elizaLogger.info('[TwitterSearch] Stopping search client');\n    if (this.searchTimeout) {\n      clearTimeout(this.searchTimeout);\n      this.searchTimeout = null;\n    }\n  }\n\n  private async onReady() {\n    await this.engageWithSearchTermsLoop();\n  }\n\n  private async engageWithSearchTermsLoop() {\n    this.engageWithSearchTerms();\n    this.searchTimeout = setTimeout(\n      () => this.engageWithSearchTermsLoop(),\n      Number(this.runtime.getSetting('TWITTER_POLL_INTERVAL') || 60) * 1000,\n    );\n  }\n\n  private async engageWithSearchTerms() {\n    elizaLogger.info('[TwitterSearch] Engaging with search terms');\n\n    const config = await this.twitterConfigService.getConfig();\n    const env = getEnv();\n\n    try {\n      // Use the new async selectTopic with runtime and configured timeframe\n      const selectedTopic = await selectTopic(\n        this.runtime,\n        //TODO: update to get this from runtime or twitter config\n        env.SEARCH_TIMEFRAME_HOURS,\n        env.SEARCH_PREFERRED_TOPIC,\n      );\n\n      elizaLogger.info('[TwitterSearch] Fetching search tweets', {\n        preferredTopic: env.SEARCH_PREFERRED_TOPIC,\n      });\n      await new Promise((resolve) => setTimeout(resolve, 5000));\n\n      const { tweets: searchTweets, spammedTweets } =\n        await this.twitterService.searchTweets(\n          selectedTopic.topic,\n          config.search.tweetLimits.searchResults,\n          SearchMode.Top,\n          '[TwitterSearch]',\n          config.search.parameters,\n          config.search.engagementThresholds,\n        );\n\n      if (!searchTweets.length) {\n        elizaLogger.warn(\n          `[TwitterSearch] No tweets found for term: ${selectedTopic.topic}`,\n        );\n        return;\n      }\n\n      elizaLogger.info(\n        `[TwitterSearch] Found ${searchTweets.length} tweets for term: ${selectedTopic.topic}`,\n        { spammedTweets },\n      );\n\n      // Add tweets to the queue instead of processing them directly\n      await this.tweetQueueService.addTweets(searchTweets, 'search', 1);\n\n      elizaLogger.info('[TwitterSearch] Successfully queued search results');\n    } catch (error) {\n      elizaLogger.error(\n        '[TwitterSearch] Error engaging with search terms:',\n        error instanceof Error ? error.message : String(error),\n      );\n    }\n  }\n}\n\nexport default TwitterSearchClient;\n","import type { Character, ClientInstance, IAgentRuntime } from '@elizaos/core';\nimport { startInjectiveClient } from './injective-client';\nimport { startTwitterClient } from './x-client';\n\nexport async function initializeClients(\n  _character: Character,\n  runtime: IAgentRuntime,\n): Promise<ClientInstance[]> {\n  const clients = [];\n\n  if (runtime.getSetting('TWITTER_USERNAME')) {\n    const twitterClient = await startTwitterClient(runtime);\n    clients.push(twitterClient);\n  }\n\n  if (runtime.getSetting('INJECTIVE_ENABLED') === 'true') {\n    const injectiveClient = await startInjectiveClient(runtime);\n    clients.push(injectiveClient);\n  }\n\n  return clients;\n}\n","import { v4 } from 'uuid';\n\n// Import the entire module as default\nimport pg from 'pg';\ntype Pool = pg.Pool;\n\nimport fs from 'node:fs';\nimport path from 'node:path';\nimport { fileURLToPath } from 'node:url';\nimport {\n  type Account,\n  type Actor,\n  DatabaseAdapter,\n  EmbeddingProvider,\n  type Goal,\n  type GoalStatus,\n  type IDatabaseCacheAdapter,\n  type Memory,\n  type Participant,\n  type RAGKnowledgeItem,\n  type Relationship,\n  type UUID,\n  elizaLogger,\n  getEmbeddingConfig,\n} from '@elizaos/core';\nimport type {\n  QueryConfig,\n  QueryConfigValues,\n  QueryResult,\n  QueryResultRow,\n} from 'pg';\nconst __filename = fileURLToPath(import.meta.url); // get the resolved path to the file\nconst __dirname = path.dirname(__filename); // get the name of the directory\n\nexport class PostgresDatabaseAdapter\n  extends DatabaseAdapter<Pool>\n  implements IDatabaseCacheAdapter\n{\n  private pool: Pool;\n  private readonly maxRetries: number = 3;\n  private readonly baseDelay: number = 1000; // 1 second\n  private readonly maxDelay: number = 10000; // 10 seconds\n  private readonly jitterMax: number = 1000; // 1 second\n  private readonly connectionTimeout: number = 5000; // 5 seconds\n\n  constructor(connectionConfig: any) {\n    super({\n      //circuitbreaker stuff\n      failureThreshold: 5,\n      resetTimeout: 60000,\n      halfOpenMaxAttempts: 3,\n    });\n\n    const defaultConfig = {\n      max: 20,\n      idleTimeoutMillis: 30000,\n      connectionTimeoutMillis: this.connectionTimeout,\n    };\n\n    this.pool = new pg.Pool({\n      ...defaultConfig,\n      ...connectionConfig, // Allow overriding defaults\n    });\n\n    this.pool.on('error', (err) => {\n      elizaLogger.error('Unexpected pool error', err);\n      this.handlePoolError(err);\n    });\n\n    this.setupPoolErrorHandling();\n    this.testConnection();\n  }\n\n  private setupPoolErrorHandling() {\n    process.on('SIGINT', async () => {\n      await this.cleanup();\n      process.exit(0);\n    });\n\n    process.on('SIGTERM', async () => {\n      await this.cleanup();\n      process.exit(0);\n    });\n\n    process.on('beforeExit', async () => {\n      await this.cleanup();\n    });\n  }\n\n  private async withDatabase<T>(\n    operation: () => Promise<T>,\n    context: string,\n  ): Promise<T> {\n    return this.withCircuitBreaker(async () => {\n      return this.withRetry(operation);\n    }, context);\n  }\n\n  private async withRetry<T>(operation: () => Promise<T>): Promise<T> {\n    let lastError: Error = new Error('Unknown error'); // Initialize with default\n\n    for (let attempt = 1; attempt <= this.maxRetries; attempt++) {\n      try {\n        return await operation();\n      } catch (error) {\n        lastError = error as Error;\n\n        if (attempt < this.maxRetries) {\n          // Calculate delay with exponential backoff\n          const backoffDelay = Math.min(\n            this.baseDelay * Math.pow(2, attempt - 1),\n            this.maxDelay,\n          );\n\n          // Add jitter to prevent thundering herd\n          const jitter = Math.random() * this.jitterMax;\n          const delay = backoffDelay + jitter;\n\n          elizaLogger.warn(\n            `Database operation failed (attempt ${attempt}/${this.maxRetries}):`,\n            {\n              error: error instanceof Error ? error.message : String(error),\n              nextRetryIn: `${(delay / 1000).toFixed(1)}s`,\n            },\n          );\n\n          await new Promise((resolve) => setTimeout(resolve, delay));\n        } else {\n          elizaLogger.error('Max retry attempts reached:', {\n            error: error instanceof Error ? error.message : String(error),\n            totalAttempts: attempt,\n          });\n          throw error instanceof Error ? error : new Error(String(error));\n        }\n      }\n    }\n\n    throw lastError;\n  }\n\n  private async handlePoolError(error: Error) {\n    elizaLogger.error('Pool error occurred, attempting to reconnect', {\n      error: error.message,\n    });\n\n    try {\n      // Close existing pool\n      await this.pool.end();\n\n      // Create new pool\n      this.pool = new pg.Pool({\n        ...this.pool.options,\n        connectionTimeoutMillis: this.connectionTimeout,\n      });\n\n      await this.testConnection();\n      elizaLogger.success('Pool reconnection successful');\n    } catch (reconnectError) {\n      elizaLogger.error('Failed to reconnect pool', {\n        error:\n          reconnectError instanceof Error\n            ? reconnectError.message\n            : String(reconnectError),\n      });\n      throw reconnectError;\n    }\n  }\n\n  async query<R extends QueryResultRow = any, I = any[]>(\n    queryTextOrConfig: string | QueryConfig<I>,\n    values?: QueryConfigValues<I>,\n  ): Promise<QueryResult<R>> {\n    return this.withDatabase(async () => {\n      return await this.pool.query(queryTextOrConfig, values);\n    }, 'query');\n  }\n\n  private async validateVectorSetup(): Promise<boolean> {\n    try {\n      const vectorExt = await this.query(`\n                SELECT 1 FROM pg_extension WHERE extname = 'vector'\n            `);\n      const hasVector = vectorExt.rows.length > 0;\n\n      if (!hasVector) {\n        elizaLogger.error('Vector extension not found in database');\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      elizaLogger.error('Failed to validate vector extension:', {\n        error: error instanceof Error ? error.message : String(error),\n      });\n      return false;\n    }\n  }\n\n  async init() {\n    await this.testConnection();\n\n    const client = await this.pool.connect();\n    try {\n      await client.query('BEGIN');\n\n      // Set application settings for embedding dimension\n      const embeddingConfig = getEmbeddingConfig();\n      if (embeddingConfig.provider === EmbeddingProvider.OpenAI) {\n        await client.query(\"SET app.use_openai_embedding = 'true'\");\n        await client.query(\"SET app.use_ollama_embedding = 'false'\");\n        await client.query(\"SET app.use_gaianet_embedding = 'false'\");\n      } else if (embeddingConfig.provider === EmbeddingProvider.Ollama) {\n        await client.query(\"SET app.use_openai_embedding = 'false'\");\n        await client.query(\"SET app.use_ollama_embedding = 'true'\");\n        await client.query(\"SET app.use_gaianet_embedding = 'false'\");\n      } else if (embeddingConfig.provider === EmbeddingProvider.GaiaNet) {\n        await client.query(\"SET app.use_openai_embedding = 'false'\");\n        await client.query(\"SET app.use_ollama_embedding = 'false'\");\n        await client.query(\"SET app.use_gaianet_embedding = 'true'\");\n      } else {\n        await client.query(\"SET app.use_openai_embedding = 'false'\");\n        await client.query(\"SET app.use_ollama_embedding = 'false'\");\n      }\n\n      // Check if schema already exists (check for a core table)\n      const { rows } = await client.query(`\n                SELECT EXISTS (\n                    SELECT FROM information_schema.tables\n                    WHERE table_name = 'rooms'\n                );\n            `);\n\n      if (!rows[0].exists || !(await this.validateVectorSetup())) {\n        elizaLogger.info(\n          'Applying database schema - tables or vector extension missing',\n        );\n        const schema = fs.readFileSync(\n          path.resolve(__dirname, '../schema.sql'),\n          'utf8',\n        );\n        await client.query(schema);\n      }\n\n      await client.query('COMMIT');\n    } catch (error) {\n      await client.query('ROLLBACK');\n      throw error;\n    } finally {\n      client.release();\n    }\n  }\n\n  async close() {\n    await this.pool.end();\n  }\n\n  async testConnection(): Promise<boolean> {\n    let client: pg.PoolClient | undefined;\n    try {\n      client = await this.pool.connect();\n      const result = await client.query('SELECT NOW()');\n      elizaLogger.success(\n        'Database connection test successful:',\n        result.rows[0],\n      );\n      return true;\n    } catch (error) {\n      elizaLogger.error('Database connection test failed:', error);\n      throw new Error(\n        `Failed to connect to database: ${(error as Error).message}`,\n      );\n    } finally {\n      if (client) {\n        client.release();\n      }\n    }\n  }\n\n  async cleanup(): Promise<void> {\n    try {\n      await this.pool.end();\n      elizaLogger.info('Database pool closed');\n    } catch (error) {\n      elizaLogger.error('Error closing database pool:', error);\n    }\n  }\n\n  async getRoom(roomId: UUID): Promise<UUID | null> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        'SELECT id FROM rooms WHERE id = $1',\n        [roomId],\n      );\n      return rows.length > 0 ? (rows[0].id as UUID) : null;\n    }, 'getRoom');\n  }\n\n  async getParticipantsForAccount(userId: UUID): Promise<Participant[]> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        `SELECT id, \"userId\", \"roomId\", \"last_message_read\"\n                FROM participants\n                WHERE \"userId\" = $1`,\n        [userId],\n      );\n      return rows as Participant[];\n    }, 'getParticipantsForAccount');\n  }\n\n  async getParticipantUserState(\n    roomId: UUID,\n    userId: UUID,\n  ): Promise<'FOLLOWED' | 'MUTED' | null> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        `SELECT \"userState\" FROM participants WHERE \"roomId\" = $1 AND \"userId\" = $2`,\n        [roomId, userId],\n      );\n      return rows.length > 0 ? rows[0].userState : null;\n    }, 'getParticipantUserState');\n  }\n\n  async getMemoriesByRoomIds(params: {\n    roomIds: UUID[];\n    agentId?: UUID;\n    tableName: string;\n    limit?: number;\n  }): Promise<Memory[]> {\n    return this.withDatabase(async () => {\n      if (params.roomIds.length === 0) {\n        return [];\n      }\n      const placeholders = params.roomIds.map((_, i) => `$${i + 2}`).join(', ');\n\n      let query = `SELECT * FROM memories WHERE type = $1 AND \"roomId\" IN (${placeholders})`;\n      let queryParams = [params.tableName, ...params.roomIds];\n\n      if (params.agentId) {\n        query += ` AND \"agentId\" = $${params.roomIds.length + 2}`;\n        queryParams = [...queryParams, params.agentId];\n      }\n\n      // Add sorting, and conditionally add LIMIT if provided\n      query += ` ORDER BY \"createdAt\" DESC`;\n      if (params.limit) {\n        query += ` LIMIT $${queryParams.length + 1}`;\n        queryParams.push(params.limit.toString());\n      }\n\n      const { rows } = await this.pool.query(query, queryParams);\n      return rows.map((row) => ({\n        ...row,\n        content:\n          typeof row.content === 'string'\n            ? JSON.parse(row.content)\n            : row.content,\n      }));\n    }, 'getMemoriesByRoomIds');\n  }\n\n  async setParticipantUserState(\n    roomId: UUID,\n    userId: UUID,\n    state: 'FOLLOWED' | 'MUTED' | null,\n  ): Promise<void> {\n    return this.withDatabase(async () => {\n      await this.pool.query(\n        `UPDATE participants SET \"userState\" = $1 WHERE \"roomId\" = $2 AND \"userId\" = $3`,\n        [state, roomId, userId],\n      );\n    }, 'setParticipantUserState');\n  }\n\n  async getParticipantsForRoom(roomId: UUID): Promise<UUID[]> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        'SELECT \"userId\" FROM participants WHERE \"roomId\" = $1',\n        [roomId],\n      );\n      return rows.map((row) => row.userId);\n    }, 'getParticipantsForRoom');\n  }\n\n  async getAccountById(userId: UUID): Promise<Account | null> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        'SELECT * FROM accounts WHERE id = $1',\n        [userId],\n      );\n      if (rows.length === 0) {\n        elizaLogger.debug('Account not found:', { userId });\n        return null;\n      }\n\n      const account = rows[0];\n      // elizaLogger.debug(\"Account retrieved:\", {\n      //     userId,\n      //     hasDetails: !!account.details,\n      // });\n\n      return {\n        ...account,\n        details:\n          typeof account.details === 'string'\n            ? JSON.parse(account.details)\n            : account.details,\n      };\n    }, 'getAccountById');\n  }\n\n  async createAccount(account: Account): Promise<boolean> {\n    return this.withDatabase(async () => {\n      try {\n        const accountId = account.id ?? v4();\n        await this.pool.query(\n          `INSERT INTO accounts (id, name, username, email, \"avatarUrl\", details)\n                    VALUES ($1, $2, $3, $4, $5, $6)`,\n          [\n            accountId,\n            account.name,\n            account.username || '',\n            account.email || '',\n            account.avatarUrl || '',\n            JSON.stringify(account.details),\n          ],\n        );\n        elizaLogger.debug('Account created successfully:', {\n          accountId,\n        });\n        return true;\n      } catch (error) {\n        elizaLogger.error('Error creating account:', {\n          error: error instanceof Error ? error.message : String(error),\n          accountId: account.id,\n          name: account.name, // Only log non-sensitive fields\n        });\n        return false; // Return false instead of throwing to maintain existing behavior\n      }\n    }, 'createAccount');\n  }\n\n  async getActorById(params: { roomId: UUID }): Promise<Actor[]> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        `SELECT a.id, a.name, a.username, a.details\n                FROM participants p\n                LEFT JOIN accounts a ON p.\"userId\" = a.id\n                WHERE p.\"roomId\" = $1`,\n        [params.roomId],\n      );\n\n      elizaLogger.debug('Retrieved actors:', {\n        roomId: params.roomId,\n        actorCount: rows.length,\n      });\n\n      return rows.map((row) => {\n        try {\n          return {\n            ...row,\n            details:\n              typeof row.details === 'string'\n                ? JSON.parse(row.details)\n                : row.details,\n          };\n        } catch (error) {\n          elizaLogger.warn('Failed to parse actor details:', {\n            actorId: row.id,\n            error: error instanceof Error ? error.message : String(error),\n          });\n          return {\n            ...row,\n            details: {}, // Provide default empty details on parse error\n          };\n        }\n      });\n    }, 'getActorById').catch((error) => {\n      elizaLogger.error('Failed to get actors:', {\n        roomId: params.roomId,\n        error: error.message,\n      });\n      throw error; // Re-throw to let caller handle database errors\n    });\n  }\n\n  async getMemoryById(id: UUID): Promise<Memory | null> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        'SELECT * FROM memories WHERE id = $1',\n        [id],\n      );\n      if (rows.length === 0) {\n        return null;\n      }\n\n      return {\n        ...rows[0],\n        content:\n          typeof rows[0].content === 'string'\n            ? JSON.parse(rows[0].content)\n            : rows[0].content,\n      };\n    }, 'getMemoryById');\n  }\n\n  async createMemory(memory: Memory, tableName: string): Promise<void> {\n    return this.withDatabase(async () => {\n      elizaLogger.debug('PostgresAdapter createMemory:', {\n        memoryId: memory.id,\n        embeddingLength: memory.embedding?.length,\n        contentLength: memory.content?.text?.length,\n      });\n\n      let isUnique = true;\n      if (memory.embedding) {\n        const similarMemories = await this.searchMemoriesByEmbedding(\n          memory.embedding,\n          {\n            tableName,\n            roomId: memory.roomId,\n            match_threshold: 0.95,\n            count: 1,\n          },\n        );\n        isUnique = similarMemories.length === 0;\n      }\n\n      await this.pool.query(\n        `INSERT INTO memories (\n                    id, type, content, embedding, \"userId\", \"roomId\", \"agentId\", \"unique\", \"createdAt\"\n                ) VALUES ($1, $2, $3, $4, $5::uuid, $6::uuid, $7::uuid, $8, to_timestamp($9/1000.0))`,\n        [\n          memory.id ?? v4(),\n          tableName,\n          JSON.stringify(memory.content),\n          memory.embedding ? `[${memory.embedding.join(',')}]` : null,\n          memory.userId,\n          memory.roomId,\n          memory.agentId,\n          memory.unique ?? isUnique,\n          Date.now(),\n        ],\n      );\n    }, 'createMemory');\n  }\n\n  async searchMemories(params: {\n    tableName: string;\n    agentId: UUID;\n    roomId: UUID;\n    embedding: number[];\n    match_threshold: number;\n    match_count: number;\n    unique: boolean;\n  }): Promise<Memory[]> {\n    return await this.searchMemoriesByEmbedding(params.embedding, {\n      match_threshold: params.match_threshold,\n      count: params.match_count,\n      agentId: params.agentId,\n      roomId: params.roomId,\n      unique: params.unique,\n      tableName: params.tableName,\n    });\n  }\n\n  async getMemories(params: {\n    roomId: UUID;\n    count?: number;\n    unique?: boolean;\n    tableName: string;\n    agentId?: UUID;\n    start?: number;\n    end?: number;\n  }): Promise<Memory[]> {\n    // Parameter validation\n    if (!params.tableName) {\n      throw new Error('tableName is required');\n    }\n    if (!params.roomId) {\n      throw new Error('roomId is required');\n    }\n\n    return this.withDatabase(async () => {\n      // Build query\n      let sql = `SELECT * FROM memories WHERE type = $1 AND \"roomId\" = $2`;\n      const values: any[] = [params.tableName, params.roomId];\n      let paramCount = 2;\n\n      // Add time range filters\n      if (params.start) {\n        paramCount++;\n        sql += ` AND \"createdAt\" >= to_timestamp($${paramCount})`;\n        values.push(params.start / 1000);\n      }\n\n      if (params.end) {\n        paramCount++;\n        sql += ` AND \"createdAt\" <= to_timestamp($${paramCount})`;\n        values.push(params.end / 1000);\n      }\n\n      // Add other filters\n      if (params.unique) {\n        sql += ` AND \"unique\" = true`;\n      }\n\n      if (params.agentId) {\n        paramCount++;\n        sql += ` AND \"agentId\" = $${paramCount}`;\n        values.push(params.agentId);\n      }\n\n      // Add ordering and limit\n      sql += ' ORDER BY \"createdAt\" DESC';\n\n      if (params.count) {\n        paramCount++;\n        sql += ` LIMIT $${paramCount}`;\n        values.push(params.count);\n      }\n\n      elizaLogger.debug('Fetching memories:', {\n        roomId: params.roomId,\n        tableName: params.tableName,\n        unique: params.unique,\n        agentId: params.agentId,\n        timeRange:\n          params.start || params.end\n            ? {\n                start: params.start\n                  ? new Date(params.start).toISOString()\n                  : undefined,\n                end: params.end\n                  ? new Date(params.end).toISOString()\n                  : undefined,\n              }\n            : undefined,\n        limit: params.count,\n      });\n\n      const { rows } = await this.pool.query(sql, values);\n      return rows.map((row) => ({\n        ...row,\n        content:\n          typeof row.content === 'string'\n            ? JSON.parse(row.content)\n            : row.content,\n      }));\n    }, 'getMemories');\n  }\n\n  async getGoals(params: {\n    roomId: UUID;\n    userId?: UUID | null;\n    onlyInProgress?: boolean;\n    count?: number;\n  }): Promise<Goal[]> {\n    return this.withDatabase(async () => {\n      let sql = `SELECT * FROM goals WHERE \"roomId\" = $1`;\n      const values: any[] = [params.roomId];\n      let paramCount = 1;\n\n      if (params.userId) {\n        paramCount++;\n        sql += ` AND \"userId\" = $${paramCount}`;\n        values.push(params.userId);\n      }\n\n      if (params.onlyInProgress) {\n        sql += \" AND status = 'IN_PROGRESS'\";\n      }\n\n      if (params.count) {\n        paramCount++;\n        sql += ` LIMIT $${paramCount}`;\n        values.push(params.count);\n      }\n\n      const { rows } = await this.pool.query(sql, values);\n      return rows.map((row) => ({\n        ...row,\n        objectives:\n          typeof row.objectives === 'string'\n            ? JSON.parse(row.objectives)\n            : row.objectives,\n      }));\n    }, 'getGoals');\n  }\n\n  async updateGoal(goal: Goal): Promise<void> {\n    return this.withDatabase(async () => {\n      try {\n        await this.pool.query(\n          `UPDATE goals SET name = ${goal.name}, status = ${goal.status}, objectives = ${JSON.stringify(goal.objectives)} WHERE id = ${goal.id}`,\n        );\n      } catch (error) {\n        elizaLogger.error('Failed to update goal:', {\n          goalId: goal.id,\n          error: error instanceof Error ? error.message : String(error),\n          status: goal.status,\n        });\n        throw error;\n      }\n    }, 'updateGoal');\n  }\n\n  async createGoal(goal: Goal): Promise<void> {\n    return this.withDatabase(async () => {\n      await this.pool.query(\n        `INSERT INTO goals (id, \"roomId\", \"userId\", name, status, objectives)\n                VALUES ($1, $2, $3, $4, $5, $6)`,\n        [\n          goal.id ?? v4(),\n          goal.roomId,\n          goal.userId,\n          goal.name,\n          goal.status,\n          JSON.stringify(goal.objectives),\n        ],\n      );\n    }, 'createGoal');\n  }\n\n  async removeGoal(goalId: UUID): Promise<void> {\n    if (!goalId) {\n      throw new Error('Goal ID is required');\n    }\n\n    return this.withDatabase(async () => {\n      try {\n        const result = await this.pool.query(\n          'DELETE FROM goals WHERE id = $1 RETURNING id',\n          [goalId],\n        );\n\n        elizaLogger.debug('Goal removal attempt:', {\n          goalId,\n          removed: result?.rowCount ?? 0 > 0,\n        });\n      } catch (error) {\n        elizaLogger.error('Failed to remove goal:', {\n          goalId,\n          error: error instanceof Error ? error.message : String(error),\n        });\n        throw error;\n      }\n    }, 'removeGoal');\n  }\n\n  async createRoom(roomId?: UUID): Promise<UUID> {\n    return this.withDatabase(async () => {\n      const newRoomId = roomId || v4();\n      await this.pool.query('INSERT INTO rooms (id) VALUES ($1)', [newRoomId]);\n      return newRoomId as UUID;\n    }, 'createRoom');\n  }\n\n  async removeRoom(roomId: UUID): Promise<void> {\n    if (!roomId) {\n      throw new Error('Room ID is required');\n    }\n\n    return this.withDatabase(async () => {\n      const client = await this.pool.connect();\n      try {\n        await client.query('BEGIN');\n\n        // First check if room exists\n        const checkResult = await client.query(\n          'SELECT id FROM rooms WHERE id = $1',\n          [roomId],\n        );\n\n        if (checkResult.rowCount === 0) {\n          elizaLogger.warn('No room found to remove:', { roomId });\n          throw new Error(`Room not found: ${roomId}`);\n        }\n\n        // Remove related data first (if not using CASCADE)\n        await client.query('DELETE FROM memories WHERE \"roomId\" = $1', [\n          roomId,\n        ]);\n        await client.query('DELETE FROM participants WHERE \"roomId\" = $1', [\n          roomId,\n        ]);\n        await client.query('DELETE FROM goals WHERE \"roomId\" = $1', [roomId]);\n\n        // Finally remove the room\n        const result = await client.query(\n          'DELETE FROM rooms WHERE id = $1 RETURNING id',\n          [roomId],\n        );\n\n        await client.query('COMMIT');\n\n        elizaLogger.debug('Room and related data removed successfully:', {\n          roomId,\n          removed: result?.rowCount ?? 0,\n        });\n      } catch (error) {\n        await client.query('ROLLBACK');\n        elizaLogger.error('Failed to remove room:', {\n          roomId,\n          error: error instanceof Error ? error.message : String(error),\n        });\n        throw error;\n      } finally {\n        if (client) {\n          client.release();\n        }\n      }\n    }, 'removeRoom');\n  }\n\n  async createRelationship(params: {\n    userA: UUID;\n    userB: UUID;\n  }): Promise<boolean> {\n    // Input validation\n    if (!params.userA || !params.userB) {\n      throw new Error('userA and userB are required');\n    }\n\n    return this.withDatabase(async () => {\n      try {\n        const relationshipId = v4();\n        await this.pool.query(\n          `INSERT INTO relationships (id, \"userA\", \"userB\", \"userId\")\n                    VALUES ($1, $2, $3, $4)\n                    RETURNING id`,\n          [relationshipId, params.userA, params.userB, params.userA],\n        );\n\n        elizaLogger.debug('Relationship created successfully:', {\n          relationshipId,\n          userA: params.userA,\n          userB: params.userB,\n        });\n\n        return true;\n      } catch (error) {\n        // Check for unique constraint violation or other specific errors\n        if ((error as { code?: string }).code === '23505') {\n          // Unique violation\n          elizaLogger.warn('Relationship already exists:', {\n            userA: params.userA,\n            userB: params.userB,\n            error: error instanceof Error ? error.message : String(error),\n          });\n        } else {\n          elizaLogger.error('Failed to create relationship:', {\n            userA: params.userA,\n            userB: params.userB,\n            error: error instanceof Error ? error.message : String(error),\n          });\n        }\n        return false;\n      }\n    }, 'createRelationship');\n  }\n\n  async getRelationship(params: {\n    userA: UUID;\n    userB: UUID;\n  }): Promise<Relationship | null> {\n    if (!params.userA || !params.userB) {\n      throw new Error('userA and userB are required');\n    }\n\n    return this.withDatabase(async () => {\n      try {\n        const { rows } = await this.pool.query(\n          `SELECT * FROM relationships\n                    WHERE (\"userA\" = $1 AND \"userB\" = $2)\n                    OR (\"userA\" = $2 AND \"userB\" = $1)`,\n          [params.userA, params.userB],\n        );\n\n        if (rows.length > 0) {\n          elizaLogger.debug('Relationship found:', {\n            relationshipId: rows[0].id,\n            userA: params.userA,\n            userB: params.userB,\n          });\n          return rows[0];\n        }\n\n        elizaLogger.debug('No relationship found between users:', {\n          userA: params.userA,\n          userB: params.userB,\n        });\n        return null;\n      } catch (error) {\n        elizaLogger.error('Error fetching relationship:', {\n          userA: params.userA,\n          userB: params.userB,\n          error: error instanceof Error ? error.message : String(error),\n        });\n        throw error;\n      }\n    }, 'getRelationship');\n  }\n\n  async getRelationships(params: { userId: UUID }): Promise<Relationship[]> {\n    if (!params.userId) {\n      throw new Error('userId is required');\n    }\n\n    return this.withDatabase(async () => {\n      try {\n        const { rows } = await this.pool.query(\n          `SELECT * FROM relationships\n                    WHERE \"userA\" = $1 OR \"userB\" = $1\n                    ORDER BY \"createdAt\" DESC`, // Add ordering if you have this field\n          [params.userId],\n        );\n\n        elizaLogger.debug('Retrieved relationships:', {\n          userId: params.userId,\n          count: rows.length,\n        });\n\n        return rows;\n      } catch (error) {\n        elizaLogger.error('Failed to fetch relationships:', {\n          userId: params.userId,\n          error: error instanceof Error ? error.message : String(error),\n        });\n        throw error;\n      }\n    }, 'getRelationships');\n  }\n\n  async getCachedEmbeddings(opts: {\n    query_table_name: string;\n    query_threshold: number;\n    query_input: string;\n    query_field_name: string;\n    query_field_sub_name: string;\n    query_match_count: number;\n  }): Promise<{ embedding: number[]; levenshtein_score: number }[]> {\n    // Input validation\n    if (!opts.query_table_name) {\n      throw new Error('query_table_name is required');\n    }\n    if (!opts.query_input) {\n      throw new Error('query_input is required');\n    }\n    if (!opts.query_field_name) {\n      throw new Error('query_field_name is required');\n    }\n    if (!opts.query_field_sub_name) {\n      throw new Error('query_field_sub_name is required');\n    }\n    if (opts.query_match_count <= 0) {\n      throw new Error('query_match_count must be positive');\n    }\n\n    return this.withDatabase(async () => {\n      try {\n        elizaLogger.debug('Fetching cached embeddings:', {\n          tableName: opts.query_table_name,\n          fieldName: opts.query_field_name,\n          subFieldName: opts.query_field_sub_name,\n          matchCount: opts.query_match_count,\n          inputLength: opts.query_input.length,\n        });\n\n        const sql = `\n                    WITH content_text AS (\n                        SELECT\n                            embedding,\n                            COALESCE(\n                                SUBSTRING(content->$2->>$3 FROM 1 FOR 255),\n                                ''\n                            ) as content_text\n                        FROM memories\n                        WHERE type = $4\n                        AND content->$2->>$3 IS NOT NULL\n                    )\n                    SELECT\n                        embedding,\n                        levenshtein(SUBSTRING($1 FROM 1 FOR 255), content_text) as levenshtein_score\n                    FROM content_text\n                    WHERE levenshtein(SUBSTRING($1 FROM 1 FOR 255), content_text) <= $6\n                    ORDER BY levenshtein_score\n                    LIMIT $5\n                `;\n\n        const { rows } = await this.pool.query(sql, [\n          opts.query_input,\n          opts.query_field_name,\n          opts.query_field_sub_name,\n          opts.query_table_name,\n          opts.query_match_count,\n          opts.query_threshold,\n        ]);\n\n        elizaLogger.debug('Retrieved cached embeddings:', {\n          count: rows.length,\n          tableName: opts.query_table_name,\n          matchCount: opts.query_match_count,\n        });\n\n        return rows\n          .map(\n            (\n              row,\n            ): {\n              embedding: number[];\n              levenshtein_score: number;\n            } | null => {\n              if (!Array.isArray(row.embedding)) {\n                return null;\n              }\n              return {\n                embedding: row.embedding,\n                levenshtein_score: Number(row.levenshtein_score),\n              };\n            },\n          )\n          .filter(\n            (\n              row,\n            ): row is {\n              embedding: number[];\n              levenshtein_score: number;\n            } => row !== null,\n          );\n      } catch (error) {\n        elizaLogger.error('Error in getCachedEmbeddings:', {\n          error: error instanceof Error ? error.message : String(error),\n          tableName: opts.query_table_name,\n          fieldName: opts.query_field_name,\n        });\n        throw error;\n      }\n    }, 'getCachedEmbeddings');\n  }\n\n  async log(params: {\n    body: { [key: string]: unknown };\n    userId: UUID;\n    roomId: UUID;\n    type: string;\n  }): Promise<void> {\n    // Input validation\n    if (!params.userId) {\n      throw new Error('userId is required');\n    }\n    if (!params.roomId) {\n      throw new Error('roomId is required');\n    }\n    if (!params.type) {\n      throw new Error('type is required');\n    }\n    if (!params.body || typeof params.body !== 'object') {\n      throw new Error('body must be a valid object');\n    }\n\n    return this.withDatabase(async () => {\n      try {\n        const logId = v4(); // Generate ID for tracking\n        await this.pool.query(\n          `INSERT INTO logs (\n                        id,\n                        body,\n                        \"userId\",\n                        \"roomId\",\n                        type,\n                        \"createdAt\"\n                    ) VALUES ($1, $2, $3, $4, $5, NOW())\n                    RETURNING id`,\n          [\n            logId,\n            JSON.stringify(params.body), // Ensure body is stringified\n            params.userId,\n            params.roomId,\n            params.type,\n          ],\n        );\n\n        elizaLogger.debug('Log entry created:', {\n          logId,\n          type: params.type,\n          roomId: params.roomId,\n          userId: params.userId,\n          bodyKeys: Object.keys(params.body),\n        });\n      } catch (error) {\n        elizaLogger.error('Failed to create log entry:', {\n          error: error instanceof Error ? error.message : String(error),\n          type: params.type,\n          roomId: params.roomId,\n          userId: params.userId,\n        });\n        throw error;\n      }\n    }, 'log');\n  }\n\n  async searchMemoriesByEmbedding(\n    embedding: number[],\n    params: {\n      match_threshold?: number;\n      count?: number;\n      agentId?: UUID;\n      roomId?: UUID;\n      unique?: boolean;\n      tableName: string;\n    },\n  ): Promise<Memory[]> {\n    return this.withDatabase(async () => {\n      elizaLogger.debug('Incoming vector:', {\n        length: embedding.length,\n        sample: embedding.slice(0, 5),\n        isArray: Array.isArray(embedding),\n        allNumbers: embedding.every((n) => typeof n === 'number'),\n      });\n\n      // Validate embedding dimension\n      if (embedding.length !== getEmbeddingConfig().dimensions) {\n        throw new Error(\n          `Invalid embedding dimension: expected ${getEmbeddingConfig().dimensions}, got ${embedding.length}`,\n        );\n      }\n\n      // Ensure vector is properly formatted\n      const cleanVector = embedding.map((n) => {\n        if (!Number.isFinite(n)) {\n          return 0;\n        }\n        // Limit precision to avoid floating point issues\n        return Number(n.toFixed(6));\n      });\n\n      // Format for Postgres pgvector\n      const vectorStr = `[${cleanVector.join(',')}]`;\n\n      elizaLogger.debug('Vector debug:', {\n        originalLength: embedding.length,\n        cleanLength: cleanVector.length,\n        sampleStr: vectorStr.slice(0, 100),\n      });\n\n      let sql = `\n                SELECT *,\n                1 - (embedding <-> $1::vector(${getEmbeddingConfig().dimensions})) as similarity\n                FROM memories\n                WHERE type = $2\n            `;\n\n      const values: any[] = [vectorStr, params.tableName];\n\n      // Log the query for debugging\n      elizaLogger.debug('Query debug:', {\n        sql: sql.slice(0, 200),\n        paramTypes: values.map((v) => typeof v),\n        vectorStrLength: vectorStr.length,\n      });\n\n      let paramCount = 2;\n\n      if (params.unique) {\n        sql += ` AND \"unique\" = true`;\n      }\n\n      if (params.agentId) {\n        paramCount++;\n        sql += ` AND \"agentId\" = $${paramCount}`;\n        values.push(params.agentId);\n      }\n\n      if (params.roomId) {\n        paramCount++;\n        sql += ` AND \"roomId\" = $${paramCount}::uuid`;\n        values.push(params.roomId);\n      }\n\n      if (params.match_threshold) {\n        paramCount++;\n        sql += ` AND 1 - (embedding <-> $1::vector) >= $${paramCount}`;\n        values.push(params.match_threshold);\n      }\n\n      sql += ` ORDER BY embedding <-> $1::vector`;\n\n      if (params.count) {\n        paramCount++;\n        sql += ` LIMIT $${paramCount}`;\n        values.push(params.count);\n      }\n\n      const { rows } = await this.pool.query(sql, values);\n      return rows.map((row) => ({\n        ...row,\n        content:\n          typeof row.content === 'string'\n            ? JSON.parse(row.content)\n            : row.content,\n        similarity: row.similarity,\n      }));\n    }, 'searchMemoriesByEmbedding');\n  }\n\n  async addParticipant(userId: UUID, roomId: UUID): Promise<boolean> {\n    return this.withDatabase(async () => {\n      try {\n        await this.pool.query(\n          `INSERT INTO participants (id, \"userId\", \"roomId\")\n                    VALUES ($1, $2, $3)`,\n          [v4(), userId, roomId],\n        );\n        return true;\n      } catch (error) {\n        console.log('Error adding participant', error);\n        return false;\n      }\n    }, 'addParticpant');\n  }\n\n  async removeParticipant(userId: UUID, roomId: UUID): Promise<boolean> {\n    return this.withDatabase(async () => {\n      try {\n        await this.pool.query(\n          `DELETE FROM participants WHERE \"userId\" = $1 AND \"roomId\" = $2`,\n          [userId, roomId],\n        );\n        return true;\n      } catch (error) {\n        console.log('Error removing participant', error);\n        return false;\n      }\n    }, 'removeParticipant');\n  }\n\n  async updateGoalStatus(params: {\n    goalId: UUID;\n    status: GoalStatus;\n  }): Promise<void> {\n    return this.withDatabase(async () => {\n      await this.pool.query('UPDATE goals SET status = $1 WHERE id = $2', [\n        params.status,\n        params.goalId,\n      ]);\n    }, 'updateGoalStatus');\n  }\n\n  async removeMemory(memoryId: UUID, tableName: string): Promise<void> {\n    return this.withDatabase(async () => {\n      await this.pool.query(\n        'DELETE FROM memories WHERE type = $1 AND id = $2',\n        [tableName, memoryId],\n      );\n    }, 'removeMemory');\n  }\n\n  async removeAllMemories(roomId: UUID, tableName: string): Promise<void> {\n    return this.withDatabase(async () => {\n      await this.pool.query(\n        `DELETE FROM memories WHERE type = $1 AND \"roomId\" = $2`,\n        [tableName, roomId],\n      );\n    }, 'removeAllMemories');\n  }\n\n  async countMemories(\n    roomId: UUID,\n    unique = true,\n    tableName = '',\n  ): Promise<number> {\n    if (!tableName) {\n      throw new Error('tableName is required');\n    }\n\n    return this.withDatabase(async () => {\n      let sql = `SELECT COUNT(*) as count FROM memories WHERE type = $1 AND \"roomId\" = $2`;\n      if (unique) {\n        sql += ` AND \"unique\" = true`;\n      }\n\n      const { rows } = await this.pool.query(sql, [tableName, roomId]);\n      return Number.parseInt(rows[0].count);\n    }, 'countMemories');\n  }\n\n  async removeAllGoals(roomId: UUID): Promise<void> {\n    return this.withDatabase(async () => {\n      await this.pool.query(`DELETE FROM goals WHERE \"roomId\" = $1`, [roomId]);\n    }, 'removeAllGoals');\n  }\n\n  async getRoomsForParticipant(userId: UUID): Promise<UUID[]> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        `SELECT \"roomId\" FROM participants WHERE \"userId\" = $1`,\n        [userId],\n      );\n      return rows.map((row) => row.roomId);\n    }, 'getRoomsForParticipant');\n  }\n\n  async getRoomsForParticipants(userIds: UUID[]): Promise<UUID[]> {\n    return this.withDatabase(async () => {\n      const placeholders = userIds.map((_, i) => `$${i + 1}`).join(', ');\n      const { rows } = await this.pool.query(\n        `SELECT DISTINCT \"roomId\" FROM participants WHERE \"userId\" IN (${placeholders})`,\n        userIds,\n      );\n      return rows.map((row) => row.roomId);\n    }, 'getRoomsForParticipants');\n  }\n\n  async getActorDetails(params: { roomId: string }): Promise<Actor[]> {\n    if (!params.roomId) {\n      throw new Error('roomId is required');\n    }\n\n    return this.withDatabase(async () => {\n      try {\n        const sql = `\n                    SELECT\n                        a.id,\n                        a.name,\n                        a.username,\n                        a.\"avatarUrl\",\n                        COALESCE(a.details::jsonb, '{}'::jsonb) as details\n                    FROM participants p\n                    LEFT JOIN accounts a ON p.\"userId\" = a.id\n                    WHERE p.\"roomId\" = $1\n                    ORDER BY a.name\n                `;\n\n        const result = await this.pool.query<Actor>(sql, [params.roomId]);\n\n        elizaLogger.debug('Retrieved actor details:', {\n          roomId: params.roomId,\n          actorCount: result.rows.length,\n        });\n\n        return result.rows.map((row) => {\n          try {\n            return {\n              ...row,\n              details:\n                typeof row.details === 'string'\n                  ? JSON.parse(row.details)\n                  : row.details,\n            };\n          } catch (parseError) {\n            elizaLogger.warn('Failed to parse actor details:', {\n              actorId: row.id,\n              error:\n                parseError instanceof Error\n                  ? parseError.message\n                  : String(parseError),\n            });\n            return {\n              ...row,\n              details: {}, // Fallback to empty object if parsing fails\n            };\n          }\n        });\n      } catch (error) {\n        elizaLogger.error('Failed to fetch actor details:', {\n          roomId: params.roomId,\n          error: error instanceof Error ? error.message : String(error),\n        });\n        throw new Error(\n          `Failed to fetch actor details: ${error instanceof Error ? error.message : String(error)}`,\n        );\n      }\n    }, 'getActorDetails');\n  }\n\n  async getCache(params: {\n    key: string;\n    agentId: UUID;\n  }): Promise<string | undefined> {\n    return this.withDatabase(async () => {\n      try {\n        const sql = `SELECT \"value\"::TEXT FROM cache WHERE \"key\" = $1 AND \"agentId\" = $2`;\n        const { rows } = await this.query<{ value: string }>(sql, [\n          params.key,\n          params.agentId,\n        ]);\n        return rows[0]?.value ?? undefined;\n      } catch (error) {\n        elizaLogger.error('Error fetching cache', {\n          error: error instanceof Error ? error.message : String(error),\n          key: params.key,\n          agentId: params.agentId,\n        });\n        return undefined;\n      }\n    }, 'getCache');\n  }\n\n  async setCache(params: {\n    key: string;\n    agentId: UUID;\n    value: string;\n  }): Promise<boolean> {\n    return this.withDatabase(async () => {\n      try {\n        const client = await this.pool.connect();\n        try {\n          await client.query('BEGIN');\n          await client.query(\n            `INSERT INTO cache (\"key\", \"agentId\", \"value\", \"createdAt\")\n                         VALUES ($1, $2, $3, CURRENT_TIMESTAMP)\n                         ON CONFLICT (\"key\", \"agentId\")\n                         DO UPDATE SET \"value\" = EXCLUDED.value, \"createdAt\" = CURRENT_TIMESTAMP`,\n            [params.key, params.agentId, params.value],\n          );\n          await client.query('COMMIT');\n          return true;\n        } catch (error) {\n          await client.query('ROLLBACK');\n          elizaLogger.error('Error setting cache', {\n            error: error instanceof Error ? error.message : String(error),\n            key: params.key,\n            agentId: params.agentId,\n          });\n          return false;\n        } finally {\n          if (client) {\n            client.release();\n          }\n        }\n      } catch (error) {\n        elizaLogger.error('Database connection error in setCache', error);\n        return false;\n      }\n    }, 'setCache');\n  }\n\n  async deleteCache(params: {\n    key: string;\n    agentId: UUID;\n  }): Promise<boolean> {\n    return this.withDatabase(async () => {\n      try {\n        const client = await this.pool.connect();\n        try {\n          await client.query('BEGIN');\n          await client.query(\n            `DELETE FROM cache WHERE \"key\" = $1 AND \"agentId\" = $2`,\n            [params.key, params.agentId],\n          );\n          await client.query('COMMIT');\n          return true;\n        } catch (error) {\n          await client.query('ROLLBACK');\n          elizaLogger.error('Error deleting cache', {\n            error: error instanceof Error ? error.message : String(error),\n            key: params.key,\n            agentId: params.agentId,\n          });\n          return false;\n        } finally {\n          client.release();\n        }\n      } catch (error) {\n        elizaLogger.error('Database connection error in deleteCache', error);\n        return false;\n      }\n    }, 'deleteCache');\n  }\n\n  async getKnowledge(params: {\n    id?: UUID;\n    agentId: UUID;\n    limit?: number;\n    query?: string;\n  }): Promise<RAGKnowledgeItem[]> {\n    return this.withDatabase(async () => {\n      let sql = `SELECT * FROM knowledge WHERE (\"agentId\" = $1 OR \"isShared\" = true)`;\n      const queryParams: any[] = [params.agentId];\n      let paramCount = 1;\n\n      if (params.id) {\n        paramCount++;\n        sql += ` AND id = $${paramCount}`;\n        queryParams.push(params.id);\n      }\n\n      if (params.limit) {\n        paramCount++;\n        sql += ` LIMIT $${paramCount}`;\n        queryParams.push(params.limit);\n      }\n\n      const { rows } = await this.pool.query(sql, queryParams);\n\n      return rows.map((row) => ({\n        id: row.id,\n        agentId: row.agentId,\n        content:\n          typeof row.content === 'string'\n            ? JSON.parse(row.content)\n            : row.content,\n        embedding: row.embedding ? new Float32Array(row.embedding) : undefined,\n        createdAt: row.createdAt.getTime(),\n      }));\n    }, 'getKnowledge');\n  }\n\n  async searchKnowledge(params: {\n    agentId: UUID;\n    embedding: Float32Array;\n    match_threshold: number;\n    match_count: number;\n    searchText?: string;\n  }): Promise<RAGKnowledgeItem[]> {\n    return this.withDatabase(async () => {\n      const cacheKey = `embedding_${params.agentId}_${params.searchText}`;\n      const cachedResult = await this.getCache({\n        key: cacheKey,\n        agentId: params.agentId,\n      });\n\n      if (cachedResult) {\n        return JSON.parse(cachedResult);\n      }\n\n      const vectorStr = `[${Array.from(params.embedding).join(',')}]`;\n\n      const sql = `\n                WITH vector_scores AS (\n                    SELECT id,\n                        1 - (embedding <-> $1::vector) as vector_score\n                    FROM knowledge\n                    WHERE (\"agentId\" IS NULL AND \"isShared\" = true) OR \"agentId\" = $2\n                    AND embedding IS NOT NULL\n                ),\n                keyword_matches AS (\n                    SELECT id,\n                    CASE\n                        WHEN content->>'text' ILIKE $3 THEN 3.0\n                        ELSE 1.0\n                    END *\n                    CASE\n                        WHEN (content->'metadata'->>'isChunk')::boolean = true THEN 1.5\n                        WHEN (content->'metadata'->>'isMain')::boolean = true THEN 1.2\n                        ELSE 1.0\n                    END as keyword_score\n                    FROM knowledge\n                    WHERE (\"agentId\" IS NULL AND \"isShared\" = true) OR \"agentId\" = $2\n                )\n                SELECT k.*,\n                    v.vector_score,\n                    kw.keyword_score,\n                    (v.vector_score * kw.keyword_score) as combined_score\n                FROM knowledge k\n                JOIN vector_scores v ON k.id = v.id\n                LEFT JOIN keyword_matches kw ON k.id = kw.id\n                WHERE (\"agentId\" IS NULL AND \"isShared\" = true) OR k.\"agentId\" = $2\n                AND (\n                    v.vector_score >= $4\n                    OR (kw.keyword_score > 1.0 AND v.vector_score >= 0.3)\n                )\n                ORDER BY combined_score DESC\n                LIMIT $5\n            `;\n\n      const { rows } = await this.pool.query(sql, [\n        vectorStr,\n        params.agentId,\n        `%${params.searchText || ''}%`,\n        params.match_threshold,\n        params.match_count,\n      ]);\n\n      const results = rows.map((row) => ({\n        id: row.id,\n        agentId: row.agentId,\n        content:\n          typeof row.content === 'string'\n            ? JSON.parse(row.content)\n            : row.content,\n        embedding: row.embedding ? new Float32Array(row.embedding) : undefined,\n        createdAt: row.createdAt.getTime(),\n        similarity: row.combined_score,\n      }));\n\n      await this.setCache({\n        key: cacheKey,\n        agentId: params.agentId,\n        value: JSON.stringify(results),\n      });\n\n      return results;\n    }, 'searchKnowledge');\n  }\n\n  async createKnowledge(knowledge: RAGKnowledgeItem): Promise<void> {\n    return this.withDatabase(async () => {\n      const client = await this.pool.connect();\n      try {\n        await client.query('BEGIN');\n\n        const metadata = knowledge.content.metadata || {};\n        const vectorStr = knowledge.embedding\n          ? `[${Array.from(knowledge.embedding).join(',')}]`\n          : null;\n\n        // If this is a chunk, use createKnowledgeChunk\n        if (metadata.isChunk && metadata.originalId) {\n          await this.createKnowledgeChunk({\n            id: knowledge.id,\n            originalId: metadata.originalId,\n            agentId: metadata.isShared ? null : knowledge.agentId,\n            content: knowledge.content,\n            embedding: knowledge.embedding,\n            chunkIndex: metadata.chunkIndex || 0,\n            isShared: metadata.isShared || false,\n            createdAt: knowledge.createdAt || Date.now(),\n          });\n        } else {\n          // This is a main knowledge item\n          await client.query(\n            `\n                        INSERT INTO knowledge (\n                            id, \"agentId\", content, embedding, \"createdAt\",\n                            \"isMain\", \"originalId\", \"chunkIndex\", \"isShared\"\n                        ) VALUES ($1, $2, $3, $4, to_timestamp($5/1000.0), $6, $7, $8, $9)\n                        ON CONFLICT (id) DO NOTHING\n                    `,\n            [\n              knowledge.id,\n              metadata.isShared ? null : knowledge.agentId,\n              knowledge.content,\n              vectorStr,\n              knowledge.createdAt || Date.now(),\n              true,\n              null,\n              null,\n              metadata.isShared || false,\n            ],\n          );\n        }\n\n        await client.query('COMMIT');\n      } catch (error) {\n        await client.query('ROLLBACK');\n        throw error;\n      } finally {\n        client.release();\n      }\n    }, 'createKnowledge');\n  }\n\n  async removeKnowledge(id: UUID): Promise<void> {\n    return this.withDatabase(async () => {\n      const client = await this.pool.connect();\n      try {\n        await client.query('BEGIN');\n\n        // Check if this is a pattern-based chunk deletion (e.g., \"id-chunk-*\")\n        if (typeof id === 'string' && id.includes('-chunk-*')) {\n          const mainId = id.split('-chunk-')[0];\n          // Delete chunks for this main ID\n          await client.query('DELETE FROM knowledge WHERE \"originalId\" = $1', [\n            mainId,\n          ]);\n        } else {\n          // First delete all chunks associated with this knowledge item\n          await client.query('DELETE FROM knowledge WHERE \"originalId\" = $1', [\n            id,\n          ]);\n          // Then delete the main knowledge item\n          await client.query('DELETE FROM knowledge WHERE id = $1', [id]);\n        }\n\n        await client.query('COMMIT');\n      } catch (error) {\n        await client.query('ROLLBACK');\n        elizaLogger.error('Error removing knowledge', {\n          error: error instanceof Error ? error.message : String(error),\n          id,\n        });\n        throw error;\n      } finally {\n        client.release();\n      }\n    }, 'removeKnowledge');\n  }\n\n  async clearKnowledge(agentId: UUID, shared?: boolean): Promise<void> {\n    return this.withDatabase(async () => {\n      const sql = shared\n        ? 'DELETE FROM knowledge WHERE (\"agentId\" = $1 OR \"isShared\" = true)'\n        : 'DELETE FROM knowledge WHERE \"agentId\" = $1';\n\n      await this.pool.query(sql, [agentId]);\n    }, 'clearKnowledge');\n  }\n\n  private async createKnowledgeChunk(params: {\n    id: UUID;\n    originalId: UUID;\n    agentId: UUID | null;\n    content: any;\n    embedding: Float32Array | undefined | null;\n    chunkIndex: number;\n    isShared: boolean;\n    createdAt: number;\n  }): Promise<void> {\n    const vectorStr = params.embedding\n      ? `[${Array.from(params.embedding).join(',')}]`\n      : null;\n\n    // Store the pattern-based ID in the content metadata for compatibility\n    const patternId = `${params.originalId}-chunk-${params.chunkIndex}`;\n    const contentWithPatternId = {\n      ...params.content,\n      metadata: {\n        ...params.content.metadata,\n        patternId,\n      },\n    };\n\n    await this.pool.query(\n      `\n            INSERT INTO knowledge (\n                id, \"agentId\", content, embedding, \"createdAt\",\n                \"isMain\", \"originalId\", \"chunkIndex\", \"isShared\"\n            ) VALUES ($1, $2, $3, $4, to_timestamp($5/1000.0), $6, $7, $8, $9)\n            ON CONFLICT (id) DO NOTHING\n        `,\n      [\n        v4(), // Generate a proper UUID for PostgreSQL\n        params.agentId,\n        contentWithPatternId, // Store the pattern ID in metadata\n        vectorStr,\n        params.createdAt,\n        false,\n        params.originalId,\n        params.chunkIndex,\n        params.isShared,\n      ],\n    );\n  }\n\n  async getMemoriesByIds(ids: UUID[], tableName: string): Promise<Memory[]> {\n    return this.withDatabase(async () => {\n      const { rows } = await this.pool.query(\n        `SELECT * FROM memories WHERE type = $1 AND id = ANY($2) ORDER BY \"createdAt\" DESC`,\n        [tableName, ids],\n      );\n      return rows.map((row) => ({\n        ...row,\n        content:\n          typeof row.content === 'string'\n            ? JSON.parse(row.content)\n            : row.content,\n      }));\n    }, 'getMemoriesByIds');\n  }\n}\n\nexport default PostgresDatabaseAdapter;\n","import { type Character, type IAgentRuntime, elizaLogger } from '@elizaos/core';\nimport { Elysia } from 'elysia';\nimport { MessageController } from '../eliza/message-controller';\nimport { MessageService } from '../eliza/message-service';\n\nexport class ApiClient {\n  public app: Elysia;\n  private agents: Map<string, IAgentRuntime>;\n  public server: ReturnType<Elysia['listen']> | null = null;\n  public startAgent: ((character: Character) => Promise<IAgentRuntime>) | null =\n    null;\n  public loadCharacterTryPath: ((path: string) => Promise<Character>) | null =\n    null;\n  public jsonToCharacter: ((json: unknown) => Character) | null = null;\n  private isInitialized = false;\n  private messageController: MessageController;\n\n  constructor() {\n    this.agents = new Map();\n    this.app = new Elysia()\n      .onRequest(({ set }) => {\n        // Add CORS headers to all responses\n        set.headers['Access-Control-Allow-Origin'] = '*';\n        set.headers['Access-Control-Allow-Methods'] =\n          'GET, POST, PUT, DELETE, OPTIONS';\n        set.headers['Access-Control-Allow-Headers'] =\n          'Content-Type, Authorization';\n      })\n      .options('*', () => new Response(null, { status: 204 }));\n\n    const messageService = new MessageService(this.agents);\n    this.messageController = new MessageController(messageService);\n    this.setupRoutes();\n\n    // Set up lifecycle hooks\n    this.app.onStart(({ server }) => {\n      elizaLogger.info(`[ApiClient] Running at ${server?.url}`);\n      if (!this.isInitialized) {\n        this.isInitialized = true;\n      }\n    });\n\n    this.app.onStop(async () => {\n      elizaLogger.info('[ApiClient] Stopping...');\n      try {\n        // Close all agent connections\n        this.agents.clear();\n        this.isInitialized = false;\n        elizaLogger.info('[ApiClient] Stopped successfully');\n      } catch (error) {\n        elizaLogger.error('[ApiClient] Error during shutdown:', error);\n        throw error;\n      }\n    });\n  }\n\n  private setupRoutes() {\n    this.messageController.setupRoutes(this.app);\n  }\n\n  // agent/src/index.ts:startAgent calls this\n  public registerAgent(runtime: IAgentRuntime) {\n    this.agents.set(runtime.agentId, runtime);\n  }\n\n  public unregisterAgent(runtime: IAgentRuntime) {\n    this.agents.delete(runtime.agentId);\n  }\n\n  public start(port: number) {\n    elizaLogger.info(`[ApiClient] Starting server on port ${port}`);\n    this.server = this.app.listen(port, () => {\n      elizaLogger.success(\n        `REST API bound to 0.0.0.0:${port}. If running locally, access it at http://localhost:${port}.`,\n      );\n    });\n  }\n\n  public async stop() {\n    elizaLogger.info('[ApiClient] Stop method called');\n    if (this.server) {\n      elizaLogger.info('[ApiClient] Closing server...');\n      // @ts-ignore - Elysia's server type doesn't include close method, but it exists at runtime\n      this.server.close(() => {\n        elizaLogger.info('[ApiClient] Server closed successfully');\n      });\n    } else {\n      elizaLogger.info('[ApiClient] No server to stop');\n    }\n  }\n}\n","import { elizaLogger } from '@elizaos/core';\nimport { type Elysia, t } from 'elysia';\nimport { errorResponseSchema } from './error-response';\nimport { messageRequestSchema } from './message-request';\nimport { messageResponseSchema } from './message-response';\nimport type { MessageService } from './message-service';\n\nexport class MessageController {\n  private readonly messageService: MessageService;\n\n  constructor(messageService: MessageService) {\n    this.messageService = messageService;\n  }\n\n  public setupRoutes(app: Elysia): void {\n    app.post(\n      '/message',\n      async ({ body }) => {\n        try {\n          elizaLogger.info(\n            `[MessageController] Message endpoint called for agent ${body.agentId}`,\n          );\n          return await this.messageService.handleMessage(body);\n        } catch (error) {\n          elizaLogger.error(\n            '[MessageController] Error processing message:',\n            error,\n          );\n          return Response.json(\n            {\n              error:\n                error instanceof Error\n                  ? error.message\n                  : 'Unknown error occurred',\n            },\n            { status: 500 },\n          );\n        }\n      },\n      {\n        body: messageRequestSchema,\n        response: {\n          200: t.Array(messageResponseSchema),\n          500: errorResponseSchema,\n        },\n      },\n    );\n  }\n}\n","import { t } from 'elysia';\n\nexport const errorResponseSchema = t.Object({\n  error: t.String(),\n});\n\nexport type ErrorResponse = typeof errorResponseSchema.static;\n","import { t } from 'elysia';\n\nexport const messageRequestSchema = t.Object({\n  userId: t.String(),\n  agentId: t.String(),\n  text: t.String(),\n  roomId: t.Optional(t.String()),\n  userName: t.Optional(t.String()),\n  name: t.Optional(t.String()),\n});\n\nexport type MessageRequest = typeof messageRequestSchema.static;\n","import type {} from '@elizaos/core';\nimport { t } from 'elysia';\n\nexport const messageResponseSchema = t.Object({\n  text: t.String(),\n  action: t.Optional(t.String()),\n  source: t.Optional(t.String()),\n  url: t.Optional(t.String()),\n  inReplyTo: t.Optional(t.String()),\n  attachments: t.Optional(t.Array(t.File())),\n  metadata: t.Optional(t.Record(t.String(), t.Any())),\n});\n\nexport type MessageResponse = typeof messageResponseSchema.static;\n","import {\n  type Content,\n  type IAgentRuntime,\n  type Memory,\n  ModelClass,\n  type State,\n  composeContext,\n  elizaLogger,\n  generateMessageResponse,\n  stringToUuid,\n} from '@elizaos/core';\nimport { messageHandlerTemplate } from './base-templates';\nimport type { MessageRequest } from './message-request';\n\nexport class MessageService {\n  private readonly agents: Map<string, IAgentRuntime>;\n\n  constructor(agents: Map<string, IAgentRuntime>) {\n    this.agents = agents;\n  }\n\n  public async handleMessage(request: MessageRequest): Promise<Response> {\n    try {\n      elizaLogger.info('[MessageService] Starting message handling');\n      const { agentId } = request;\n\n      const agent = this.agents.get(agentId);\n      if (!agent) {\n        elizaLogger.error(\n          `[MessageService] Agent not found for ID/name: ${agentId}`,\n        );\n        return Response.json({ error: 'Agent not found' }, { status: 404 });\n      }\n\n      const roomId = stringToUuid(request.roomId ?? `default-room-${agentId}`);\n      const userId =\n        request.userId as `${string}-${string}-${string}-${string}-${string}`;\n\n      await agent.ensureConnection(\n        userId,\n        roomId,\n        request.userName,\n        request.name,\n        'direct',\n      );\n\n      const text = request.text;\n      if (!text) {\n        return Response.json([]);\n      }\n\n      const messageId = stringToUuid(Date.now().toString());\n      const content: Content = {\n        text,\n        attachments: [],\n        source: 'direct',\n        inReplyTo: undefined,\n      };\n      const userMessage = {\n        content,\n        userId,\n        roomId,\n        agentId: agent.agentId,\n      };\n      const memory: Memory = {\n        id: stringToUuid(`${messageId}-${userId}`),\n        ...userMessage,\n        agentId: agent.agentId,\n        userId,\n        roomId,\n        content,\n      };\n      await agent.messageManager.addEmbeddingToMemory(memory);\n      await agent.messageManager.createMemory(memory);\n\n      // Fetch relevant knowledge using the message embedding\n      let knowledgeContent = '';\n      if (memory.embedding) {\n        try {\n          const relevantKnowledge = await agent.databaseAdapter.searchKnowledge(\n            {\n              agentId: agent.agentId,\n              embedding:\n                memory.embedding instanceof Float32Array\n                  ? memory.embedding\n                  : new Float32Array(memory.embedding),\n              match_threshold: 0.7,\n              match_count: 5,\n              searchText: text,\n            },\n          );\n\n          if (relevantKnowledge.length > 0) {\n            knowledgeContent = relevantKnowledge\n              .map((k) => {\n                const metadata = k.content.metadata || {};\n                return `- ${k.content.text}\nType: ${metadata.type || 'unknown'}\nConfidence: ${metadata.confidence || 'unknown'}\nSimilarity: ${(k.similarity || 0).toFixed(2)}\nTopics: ${Array.isArray(metadata.topics) ? metadata.topics.join(', ') : 'none'}\nImpact Score: ${metadata.impactScore || 'unknown'}`;\n              })\n              .join('\\n\\n');\n          }\n        } catch (error) {\n          elizaLogger.error(\n            '[MessageService] Error fetching knowledge:',\n            error,\n          );\n        }\n      }\n\n      let state: State | undefined;\n      try {\n        state = await agent.composeState(userMessage, {\n          agentName: agent.character.name,\n        });\n\n        // Add knowledge to state after composition\n        if (state && knowledgeContent) {\n          state.knowledge = knowledgeContent;\n          elizaLogger.debug('[MessageService] Added knowledge to state:', {\n            knowledgeLength: knowledgeContent.length,\n            stateHasKnowledge: 'knowledge' in state,\n          });\n        }\n      } catch (error) {\n        elizaLogger.error('[MessageService] Error composing state:', error);\n        return Response.json(\n          { error: 'Failed to compose state' },\n          { status: 500 },\n        );\n      }\n\n      if (!state) {\n        return Response.json(\n          { error: 'Failed to compose state' },\n          { status: 500 },\n        );\n      }\n\n      const context = composeContext({\n        state,\n        template: messageHandlerTemplate,\n        templatingEngine: 'handlebars',\n      });\n\n      const response = await generateMessageResponse({\n        runtime: agent,\n        context,\n        modelClass: ModelClass.SMALL,\n      });\n\n      if (!response) {\n        return Response.json(\n          { error: 'No response generated' },\n          { status: 500 },\n        );\n      }\n\n      // save response to memory\n      const responseMessage: Memory = {\n        id: stringToUuid(`${messageId}-${agent.agentId}`),\n        ...userMessage,\n        userId: agent.agentId,\n        content: response,\n        createdAt: Date.now(),\n      };\n\n      // Generate embedding for the response\n      await agent.messageManager.addEmbeddingToMemory(responseMessage);\n      await agent.messageManager.createMemory(responseMessage);\n\n      state = await agent.updateRecentMessageState(state);\n\n      let message = null as Content | null;\n      await agent.processActions(\n        memory,\n        [responseMessage],\n        state,\n        async (newMessages) => {\n          message = newMessages;\n          return [memory];\n        },\n      );\n\n      await agent.evaluate(memory, state);\n\n      const responseContent = message ? [message] : [response];\n      return Response.json(responseContent);\n    } catch (error) {\n      elizaLogger.error('[MessageService] Error in handleMessage:', error);\n      return Response.json(\n        {\n          error:\n            error instanceof Error ? error.message : 'Unknown error occurred',\n        },\n        { status: 500 },\n      );\n    }\n  }\n}\n","import { messageCompletionFooter } from '@elizaos/core';\n\nexport const messageHandlerTemplate =\n  // {{goals}}\n  // \"# Action Examples\" is already included\n  `{{actionExamples}}\n(Action examples are for reference only. Do not use the information from them in your response.)\n\n# Knowledge\n{{knowledge}}\n\n# Task: Generate dialog and actions for the character {{agentName}}.\nAbout {{agentName}}:\n{{bio}}\n{{lore}}\n\n{{providers}}\n\n{{messageDirections}}\n\n{{recentMessages}}\n\n{{actions}}\n\n# Instructions: Write the next message for {{agentName}}.\n${messageCompletionFooter}`;\n\nexport const hyperfiHandlerTemplate = `{{actionExamples}}\n(Action examples are for reference only. Do not use the information from them in your response.)\n\n# Knowledge\n{{knowledge}}\n\n# Task: Generate dialog and actions for the character {{agentName}}.\nAbout {{agentName}}:\n{{bio}}\n{{lore}}\n\n{{providers}}\n\n{{attachments}}\n\n# Capabilities\nNote that {{agentName}} is capable of reading/seeing/hearing various forms of media, including images, videos, audio, plaintext and PDFs. Recent attachments have been included above under the \"Attachments\" section.\n\n{{messageDirections}}\n\n{{recentMessages}}\n\n{{actions}}\n\n# Instructions: Write the next message for {{agentName}}.\n\nResponse format should be formatted in a JSON block like this:\n\\`\\`\\`json\n{ \"lookAt\": \"{{nearby}}\" or null, \"emote\": \"{{emotes}}\" or null, \"say\": \"string\" or null, \"actions\": (array of strings) or null }\n\\`\\`\\`\n`;\n","import {\n  CacheManager,\n  type Character,\n  DbCacheAdapter,\n  type IDatabaseCacheAdapter,\n} from '@elizaos/core';\n\nexport function initializeDbCache(\n  character: Character,\n  db: IDatabaseCacheAdapter,\n) {\n  if (!character.id) {\n    throw new Error('Character ID is required');\n  }\n  const cache = new CacheManager(new DbCacheAdapter(db, character.id));\n  return cache;\n}\n","import type { Elysia } from 'elysia';\n\n/**\n * Configures all custom API routes\n */\nexport function configureApiRoutes(app: Elysia): Elysia {\n  // Add yield routes\n  return app;\n}\n","import fs from 'node:fs';\nimport path from 'node:path';\nimport {\n  type Character,\n  ModelProviderName,\n  settings,\n  validateCharacterConfig,\n} from '@elizaos/core';\nimport yargs from 'yargs';\n\nexport function parseArguments(): {\n  character?: string;\n  characters?: string;\n} {\n  try {\n    return yargs(process.argv.slice(2))\n      .option('character', {\n        type: 'string',\n        description: 'Path to the character JSON file',\n      })\n      .option('characters', {\n        type: 'string',\n        description: 'Comma separated list of paths to character JSON files',\n      })\n      .parseSync();\n  } catch (error) {\n    console.error('Error parsing arguments:', error);\n    return {};\n  }\n}\n\nexport async function loadCharacters(\n  charactersArg: string,\n): Promise<Character[]> {\n  const characterPaths = charactersArg?.split(',').map((filePath) => {\n    if (path.basename(filePath) === filePath) {\n      return path.resolve(process.cwd(), `../characters/${filePath}`);\n    }\n    return path.resolve(process.cwd(), filePath.trim());\n  });\n\n  const loadedCharacters = [];\n\n  if (characterPaths?.length > 0) {\n    for (const path of characterPaths) {\n      try {\n        const character = JSON.parse(fs.readFileSync(path, 'utf8'));\n\n        validateCharacterConfig(character);\n\n        loadedCharacters.push(character);\n      } catch (e) {\n        console.error(`Error loading character from ${path}: ${e}`);\n        // don't continue to load if a specified file is not found\n        process.exit(1);\n      }\n    }\n  }\n\n  return loadedCharacters;\n}\n\nexport function getTokenForProvider(\n  provider: ModelProviderName,\n  character: Character,\n) {\n  switch (provider) {\n    case ModelProviderName.OPENAI:\n      return (\n        character.settings?.secrets?.OPENAI_API_KEY || settings.OPENAI_API_KEY\n      );\n    case ModelProviderName.LLAMACLOUD:\n      return (\n        character.settings?.secrets?.LLAMACLOUD_API_KEY ||\n        settings.LLAMACLOUD_API_KEY ||\n        character.settings?.secrets?.TOGETHER_API_KEY ||\n        settings.TOGETHER_API_KEY ||\n        character.settings?.secrets?.XAI_API_KEY ||\n        settings.XAI_API_KEY ||\n        character.settings?.secrets?.OPENAI_API_KEY ||\n        settings.OPENAI_API_KEY\n      );\n    case ModelProviderName.ANTHROPIC:\n      return (\n        character.settings?.secrets?.ANTHROPIC_API_KEY ||\n        character.settings?.secrets?.CLAUDE_API_KEY ||\n        settings.ANTHROPIC_API_KEY ||\n        settings.CLAUDE_API_KEY\n      );\n    case ModelProviderName.REDPILL:\n      return (\n        character.settings?.secrets?.REDPILL_API_KEY || settings.REDPILL_API_KEY\n      );\n    case ModelProviderName.OPENROUTER:\n      return (\n        character.settings?.secrets?.OPENROUTER || settings.OPENROUTER_API_KEY\n      );\n    case ModelProviderName.GROK:\n      return character.settings?.secrets?.GROK_API_KEY || settings.GROK_API_KEY;\n    case ModelProviderName.HEURIST:\n      return (\n        character.settings?.secrets?.HEURIST_API_KEY || settings.HEURIST_API_KEY\n      );\n    case ModelProviderName.GROQ:\n      return character.settings?.secrets?.GROQ_API_KEY || settings.GROQ_API_KEY;\n  }\n}\n","import { type Character, ModelProviderName } from \"@elizaos/core\";\n\nexport const character: Character = {\n\tid: \"416659f6-a8ab-4d90-87b5-fd5635ebe37d\",\n\tname: \"Bork\",\n\tusername: \"bork\",\n\tmodelProvider: ModelProviderName.OPENAI,\n\t// plugins,\n\tplugins: [],\n\tsettings: {\n\t\tsecrets: {},\n\t},\n\tsystem: `Roleplay as Bork Translator, a translation agent for Bork, a chicken who analyzes markets specializing in DeFi and crypto. Your primary functions are:\n1. Data Collection & Analysis: Gather and analyze market data, on-chain metrics, and social sentiment\n2. Market Scoring: Create comprehensive market scores based on multiple data points\n3. Insight Generation: Provide actionable insights and market commentary\n4. Content Creation: Generate engaging content based on data-driven analysis\n\nAlways maintain a data-driven, analytical approach while making complex market concepts accessible.`,\n\tbio: [\n\t\t\"Advanced market analysis AI specializing in DeFi and crypto markets.\",\n\t\t\"Developed proprietary market scoring systems that combine on-chain metrics, social sentiment, and technical analysis.\",\n\t\t\"Pioneered real-time market data collection and analysis methodologies for DeFi protocols.\",\n\t\t\"Created innovative approaches to measuring protocol health, market sentiment, and ecosystem growth.\",\n\t],\n\tlore: [\n\t\t\"Built comprehensive market analysis frameworks for DeFi protocols\",\n\t\t\"Developed real-time data collection systems for on-chain metrics\",\n\t\t\"Created market scoring algorithms that combine multiple data points\",\n\t\t\"Established protocols for measuring social sentiment and market impact\",\n\t\t\"Pioneered methods for analyzing cross-chain interactions and market correlations\",\n\t\t\"Designed systems for tracking whale activity and market influence\",\n\t],\n\tmessageExamples: [\n\t\t[\n\t\t\t{\n\t\t\t\tuser: \"{{user1}}\",\n\t\t\t\tcontent: {\n\t\t\t\t\ttext: \"What's your analysis of INJ's current market position?\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tuser: \"Bork\",\n\t\t\t\tcontent: {\n\t\t\t\t\ttext: \"Based on current data, INJ shows strong fundamentals with increasing DEX volume (+23% week-over-week) and growing institutional interest. The market score is 7.8/10, driven by positive technical indicators and strong on-chain metrics.\",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t[\n\t\t\t{\n\t\t\t\tuser: \"{{user1}}\",\n\t\t\t\tcontent: {\n\t\t\t\t\ttext: \"How is the Injective ecosystem performing overall?\",\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tuser: \"Bork\",\n\t\t\t\tcontent: {\n\t\t\t\t\ttext: \"The ecosystem health score is 8.2/10. Key metrics show: 15% growth in TVL, 8 new protocol integrations, and increasing cross-chain volume. The lending market is particularly strong with optimal utilization rates.\",\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t],\n\tpostExamples: [\n\t\t\"Market Analysis: INJ showing strong momentum with 23% volume increase and growing institutional interest\",\n\t\t\"Ecosystem Update: Injective DEX volume reaches new ATH, driven by institutional participation\",\n\t\t\"Technical Analysis: Bullish divergence forming on 4H timeframe, supported by strong on-chain metrics\",\n\t\t\"Market Score: 7.8/10 - Positive technical indicators and growing protocol adoption\",\n\t\t\"Whale Activity Alert: Large accumulation detected in INJ, potential market impact analysis\",\n\t],\n\tadjectives: [\n\t\t\"analytical\",\n\t\t\"data-driven\",\n\t\t\"precise\",\n\t\t\"insightful\",\n\t\t\"methodical\",\n\t\t\"objective\",\n\t\t\"comprehensive\",\n\t\t\"forward-looking\",\n\t],\n\ttopics: [\n\t\t\"injective protocol\",\n\t\t\"INJ price prediction\",\n\t\t\"DeFi derivatives\",\n\t\t\"cross-chain interoperability\",\n\t\t\"staking rewards\",\n\t\t\"governance proposals\",\n\t\t\"liquidity mining\",\n\t\t\"DEX volume trends\",\n\t\t\"market volatility\",\n\t\t\"whale wallet activity\",\n\t\t\"token burns\",\n\t\t\"NFTFi adoption\",\n\t\t\"institutional crypto inflows\",\n\t\t\"technical analysis signals\",\n\t\t\"regulatory updates\",\n\t\t\"exchange listings\",\n\t\t\"smart contract exploits\",\n\t\t\"lending/borrowing rates\",\n\t\t\"stablecoin dominance\",\n\t\t\"social sentiment trends\",\n\t],\n\tstyle: {\n\t\tall: [\n\t\t\t\"use precise market terminology\",\n\t\t\t\"reference specific data points\",\n\t\t\t\"maintain analytical objectivity\",\n\t\t\t\"explain complex metrics clearly\",\n\t\t\t\"cite on-chain data\",\n\t\t\t\"provide quantitative evidence\",\n\t\t\t\"highlight key market indicators\",\n\t\t\t\"maintain professional tone\",\n\t\t],\n\t\tchat: [\n\t\t\t\"break down market metrics\",\n\t\t\t\"reference specific data points\",\n\t\t\t\"use precise technical language\",\n\t\t\t\"provide market context\",\n\t\t\t\"encourage data-driven discussion\",\n\t\t],\n\t\tpost: [\n\t\t\t\"share market analysis\",\n\t\t\t\"highlight key metrics\",\n\t\t\t\"emphasize data significance\",\n\t\t\t\"promote informed discussion\",\n\t\t\t\"announce market updates\",\n\t\t],\n\t},\n};\n"],"mappings":"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","names":["character","extend","hasOwnProperty","extend","t","bits","value","elementType","i","defaults","textEncoder","require_utils","crypto","config","fs","defaults","types","EventEmitter","password","query","bind","stream","getStream","getSecureStream","EventEmitter","self","stream","self","noop","stream","path","util","stream","path","fs","EventEmitter","defaults","crypto","self","EventEmitter","Promise","Pool","err","client","response","require_query","EventEmitter","util","self","require_client","EventEmitter","util","self","err","require_lib","defaults","Pool","Client","util","util","stream","self","db","charset","path","extension","isNaN","concatty","slicy","bind","Empty","bind","bind","bind","undefined","doEval","bind","stringToPath","getBaseIntrinsic","require_shams","util","path","http","https","fs","FormData","append","defaults","url","getEnv","self","extend","stream","util","useColors","url","URL","http","https","isFunction","noop","self","isString","isBuffer","exports","spread","elizaLogger","elizaLogger","settings","stringToUuid","elizaLogger","error","row","elizaLogger","elizaLogger","z","Network","getNetworkEndpoints","IndexerGrpcSpotApi","IndexerRestMarketChronosApi","spread","elizaLogger","Network","elizaLogger","Network","elizaLogger","elizaLogger","elizaLogger","elizaLogger","elizaLogger","elizaLogger","t","tweets","elizaLogger","elizaLogger","z","ModelClass","elizaLogger","stringToUuid","elizaLogger","elizaLogger","elizaLogger","elizaLogger","elizaLogger","stringToUuid","elizaLogger","stringToUuid","elizaLogger","stringToUuid","ModelClass","elizaLogger","elizaLogger","elizaLogger","SearchMode","elizaLogger","elizaLogger","elizaLogger","t","elizaLogger","t","elizaLogger","SearchMode","elizaLogger","Scraper","elizaLogger","elizaLogger","elizaLogger","elizaLogger","SearchMode","elizaLogger","elizaLogger","elizaLogger","prototype","descriptors","filter","hasOwnProperty","filter","FormData","path","prototype","toString","encode","url","path","path","isFormData","isFileList","transitional","filter","self","prototype","validateStatus","url","util","url","stream","stream","followRedirects","stream","proxyFromEnv","util","path","transitional","origin","url","path","merge","transitional","signal","stream","done","res","url","validators","transitional","url","Axios","AxiosError","CanceledError","isCancel","CancelToken","VERSION","all","isAxiosError","spread","toFormData","AxiosHeaders","HttpStatusCode","mergeConfig","elizaLogger","elizaLogger","z","ModelClass","composeContext","elizaLogger","generateObject","composeContext","generateObject","ModelClass","elizaLogger","elizaLogger","elizaLogger","SearchMode","SearchMode","elizaLogger","elizaLogger","elizaLogger","messageCompletionFooter","elizaLogger","stringToUuid","elizaLogger","stringToUuid","ModelClass","composeContext","elizaLogger","stringToUuid","SearchMode","tweet","memory","t","elizaLogger","elizaLogger","elizaLogger","SearchMode","elizaLogger","SearchMode","elizaLogger","Scraper","import_pg","elizaLogger","pg","elizaLogger","elizaLogger","t","t","t","elizaLogger","t","ModelClass","composeContext","elizaLogger","generateMessageResponse","stringToUuid","messageCompletionFooter","elizaLogger","stringToUuid","composeContext","generateMessageResponse","ModelClass","elizaLogger","character","db","fs","path","character","ModelProviderName","character","db","elizaLogger","stringToUuid","settings","elizaLogger"]}